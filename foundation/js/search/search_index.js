var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/ActionBase.html",[0,0.187,1,1.676]],["body/classes/ActionBase.html",[0,0.291,1,1.688,2,0.245,3,0.194,4,0.146,5,3.653,6,1.329,7,0.902,8,2.035,9,2.052,10,3.773,11,0.659,12,2.937,13,2.562,14,2.194,15,2.562,16,2.807,17,2.562,18,2.213,19,1.688,20,2.299,21,2.562,22,2.771,23,2.562,24,2.035,25,2.562,26,2.035,27,3.967,28,2.562,29,1.673,30,2.473,31,2.562,32,1.688,33,2.035,34,0.897,35,1.673,36,2.562,37,3.967,38,4.129,39,2.035,40,2.035,41,0.245,42,0.462,43,3.489,44,3.489,45,1.664,46,2.098,47,2.436,48,2.562,49,2.562,50,3.489,51,0.561,52,0.606,53,0.061,54,1.01,55,1.673,56,1.946,57,1.673,58,1.664,59,1.673,60,2.299,61,1.673,62,1.673,63,1.673,64,2.032,65,1.946,66,1.673,67,2.562,68,4.532,69,1.673,70,2.562,71,3.489,72,2.562,73,0.629,74,2.098,75,2.562,76,2.035,77,1.05,78,0.773,79,1.05,80,2.562,81,1.673,82,1.946,83,4.705,84,0.047,85,3.967,86,2.562,87,2.562,88,2.035,89,1.794,90,3.761,91,2.562,92,1.673,93,2.035,94,1.688,95,2.562,96,2.562,97,1.222,98,1.673,99,2.562,100,2.562,101,2.562,102,3.113,103,1.221,104,1.102,105,0.933,106,2.562,107,2.213,108,2.213,109,0.933,110,3.489,111,1.05,112,0.798,113,0.933,114,1.673,115,1.097,116,0.933,117,0.933,118,0.589,119,1.329,120,0.933,121,1.673,122,1.673,123,0.194,124,1.673,125,1.893,126,4.532,127,1.485,128,0.798,129,2.035,130,2.052,131,0.897,132,2.562,133,1.102,134,1.673,135,1.673,136,3.113,137,0.686,138,1.329,139,1.329,140,1.329,141,0.589,142,1.673,143,2.562,144,1.673,145,1.673,146,3.489,147,3.113,148,1.329,149,1.102,150,1.429,151,1.485,152,1.102,153,1.102,154,1.664,155,1.673,156,0.933,157,1.329,158,1.329,159,1.673,160,1.673,161,1.673,162,1.673,163,1.222,164,2.562,165,1.688,166,1.673,167,1.673,168,1.673,169,1.673,170,1.673,171,1.673,172,1.673,173,1.673,174,1.673,175,1.673,176,1.673,177,1.673,178,1.673,179,1.673,180,0.029]],["title/classes/AlertNotification.html",[0,0.187,181,1.213]],["body/classes/AlertNotification.html",[0,0.282,2,0.564,3,0.344,4,0.258,34,0.763,41,0.435,42,0.694,51,0.942,52,0.757,53,0.06,54,1.04,73,0.694,77,1.216,78,0.896,79,1.216,84,0.044,103,0.763,123,0.344,156,2.146,180,0.044,181,1.835,182,3.216,183,2.357,184,3.877,185,1.509,186,4.516,187,3.929,188,1.835,189,2.967,190,2.027,191,3.847,192,2.535,193,2.967,194,1.504,195,1.289,196,2.967,197,2.967,198,3.847,199,2.967,200,1.416,201,3.717,202,2.357,203,2.357,204,2.357,205,2.357,206,2.967,207,3.847,208,3.847,209,2.967,210,2.967,211,1.956,212,2.967,213,1.956,214,2.967]],["title/classes/AlertTypes.html",[0,0.187,200,1.213]],["body/classes/AlertTypes.html",[0,0.296,2,0.649,3,0.37,4,0.278,7,1.126,11,0.822,34,0.822,41,0.469,42,0.727,51,0.931,52,0.702,53,0.059,54,1.007,84,0.046,123,0.37,137,1.962,180,0.046,181,1.525,182,3.155,194,1.636,195,1.402,200,1.925,201,4.025,203,3.883,204,3.883,205,3.883,215,2.539,216,2.539,217,5.161,218,5.161,219,3.196,220,3.196,221,3.196,222,3.196,223,2.215]],["title/modules/BuildMotionFoundationModule.html",[224,1.213,225,1.676]],["body/modules/BuildMotionFoundationModule.html",[0,0.285,2,0.57,3,0.45,4,0.338,53,0.06,84,0.051,103,1.276,111,1.592,123,0.45,180,0.051,224,1.853,225,2.992,226,3.883,227,4.541,228,2.559,229,4.541,230,3.085,231,4.541]],["title/classes/BusinessProviderBase.html",[0,0.187,232,1.676]],["body/classes/BusinessProviderBase.html",[0,0.299,2,0.339,3,0.267,4,0.201,7,1.144,9,2.14,11,1.281,12,2.685,14,1.944,32,3.077,33,2.58,34,1.048,41,0.339,42,0.586,45,2.049,47,2.738,51,0.903,52,0.671,53,0.061,54,0.992,58,2.125,64,1.55,65,2.273,73,0.677,74,2.095,77,1.54,78,1.296,79,1.54,82,1.812,84,0.037,97,1.944,103,1.104,107,2.095,108,2.095,109,1.289,111,1.331,112,1.102,123,0.267,125,1.792,127,1.792,128,1.102,131,1.295,137,1.331,150,1.289,151,1.55,152,1.522,153,1.522,154,1.55,163,1.102,180,0.037,185,1.134,188,1.55,223,1.55,232,2.475,233,3.709,234,1.522,235,3.248,236,2.58,237,2.14,238,2.58,239,3.248,240,2.58,241,3.248,242,3.248,243,2.58,244,2.685,245,2.685,246,2.14,247,2.14,248,1.835,249,3.248,250,2.31,251,2.31,252,2.31,253,2.58,254,2.31,255,2.58,256,2.14,257,2.31,258,1.812,259,2.685,260,1.944,261,1.825,262,2.58,263,2.58,264,1.835,265,2.685,266,1.835,267,1.522,268,1.835,269,1.835,270,1.835,271,2.58,272,1.835,273,1.835,274,2.14,275,1.835,276,1.289,277,1.835,278,1.835,279,1.835,280,1.522,281,1.835,282,1.835,283,1.835,284,1.835,285,1.835]],["title/classes/ComponentBase.html",[0,0.187,286,1.676]],["body/classes/ComponentBase.html",[0,0.137,2,0.165,3,0.13,4,0.208,7,0.656,10,3.452,11,0.854,14,0.888,18,1.038,20,0.739,32,1.227,34,1.224,41,0.165,42,0.336,45,1.585,46,2.055,47,2.455,51,0.869,52,0.66,53,0.061,54,0.966,58,1.585,64,2.043,65,2.198,73,0.664,74,0.626,76,2.206,77,1.726,78,1.421,79,1.657,84,0.021,88,1.479,89,0.535,94,2.427,97,1.929,103,0.947,107,0.626,108,0.626,109,0.626,111,0.46,112,0.535,113,1.038,115,1.692,116,0.626,117,0.626,123,0.13,125,1.823,127,1.585,128,1.138,129,1.479,131,1.224,133,0.739,137,1.138,138,1.479,139,1.479,140,1.479,141,0.841,149,0.739,150,0.626,151,0.888,154,1.679,156,1.038,157,2.447,158,1.479,163,1.47,165,1.572,180,0.021,181,2.043,185,1.444,187,1.479,188,0.888,190,1.51,192,0.739,194,0.656,195,1.19,200,0.535,202,0.891,213,1.227,216,1.479,223,1.972,237,1.227,238,1.479,246,1.227,258,1.331,260,0.888,276,0.626,286,1.227,287,3.574,288,0.891,289,3.519,290,2.777,291,4.133,292,1.227,293,2.386,294,1.861,295,2.386,296,2.386,297,2.777,298,1.861,299,2.386,300,1.861,301,2.386,302,1.861,303,1.861,304,1.122,305,1.861,306,1.122,307,1.122,308,1.122,309,2.777,310,1.122,311,1.479,312,1.122,313,1.138,314,1.861,315,1.479,316,1.861,317,1.122,318,1.861,319,3.519,320,1.122,321,4.541,322,1.122,323,3.822,324,2.386,325,1.122,326,1.861,327,3.822,328,3.322,329,4.401,330,1.861,331,3.322,332,2.777,333,2.447,334,3.683,335,1.861,336,1.479,337,1.479,338,1.861,339,1.861,340,1.861,341,1.861,342,1.861,343,1.861,344,1.861,345,1.861,346,1.83,347,2.777,348,1.861,349,1.861,350,1.861,351,2.777,352,3.322,353,1.861,354,1.861,355,1.861,356,2.206,357,1.861,358,1.861,359,1.861,360,1.861,361,1.861,362,2.206,363,1.479,364,1.861,365,1.861,366,1.861,367,1.479,368,1.861,369,1.861,370,2.777,371,2.777,372,2.777,373,2.777,374,1.549,375,2.777,376,1.479,377,1.227,378,1.861,379,1.861,380,1.861,381,1.861,382,1.122,383,1.122,384,1.861,385,1.861,386,2.206,387,1.479,388,1.038,389,1.038,390,1.038,391,1.122,392,1.227,393,1.861,394,1.861,395,1.861,396,1.861,397,1.122,398,2.926,399,1.038,400,1.122,401,1.122,402,1.861,403,1.122,404,1.895,405,2.777,406,2.386,407,1.861,408,1.122,409,1.861,410,1.122,411,1.861,412,0.891,413,1.122,414,1.122,415,1.861,416,1.122,417,4.282,418,2.777,419,1.122,420,1.122,421,2.386,422,1.122,423,1.122,424,1.122,425,1.122,426,1.122,427,2.777,428,2.386,429,1.861,430,1.122,431,1.122,432,1.861,433,1.122,434,1.861,435,1.861,436,1.122,437,1.122,438,1.122,439,1.122,440,1.122,441,1.122,442,2.386,443,1.122,444,1.122,445,1.122,446,1.122,447,0.891,448,1.122,449,1.122,450,1.122,451,1.122,452,1.861,453,1.122,454,1.861,455,0.891,456,1.122,457,1.479,458,1.122,459,1.122,460,1.122,461,1.122,462,0.739,463,1.122,464,0.739,465,1.122,466,0.739,467,1.122,468,0.891,469,1.122]],["title/classes/ErrorResponse.html",[0,0.187,115,0.896]],["body/classes/ErrorResponse.html",[0,0.313,2,0.514,3,0.406,4,0.305,41,0.514,42,0.77,51,0.83,52,0.676,53,0.06,54,1.04,73,0.77,84,0.048,103,0.901,115,1.623,118,1.234,120,1.954,123,0.406,131,1.302,141,1.234,156,2.382,180,0.048,185,1.448,190,2.015,194,1.623,195,1.289,388,2.675,390,2.675,470,3.905,471,1.954,472,2.783,473,2.783,474,2.783,475,2.783]],["title/injectables/HttpBaseService.html",[56,1.419,476,1.213]],["body/injectables/HttpBaseService.html",[0,0.109,2,0.217,3,0.171,4,0.129,7,0.522,11,0.381,14,1.884,16,2.602,18,1.3,20,1.536,22,1.852,24,1.177,30,1.177,34,1.232,41,0.217,42,0.42,45,1.801,46,2.348,51,0.738,52,0.687,53,0.061,54,0.982,56,1.823,58,1.801,60,2.154,64,2.285,73,0.759,77,1.677,78,1.235,79,1.766,82,0.826,84,0.026,89,0.707,97,1.112,103,1.052,104,0.976,105,0.826,111,0.955,112,0.707,113,2.742,115,1.33,116,0.826,117,0.826,118,0.821,119,1.177,120,0.826,123,0.171,125,1.696,127,1.696,128,1.696,131,1.232,141,1.015,151,1.112,154,2.096,163,0.707,165,0.976,180,0.026,184,4.006,185,1.192,188,1.112,190,0.607,192,1.536,194,0.522,195,0.447,211,1.536,223,2.008,228,0.976,234,0.976,240,1.852,243,1.177,244,2.154,245,2.154,247,1.536,256,1.536,258,1.608,259,0.976,260,0.707,265,2.342,267,0.976,274,1.536,276,2.688,292,1.536,313,2.285,333,2.29,346,1.899,356,2.998,363,1.177,374,1.608,377,1.536,388,0.826,389,2.106,390,1.3,398,1.177,399,0.826,462,0.976,464,0.976,466,0.976,476,1.375,477,3.643,478,3.804,479,3.268,480,2.331,481,2.331,482,2.882,483,2.331,484,2.29,485,1.481,486,2.331,487,2.331,488,1.481,489,1.481,490,2.596,491,3.268,492,3.268,493,3.268,494,3.268,495,2.331,496,1.481,497,4.308,498,1.852,499,2.331,500,2.882,501,2.882,502,2.331,503,1.481,504,2.882,505,1.481,506,3.774,507,4.091,508,2.998,509,1.481,510,2.331,511,3.268,512,2.331,513,2.331,514,2.331,515,1.481,516,2.331,517,1.177,518,1.481,519,2.29,520,1.852,521,1.481,522,1.481,523,1.481,524,1.481,525,2.29,526,1.481,527,2.331,528,2.331,529,2.331,530,1.481,531,1.481,532,1.852,533,1.481,534,1.481,535,1.481,536,1.481,537,1.481,538,1.177,539,1.481,540,1.177,541,1.481,542,1.481,543,1.177,544,1.177,545,1.481,546,1.177,547,1.177,548,1.852,549,1.852,550,1.852,551,1.481,552,1.481,553,1.481,554,2.331,555,2.331,556,1.481,557,2.331,558,1.481,559,1.481,560,1.481,561,1.481,562,1.481,563,1.481,564,1.177]],["title/interfaces/OAuthErrorResponse.html",[261,1.042,565,1.419]],["body/interfaces/OAuthErrorResponse.html",[2,0.576,3,0.454,4,0.342,41,0.576,42,0.824,51,0.872,52,0.576,53,0.057,84,0.052,123,0.454,131,1.009,180,0.052,261,1.873,471,2.19,565,2.549,566,3.118,567,3.955]],["title/classes/ServiceBase.html",[0,0.187,568,1.676]],["body/classes/ServiceBase.html",[0,0.318,2,0.182,3,0.144,4,0.108,7,1.146,9,2.528,11,0.897,12,1.947,14,1.946,34,1.249,39,2.036,40,2.036,41,0.182,42,0.365,45,2.032,46,2.417,47,2.625,51,0.836,52,0.662,53,0.061,54,0.954,58,1.665,60,2.425,64,2.245,65,2.213,73,0.793,74,1.429,77,1.572,78,1.308,79,1.572,82,1.129,84,0.023,89,1.756,93,2.585,94,1.947,97,1.83,103,0.946,104,0.819,105,0.693,107,0.693,108,0.693,109,0.693,111,0.509,112,0.593,113,1.947,115,1.57,116,0.693,117,1.129,123,0.144,125,1.946,127,1.665,128,0.966,130,1.689,131,1.275,137,1.05,141,1.471,148,0.987,149,0.819,150,1.129,151,1.83,152,1.689,154,2.126,163,1.83,180,0.023,185,1.487,188,1.223,190,0.509,194,1.041,195,0.611,211,1.334,223,0.966,236,2.585,237,1.334,244,1.947,245,1.947,246,1.334,247,1.334,248,0.987,253,1.608,255,2.036,256,1.334,258,2.14,259,2.144,260,1.41,261,1.43,262,1.608,263,1.608,264,0.987,265,2.752,266,1.608,267,1.334,268,1.608,269,1.608,270,1.608,271,1.608,272,1.608,273,0.987,274,2.144,275,1.608,276,1.648,277,0.987,278,0.987,279,2.036,281,0.987,282,0.987,283,0.987,284,0.987,285,0.987,292,1.334,311,1.608,313,0.966,346,1.334,374,1.129,392,2.144,399,1.129,447,0.987,455,1.608,457,0.987,462,1.334,464,1.334,466,1.689,468,0.987,476,1.223,478,3.494,484,2.036,490,1.608,498,2.923,508,2.036,517,0.987,519,2.347,520,1.608,525,3.152,532,1.608,538,0.987,540,2.036,543,1.608,544,1.608,546,1.608,547,0.987,548,1.608,549,1.608,550,1.608,564,0.987,565,1.648,567,0.987,568,1.947,569,3.54,570,0.987,571,2.955,572,2.585,573,2.024,574,2.024,575,2.562,576,2.955,577,2.955,578,2.024,579,1.429,580,2.562,581,2.562,582,2.562,583,1.242,584,1.242,585,1.242,586,1.242,587,2.024,588,1.242,589,2.024,590,2.024,591,1.242,592,1.608,593,2.024,594,2.955,595,1.242,596,1.242,597,1.242,598,1.242,599,2.024,600,1.242,601,1.242,602,2.024,603,2.024,604,2.024,605,1.242,606,2.024,607,2.024,608,2.024,609,1.608,610,1.242,611,1.242,612,1.242,613,1.242,614,2.024,615,2.562,616,2.024,617,2.024,618,1.242,619,2.024,620,2.562,621,1.242,622,0.987]],["title/classes/ServiceError.html",[0,0.187,118,0.896]],["body/classes/ServiceError.html",[0,0.297,2,0.471,3,0.555,4,0.28,7,1.132,8,2.553,34,0.826,41,0.471,42,0.73,51,0.931,52,0.718,53,0.059,54,1.062,73,0.579,78,1.404,84,0.046,89,1.533,118,1.426,123,0.372,130,2.117,133,3.065,137,1.317,141,1.426,180,0.046,185,1.448,195,0.97,213,2.117,313,1.533,315,3.215,376,2.553,377,2.117,387,2.553,389,2.595,390,2.595,399,1.793,609,3.809,623,3.275,624,2.553,625,3.213,626,3.213,627,3.213,628,3.213,629,3.213,630,3.213,631,3.213,632,3.213,633,3.213,634,3.213,635,3.213,636,3.213,637,3.213,638,3.213,639,3.213,640,3.213,641,3.213,642,3.213,643,3.213,644,3.213,645,3.213,646,3.213,647,3.213]],["title/classes/ServiceResponse.html",[0,0.187,648,1.676]],["body/classes/ServiceResponse.html",[0,0.316,2,0.521,3,0.411,4,0.309,41,0.521,42,0.776,51,0.835,52,0.707,53,0.059,54,1.045,73,0.776,84,0.049,103,0.913,118,1.251,120,1.981,123,0.411,131,1.239,141,1.251,180,0.049,185,1.454,190,2.023,194,1.251,195,1.072,374,2.687,388,2.687,389,2.585,471,1.981,472,2.821,473,2.821,474,2.821,475,2.821,623,3.252,648,2.837]],["title/coverage.html",[649,2.757]],["body/coverage.html",[0,0.377,1,2.278,4,0.301,5,2.746,6,2.746,11,0.889,52,0.507,53,0.059,56,1.928,73,0.623,84,0.048,115,1.218,118,1.218,131,0.889,180,0.048,181,1.649,182,2.791,183,2.746,200,1.649,215,2.746,232,2.278,233,2.746,234,2.791,261,1.417,286,2.278,287,2.746,288,2.746,470,2.746,471,2.555,476,1.649,477,2.746,565,1.928,566,2.746,568,2.278,569,2.746,570,2.746,622,3.792,623,2.791,624,2.746,648,2.278,649,2.746,650,2.746,651,3.456,652,3.456,653,3.456,654,3.456,655,3.456,656,3.456,657,3.456,658,3.456,659,3.456,660,3.456,661,3.456,662,3.456,663,3.456,664,4.235,665,3.456,666,3.456,667,3.456,668,3.456,669,3.456,670,3.456,671,3.456]],["title/dependencies.html",[579,1.706,672,2.123]],["body/dependencies.html",[53,0.061,84,0.049,105,1.981,180,0.049,228,2.34,230,2.821,412,2.821,579,1.981,673,3.551,674,5.158,675,3.551,676,3.551,677,4.305,678,4.305,679,3.551,680,3.551,681,3.551,682,3.551,683,3.551,684,3.551,685,3.551,686,3.551,687,3.551,688,3.551,689,3.551,690,4.633,691,3.551,692,3.42,693,3.551,694,4.305,695,3.551,696,3.551,697,3.551,698,3.551,699,3.551,700,3.551,701,3.551,702,3.551,703,3.551,704,3.551,705,3.551,706,3.551]],["title/index.html",[19,1.399,41,0.312,707,2.123]],["body/index.html",[3,0.45,4,0.262,11,0.776,16,2.562,19,2.562,26,2.396,34,1.209,53,0.049,73,0.544,78,0.911,84,0.044,153,3.304,180,0.044,260,2.297,280,1.988,313,1.855,336,2.396,337,2.396,362,3.089,367,2.396,386,3.418,404,2.396,572,3.825,592,3.891,650,2.396,692,2.396,708,3.017,709,4.302,710,4.544,711,3.888,712,4.815,713,3.017,714,3.017,715,3.017,716,3.888,717,3.017,718,4.544,719,4.815,720,3.017,721,3.017,722,3.017,723,3.017,724,3.017,725,3.017,726,3.017,727,3.017,728,3.017,729,5.014,730,4.302,731,3.017,732,3.017,733,3.017,734,3.017,735,3.017,736,3.017,737,3.888,738,4.302,739,4.302,740,3.017,741,3.017,742,3.017,743,3.017,744,3.017,745,3.017,746,3.017,747,3.017,748,3.017,749,3.017,750,3.017,751,3.017,752,3.017,753,3.017,754,3.888,755,4.815,756,4.302,757,3.017,758,4.544,759,3.017,760,3.017,761,3.017,762,3.017,763,3.017,764,3.017,765,3.017,766,3.017,767,3.017]],["title/modules.html",[224,1.656]],["body/modules.html",[53,0.053,84,0.053,180,0.053,224,1.957,225,2.703,768,4.101,769,4.101,770,4.101]],["title/overview.html",[771,2.757]],["body/overview.html",[0,0.291,11,1.02,18,2.709,53,0.052,84,0.052,123,0.459,180,0.052,224,2.194,261,1.626,280,2.615,392,2.615,476,1.893,579,2.213,771,3.152,772,3.968,773,3.968,774,3.968,775,4.598,776,3.968]]],"invertedIndex":[["",{"_index":53,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"modules/BuildMotionFoundationModule.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":622,"title":{},"body":{"classes/ServiceBase.html":{},"coverage.html":{}}}],["0.0.1",{"_index":706,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":698,"title":{},"body":{"dependencies.html":{}}}],["0.8.19",{"_index":686,"title":{},"body":{"dependencies.html":{}}}],["0/2",{"_index":665,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":664,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":661,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":18,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"overview.html":{}}}],["1.0.3",{"_index":688,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":700,"title":{},"body":{"dependencies.html":{}}}],["1/5",{"_index":663,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":667,"title":{},"body":{"coverage.html":{}}}],["110194344",{"_index":435,"title":{},"body":{"classes/ComponentBase.html":{}}}],["12/15",{"_index":669,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":666,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":20,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{}}}],["2.4.1",{"_index":682,"title":{},"body":{"dependencies.html":{}}}],["2/8",{"_index":656,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":662,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":655,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":22,"title":{},"body":{"classes/ActionBase.html":{},"injectables/HttpBaseService.html":{}}}],["4",{"_index":24,"title":{},"body":{"classes/ActionBase.html":{},"injectables/HttpBaseService.html":{}}}],["4.10.0",{"_index":704,"title":{},"body":{"dependencies.html":{}}}],["41",{"_index":653,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":657,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":26,"title":{},"body":{"classes/ActionBase.html":{},"index.html":{}}}],["5.0.1",{"_index":693,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":690,"title":{},"body":{"dependencies.html":{}}}],["5.2.7",{"_index":674,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":684,"title":{},"body":{"dependencies.html":{}}}],["5/12",{"_index":654,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":659,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":28,"title":{},"body":{"classes/ActionBase.html":{}}}],["7/14",{"_index":660,"title":{},"body":{"coverage.html":{}}}],["8/18",{"_index":658,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":668,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":776,"title":{},"body":{"overview.html":{}}}],["_bodi",{"_index":567,"title":{},"body":{"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{}}}],["abov",{"_index":369,"title":{},"body":{"classes/ComponentBase.html":{}}}],["access",{"_index":235,"title":{},"body":{"classes/BusinessProviderBase.html":{}}}],["accesstoken",{"_index":244,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["account",{"_index":638,"title":{},"body":{"classes/ServiceError.html":{}}}],["action",{"_index":10,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{}}}],["action(",{"_index":385,"title":{},"body":{"classes/ComponentBase.html":{}}}],["actionbas",{"_index":1,"title":{"classes/ActionBase.html":{}},"body":{"classes/ActionBase.html":{},"coverage.html":{}}}],["actionnam",{"_index":43,"title":{},"body":{"classes/ActionBase.html":{}}}],["actionresult",{"_index":102,"title":{},"body":{"classes/ActionBase.html":{}}}],["actionresult.fail",{"_index":147,"title":{},"body":{"classes/ActionBase.html":{}}}],["actionresult.success",{"_index":162,"title":{},"body":{"classes/ActionBase.html":{}}}],["add",{"_index":262,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["addit",{"_index":364,"title":{},"body":{"classes/ComponentBase.html":{}}}],["affect",{"_index":354,"title":{},"body":{"classes/ComponentBase.html":{}}}],["alert",{"_index":201,"title":{},"body":{"classes/AlertNotification.html":{},"classes/AlertTypes.html":{}}}],["alert(messag",{"_index":469,"title":{},"body":{"classes/ComponentBase.html":{}}}],["alertcompon",{"_index":216,"title":{},"body":{"classes/AlertTypes.html":{},"classes/ComponentBase.html":{}}}],["alertnotif",{"_index":181,"title":{"classes/AlertNotification.html":{}},"body":{"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/ComponentBase.html":{},"coverage.html":{}}}],["alerttyp",{"_index":200,"title":{"classes/AlertTypes.html":{}},"body":{"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/ComponentBase.html":{},"coverage.html":{}}}],["alerttypes.inform",{"_index":198,"title":{},"body":{"classes/AlertNotification.html":{}}}],["alerttypes.warn",{"_index":452,"title":{},"body":{"classes/ComponentBase.html":{}}}],["allow",{"_index":580,"title":{},"body":{"classes/ServiceBase.html":{}}}],["alpha",{"_index":643,"title":{},"body":{"classes/ServiceError.html":{}}}],["analyt",{"_index":327,"title":{},"body":{"classes/ComponentBase.html":{}}}],["angular",{"_index":572,"title":{},"body":{"classes/ServiceBase.html":{},"index.html":{}}}],["angular/anim",{"_index":673,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":230,"title":{},"body":{"modules/BuildMotionFoundationModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":675,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":228,"title":{},"body":{"modules/BuildMotionFoundationModule.html":{},"injectables/HttpBaseService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":676,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":105,"title":{},"body":{"classes/ActionBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":677,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":412,"title":{},"body":{"classes/ComponentBase.html":{},"dependencies.html":{}}}],["anoth",{"_index":372,"title":{},"body":{"classes/ComponentBase.html":{}}}],["api",{"_index":399,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{}}}],["api(",{"_index":520,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["app",{"_index":730,"title":{},"body":{"index.html":{}}}],["app=myapp",{"_index":739,"title":{},"body":{"index.html":{}}}],["append",{"_index":603,"title":{},"body":{"classes/ServiceBase.html":{}}}],["applic",{"_index":260,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"index.html":{}}}],["application'",{"_index":8,"title":{},"body":{"classes/ActionBase.html":{},"classes/ServiceError.html":{}}}],["application/json",{"_index":531,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["application/x",{"_index":491,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["approach",{"_index":722,"title":{},"body":{"index.html":{}}}],["array",{"_index":190,"title":{},"body":{"classes/AlertNotification.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceResponse.html":{}}}],["artifact",{"_index":748,"title":{},"body":{"index.html":{}}}],["associ",{"_index":96,"title":{},"body":{"classes/ActionBase.html":{}}}],["attempt",{"_index":465,"title":{},"body":{"classes/ComponentBase.html":{}}}],["audit",{"_index":21,"title":{},"body":{"classes/ActionBase.html":{}}}],["author",{"_index":499,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["auto",{"_index":436,"title":{},"body":{"classes/ComponentBase.html":{}}}],["automat",{"_index":742,"title":{},"body":{"index.html":{}}}],["avail",{"_index":769,"title":{},"body":{"modules.html":{}}}],["base",{"_index":9,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["base.action.t",{"_index":6,"title":{},"body":{"classes/ActionBase.html":{},"coverage.html":{}}}],["base.action.ts:129",{"_index":81,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.action.ts:152",{"_index":69,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.action.ts:41",{"_index":62,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.action.ts:42",{"_index":61,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.action.ts:43",{"_index":57,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.action.ts:44",{"_index":59,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.action.ts:45",{"_index":55,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.action.ts:51",{"_index":92,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.action.ts:55",{"_index":66,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.action.ts:81",{"_index":63,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.action.ts:98",{"_index":98,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.component.t",{"_index":288,"title":{},"body":{"classes/ComponentBase.html":{},"coverage.html":{}}}],["base.component.ts:120",{"_index":383,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:16",{"_index":307,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:17",{"_index":306,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:170",{"_index":401,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:18",{"_index":305,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:185",{"_index":397,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:201",{"_index":391,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:209",{"_index":403,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:22",{"_index":308,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:226",{"_index":410,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:23",{"_index":310,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:230",{"_index":317,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:238",{"_index":408,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:51",{"_index":325,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:64",{"_index":320,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.component.ts:99",{"_index":312,"title":{},"body":{"classes/ComponentBase.html":{}}}],["base.servic",{"_index":114,"title":{},"body":{"classes/ActionBase.html":{}}}],["base.service.t",{"_index":234,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{},"coverage.html":{}}}],["base.service.ts:112",{"_index":515,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:129",{"_index":518,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:14",{"_index":252,"title":{},"body":{"classes/BusinessProviderBase.html":{}}}],["base.service.ts:15",{"_index":251,"title":{},"body":{"classes/BusinessProviderBase.html":{}}}],["base.service.ts:16",{"_index":249,"title":{},"body":{"classes/BusinessProviderBase.html":{}}}],["base.service.ts:165",{"_index":521,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:171",{"_index":488,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:18",{"_index":250,"title":{},"body":{"classes/BusinessProviderBase.html":{}}}],["base.service.ts:26",{"_index":524,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:27",{"_index":486,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:30",{"_index":522,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:31",{"_index":523,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:37",{"_index":503,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:38",{"_index":257,"title":{},"body":{"classes/BusinessProviderBase.html":{}}}],["base.service.ts:50",{"_index":254,"title":{},"body":{"classes/BusinessProviderBase.html":{}}}],["base.service.ts:54",{"_index":489,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:71",{"_index":496,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.service.ts:89",{"_index":509,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["base.t",{"_index":570,"title":{},"body":{"classes/ServiceBase.html":{},"coverage.html":{}}}],["base.ts:125",{"_index":598,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:159",{"_index":586,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:169",{"_index":591,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:18",{"_index":583,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:19",{"_index":585,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:193",{"_index":601,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:20",{"_index":578,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:232",{"_index":605,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:30",{"_index":584,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:37",{"_index":588,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:54",{"_index":600,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:70",{"_index":595,"title":{},"body":{"classes/ServiceBase.html":{}}}],["base.ts:88",{"_index":596,"title":{},"body":{"classes/ServiceBase.html":{}}}],["bearer",{"_index":528,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["befor",{"_index":761,"title":{},"body":{"index.html":{}}}],["behavior",{"_index":571,"title":{},"body":{"classes/ServiceBase.html":{}}}],["behaviorsubject",{"_index":525,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["behaviorsubject(respons",{"_index":549,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["behaviorsubject.asobserv",{"_index":614,"title":{},"body":{"classes/ServiceBase.html":{}}}],["below",{"_index":358,"title":{},"body":{"classes/ComponentBase.html":{}}}],["bodi",{"_index":508,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["body.data",{"_index":612,"title":{},"body":{"classes/ServiceBase.html":{}}}],["boolean",{"_index":389,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{}}}],["bootstrap",{"_index":774,"title":{},"body":{"overview.html":{}}}],["brows",{"_index":770,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":678,"title":{},"body":{"dependencies.html":{}}}],["bubbl",{"_index":138,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{}}}],["build",{"_index":719,"title":{},"body":{"index.html":{}}}],["buildmotion/act",{"_index":106,"title":{},"body":{"classes/ActionBase.html":{}}}],["buildmotion/log",{"_index":111,"title":{},"body":{"classes/ActionBase.html":{},"modules/BuildMotionFoundationModule.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["buildmotion/rul",{"_index":107,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["buildmotionfoundationmodul",{"_index":225,"title":{"modules/BuildMotionFoundationModule.html":{}},"body":{"modules/BuildMotionFoundationModule.html":{},"modules.html":{}}}],["buildmotionloggingmodul",{"_index":231,"title":{},"body":{"modules/BuildMotionFoundationModule.html":{}}}],["buildmotionloggingservic",{"_index":58,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["buildmotionworkspac",{"_index":708,"title":{},"body":{"index.html":{}}}],["busi",{"_index":32,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{}}}],["businessproviderbas",{"_index":232,"title":{"classes/BusinessProviderBase.html":{}},"body":{"classes/BusinessProviderBase.html":{},"coverage.html":{}}}],["calcul",{"_index":355,"title":{},"body":{"classes/ComponentBase.html":{}}}],["call",{"_index":519,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["caller",{"_index":140,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{}}}],["catch",{"_index":464,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["catch(error",{"_index":541,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["categori",{"_index":329,"title":{},"body":{"classes/ComponentBase.html":{}}}],["chang",{"_index":744,"title":{},"body":{"index.html":{}}}],["charact",{"_index":645,"title":{},"body":{"classes/ServiceError.html":{}}}],["check",{"_index":766,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{}},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"modules/BuildMotionFoundationModule.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"coverage.html":{},"overview.html":{}}}],["class.html",{"_index":511,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["clear",{"_index":602,"title":{},"body":{"classes/ServiceBase.html":{}}}],["cli",{"_index":710,"title":{},"body":{"index.html":{}}}],["code",{"_index":745,"title":{},"body":{"index.html":{}}}],["collect",{"_index":242,"title":{},"body":{"classes/BusinessProviderBase.html":{}}}],["common",{"_index":236,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["commonj",{"_index":703,"title":{},"body":{"dependencies.html":{}}}],["commonmodul",{"_index":229,"title":{},"body":{"modules/BuildMotionFoundationModule.html":{}}}],["complet",{"_index":277,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["compon",{"_index":386,"title":{},"body":{"classes/ComponentBase.html":{},"index.html":{}}}],["componentbas",{"_index":286,"title":{"classes/ComponentBase.html":{}},"body":{"classes/ComponentBase.html":{},"coverage.html":{}}}],["componentnam",{"_index":289,"title":{},"body":{"classes/ComponentBase.html":{}}}],["composit",{"_index":85,"title":{},"body":{"classes/ActionBase.html":{}}}],["composite.haserror",{"_index":166,"title":{},"body":{"classes/ActionBase.html":{}}}],["composite.results.filt",{"_index":167,"title":{},"body":{"classes/ActionBase.html":{}}}],["compositerul",{"_index":110,"title":{},"body":{"classes/ActionBase.html":{}}}],["concret",{"_index":99,"title":{},"body":{"classes/ActionBase.html":{}}}],["const",{"_index":154,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["constructor",{"_index":188,"title":{},"body":{"classes/AlertNotification.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["constructor(componentnam",{"_index":304,"title":{},"body":{"classes/ComponentBase.html":{}}}],["constructor(head",{"_index":189,"title":{},"body":{"classes/AlertNotification.html":{}}}],["constructor(http",{"_index":485,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["constructor(loggingservic",{"_index":248,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["constructor(publ",{"_index":264,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["contain",{"_index":89,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{}}}],["content",{"_index":490,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["context",{"_index":455,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["core",{"_index":680,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":360,"title":{},"body":{"classes/ComponentBase.html":{}}}],["coverag",{"_index":649,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":313,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"index.html":{}}}],["createerrorrespons",{"_index":292,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["createerrorresponse(error",{"_index":487,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["createerrorresponse(messag",{"_index":311,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["createformurlencodedhead",{"_index":479,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["createhead",{"_index":480,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["createheader(requiresauthtoken",{"_index":495,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["createmultipartformdatahead",{"_index":481,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["createmultipartformdataheader(requiresauthtoken",{"_index":502,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["createrequestopt",{"_index":482,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["createrequestoptions(method",{"_index":505,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["credenti",{"_index":617,"title":{},"body":{"classes/ServiceBase.html":{}}}],["current",{"_index":498,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["danger",{"_index":205,"title":{},"body":{"classes/AlertNotification.html":{},"classes/AlertTypes.html":{}}}],["data",{"_index":374,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceResponse.html":{}}}],["declar",{"_index":773,"title":{},"body":{"overview.html":{}}}],["default",{"_index":194,"title":{},"body":{"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceResponse.html":{}}}],["defin",{"_index":54,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{}}}],["depend",{"_index":579,"title":{"dependencies.html":{}},"body":{"classes/ServiceBase.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":7,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{}}}],["design",{"_index":717,"title":{},"body":{"index.html":{}}}],["desir",{"_index":629,"title":{},"body":{"classes/ServiceError.html":{}}}],["detail",{"_index":363,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{}}}],["determin",{"_index":129,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{}}}],["dev",{"_index":740,"title":{},"body":{"index.html":{}}}],["develop",{"_index":736,"title":{},"body":{"index.html":{}}}],["devtool",{"_index":695,"title":{},"body":{"dependencies.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":747,"title":{},"body":{"index.html":{}}}],["directori",{"_index":750,"title":{},"body":{"index.html":{}}}],["display",{"_index":213,"title":{},"body":{"classes/AlertNotification.html":{},"classes/ComponentBase.html":{},"classes/ServiceError.html":{}}}],["displaytous",{"_index":609,"title":{},"body":{"classes/ServiceBase.html":{},"classes/ServiceError.html":{}}}],["displaytouser\":true,\"target",{"_index":647,"title":{},"body":{"classes/ServiceError.html":{}}}],["dist",{"_index":749,"title":{},"body":{"index.html":{}}}],["document",{"_index":650,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotnet",{"_index":702,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":351,"title":{},"body":{"classes/ComponentBase.html":{}}}],["duplic",{"_index":353,"title":{},"body":{"classes/ComponentBase.html":{}}}],["dure",{"_index":243,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{}}}],["dynam",{"_index":679,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":618,"title":{},"body":{"classes/ServiceBase.html":{}}}],["e.displaytous",{"_index":457,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["e.messagetyp",{"_index":149,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["e.tostr",{"_index":152,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["e2",{"_index":759,"title":{},"body":{"index.html":{}}}],["each",{"_index":239,"title":{},"body":{"classes/BusinessProviderBase.html":{}}}],["element",{"_index":237,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["end",{"_index":758,"title":{},"body":{"index.html":{}}}],["engin",{"_index":108,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["enterpris",{"_index":716,"title":{},"body":{"index.html":{}}}],["enum.html",{"_index":513,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["err",{"_index":556,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["err.messag",{"_index":559,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["err.nam",{"_index":558,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["error",{"_index":131,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceResponse.html":{},"coverage.html":{}}}],["error._bodi",{"_index":544,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["error.json",{"_index":547,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["error.messag",{"_index":267,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["error.model",{"_index":120,"title":{},"body":{"classes/ActionBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceResponse.html":{}}}],["error.model.t",{"_index":624,"title":{},"body":{"classes/ServiceError.html":{},"coverage.html":{}}}],["error.model.ts:16",{"_index":633,"title":{},"body":{"classes/ServiceError.html":{}}}],["error.model.ts:17",{"_index":632,"title":{},"body":{"classes/ServiceError.html":{}}}],["error.model.ts:18",{"_index":631,"title":{},"body":{"classes/ServiceError.html":{}}}],["error.model.ts:19",{"_index":630,"title":{},"body":{"classes/ServiceError.html":{}}}],["error.model.ts:20",{"_index":634,"title":{},"body":{"classes/ServiceError.html":{}}}],["error.model.ts:21",{"_index":635,"title":{},"body":{"classes/ServiceError.html":{}}}],["error.nam",{"_index":562,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["error.stack",{"_index":273,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["error.tostr",{"_index":466,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["error/messag",{"_index":627,"title":{},"body":{"classes/ServiceError.html":{}}}],["error/rul",{"_index":135,"title":{},"body":{"classes/ActionBase.html":{}}}],["errormessag",{"_index":557,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["errorrespons",{"_index":115,"title":{"classes/ErrorResponse.html":{}},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"coverage.html":{}}}],["errorresponse.error",{"_index":459,"title":{},"body":{"classes/ComponentBase.html":{}}}],["errorresponse.errors.foreach(",{"_index":460,"title":{},"body":{"classes/ComponentBase.html":{}}}],["errorresponse.issuccess",{"_index":155,"title":{},"body":{"classes/ActionBase.html":{}}}],["errorresponse.messag",{"_index":157,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{}}}],["errorresult.rulepolici",{"_index":171,"title":{},"body":{"classes/ActionBase.html":{}}}],["errors\":[{\"name\":\"passwordformatisvalid",{"_index":639,"title":{},"body":{"classes/ServiceError.html":{}}}],["errors.foreach(errorresult",{"_index":169,"title":{},"body":{"classes/ActionBase.html":{}}}],["errors.push(e.messag",{"_index":461,"title":{},"body":{"classes/ComponentBase.html":{}}}],["etc",{"_index":552,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["evaluaterul",{"_index":25,"title":{},"body":{"classes/ActionBase.html":{}}}],["event",{"_index":321,"title":{},"body":{"classes/ComponentBase.html":{}}}],["event.urlafterredirect",{"_index":427,"title":{},"body":{"classes/ComponentBase.html":{}}}],["event_categori",{"_index":425,"title":{},"body":{"classes/ComponentBase.html":{}}}],["event_label",{"_index":426,"title":{},"body":{"classes/ComponentBase.html":{}}}],["ex",{"_index":555,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["exampl",{"_index":368,"title":{},"body":{"classes/ComponentBase.html":{}}}],["except",{"_index":390,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceError.html":{}}}],["exception\":null,\"source\":\"createlearneraccountact",{"_index":646,"title":{},"body":{"classes/ServiceError.html":{}}}],["execut",{"_index":16,"title":{},"body":{"classes/ActionBase.html":{},"injectables/HttpBaseService.html":{},"index.html":{}}}],["executerequest",{"_index":483,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["executerequest(requestopt",{"_index":514,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["exist",{"_index":158,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{}}}],["export",{"_index":123,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"modules/BuildMotionFoundationModule.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"overview.html":{}}}],["extend",{"_index":40,"title":{},"body":{"classes/ActionBase.html":{},"classes/ServiceBase.html":{}}}],["extens",{"_index":713,"title":{},"body":{"index.html":{}}}],["extract",{"_index":589,"title":{},"body":{"classes/ServiceBase.html":{}}}],["extractdata",{"_index":573,"title":{},"body":{"classes/ServiceBase.html":{}}}],["extractdata(respons",{"_index":587,"title":{},"body":{"classes/ServiceBase.html":{}}}],["f",{"_index":282,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["f.displaytous",{"_index":283,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["f.messagetyp",{"_index":284,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["fail",{"_index":448,"title":{},"body":{"classes/ComponentBase.html":{}}}],["fals",{"_index":156,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"modules/BuildMotionFoundationModule.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"coverage.html":{},"index.html":{}}}],["finish",{"_index":39,"title":{},"body":{"classes/ActionBase.html":{},"classes/ServiceBase.html":{}}}],["finishrequest",{"_index":246,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["finishrequest(messag",{"_index":316,"title":{},"body":{"classes/ComponentBase.html":{}}}],["finishrequest(sourcenam",{"_index":253,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["first",{"_index":728,"title":{},"body":{"index.html":{}}}],["flag",{"_index":752,"title":{},"body":{"index.html":{}}}],["foreach(",{"_index":285,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["form",{"_index":493,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["format",{"_index":387,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ServiceError.html":{}}}],["framework",{"_index":101,"title":{},"body":{"classes/ActionBase.html":{}}}],["freez",{"_index":697,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":71,"title":{},"body":{"classes/ActionBase.html":{}}}],["further",{"_index":764,"title":{},"body":{"index.html":{}}}],["ga('creat",{"_index":433,"title":{},"body":{"classes/ComponentBase.html":{}}}],["ga(`${this.componentname}.send",{"_index":437,"title":{},"body":{"classes/ComponentBase.html":{}}}],["ga_tracking_id",{"_index":442,"title":{},"body":{"classes/ComponentBase.html":{}}}],["gener",{"_index":592,"title":{},"body":{"classes/ServiceBase.html":{},"index.html":{}}}],["get",{"_index":707,"title":{"index.html":{}},"body":{}}],["given",{"_index":343,"title":{},"body":{"classes/ComponentBase.html":{}}}],["go",{"_index":765,"title":{},"body":{"index.html":{}}}],["good",{"_index":31,"title":{},"body":{"classes/ActionBase.html":{}}}],["googl",{"_index":328,"title":{},"body":{"classes/ComponentBase.html":{}}}],["googleanalyticspageview",{"_index":294,"title":{},"body":{"classes/ComponentBase.html":{}}}],["googleanalyticspageview(ev",{"_index":318,"title":{},"body":{"classes/ComponentBase.html":{}}}],["googleanalyticssendev",{"_index":295,"title":{},"body":{"classes/ComponentBase.html":{}}}],["googleanalyticssendevent(categori",{"_index":322,"title":{},"body":{"classes/ComponentBase.html":{}}}],["grade",{"_index":720,"title":{},"body":{"index.html":{}}}],["graph",{"_index":768,"title":{},"body":{"modules.html":{}}}],["group",{"_index":332,"title":{},"body":{"classes/ComponentBase.html":{}}}],["gtag('config",{"_index":443,"title":{},"body":{"classes/ComponentBase.html":{}}}],["handl",{"_index":258,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["handleerror",{"_index":574,"title":{},"body":{"classes/ServiceBase.html":{}}}],["handleerror(error",{"_index":593,"title":{},"body":{"classes/ServiceBase.html":{}}}],["handlehttperror",{"_index":484,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["handlehttperror(error",{"_index":517,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["handleoautherror",{"_index":575,"title":{},"body":{"classes/ServiceBase.html":{}}}],["handleoautherror(error",{"_index":597,"title":{},"body":{"classes/ServiceBase.html":{}}}],["handler",{"_index":553,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["handleserviceerror",{"_index":296,"title":{},"body":{"classes/ComponentBase.html":{}}}],["handleserviceerrors(errorrespons",{"_index":382,"title":{},"body":{"classes/ComponentBase.html":{}}}],["handleunexpectederror",{"_index":247,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["handleunexpectederror(error",{"_index":256,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["header",{"_index":184,"title":{},"body":{"classes/AlertNotification.html":{},"injectables/HttpBaseService.html":{}}}],["headers.append('author",{"_index":527,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["help",{"_index":718,"title":{},"body":{"index.html":{}}}],["helper",{"_index":70,"title":{},"body":{"classes/ActionBase.html":{}}}],["here",{"_index":735,"title":{},"body":{"index.html":{}}}],["hide",{"_index":395,"title":{},"body":{"classes/ComponentBase.html":{}}}],["http",{"_index":113,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["http://localhost:4200",{"_index":741,"title":{},"body":{"index.html":{}}}],["httpbase",{"_index":44,"title":{},"body":{"classes/ActionBase.html":{}}}],["httpbaseservic",{"_index":56,"title":{"injectables/HttpBaseService.html":{}},"body":{"classes/ActionBase.html":{},"injectables/HttpBaseService.html":{},"coverage.html":{}}}],["https://angular.io/docs/ts/latest/api/http/index/request",{"_index":516,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["https://angular.io/docs/ts/latest/api/http/index/requestmethod",{"_index":512,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["https://angular.io/docs/ts/latest/api/http/index/requestopt",{"_index":510,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["https://blog.thecodecampus.de/angular",{"_index":438,"title":{},"body":{"classes/ComponentBase.html":{}}}],["https://developers.google.com/analytics/devguides/collection/analyticsjs/ev",{"_index":381,"title":{},"body":{"classes/ComponentBase.html":{}}}],["https://developers.google.com/analytics/devguides/collection/gtagjs/pag",{"_index":441,"title":{},"body":{"classes/ComponentBase.html":{}}}],["https://support.google.com/analytics/answer/1033068",{"_index":380,"title":{},"body":{"classes/ComponentBase.html":{}}}],["i.",{"_index":347,"title":{},"body":{"classes/ComponentBase.html":{}}}],["identifi",{"_index":651,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":12,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["implicit",{"_index":359,"title":{},"body":{"classes/ComponentBase.html":{}}}],["import",{"_index":103,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"modules/BuildMotionFoundationModule.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceResponse.html":{}}}],["includ",{"_index":545,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["independ",{"_index":370,"title":{},"body":{"classes/ComponentBase.html":{}}}],["index",{"_index":41,"title":{"index.html":{}},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{}}}],["indic",{"_index":377,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceError.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"modules/BuildMotionFoundationModule.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{}}}],["inform",{"_index":137,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{}}}],["initi",{"_index":238,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{}}}],["inject",{"_index":476,"title":{"injectables/HttpBaseService.html":{}},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"coverage.html":{},"overview.html":{}}}],["instanc",{"_index":240,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{}}}],["instanceof",{"_index":165,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{}}}],["interact",{"_index":344,"title":{},"body":{"classes/ComponentBase.html":{}}}],["interfac",{"_index":261,"title":{"interfaces/OAuthErrorResponse.html":{}},"body":{"classes/BusinessProviderBase.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"coverage.html":{},"overview.html":{}}}],["issecur",{"_index":530,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["issuccess",{"_index":388,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceResponse.html":{}}}],["issuccess\":fals",{"_index":636,"title":{},"body":{"classes/ServiceError.html":{}}}],["item",{"_index":546,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["item(",{"_index":379,"title":{},"body":{"classes/ComponentBase.html":{}}}],["js",{"_index":681,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":540,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["json.stringify(requestoptions.bodi",{"_index":543,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["karma",{"_index":757,"title":{},"body":{"index.html":{}}}],["label",{"_index":323,"title":{},"body":{"classes/ComponentBase.html":{}}}],["layer",{"_index":384,"title":{},"body":{"classes/ComponentBase.html":{}}}],["legend",{"_index":772,"title":{},"body":{"overview.html":{}}}],["librari",{"_index":732,"title":{},"body":{"index.html":{}}}],["libs/foundation/src/act",{"_index":5,"title":{},"body":{"classes/ActionBase.html":{},"coverage.html":{}}}],["libs/foundation/src/busi",{"_index":233,"title":{},"body":{"classes/BusinessProviderBase.html":{},"coverage.html":{}}}],["libs/foundation/src/compon",{"_index":287,"title":{},"body":{"classes/ComponentBase.html":{},"coverage.html":{}}}],["libs/foundation/src/foundation.module.t",{"_index":226,"title":{},"body":{"modules/BuildMotionFoundationModule.html":{}}}],["libs/foundation/src/http",{"_index":477,"title":{},"body":{"injectables/HttpBaseService.html":{},"coverage.html":{}}}],["libs/foundation/src/models/alert",{"_index":182,"title":{},"body":{"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"coverage.html":{}}}],["libs/foundation/src/models/error",{"_index":470,"title":{},"body":{"classes/ErrorResponse.html":{},"coverage.html":{}}}],["libs/foundation/src/models/oauth",{"_index":566,"title":{},"body":{"interfaces/OAuthErrorResponse.html":{},"coverage.html":{}}}],["libs/foundation/src/models/servic",{"_index":623,"title":{},"body":{"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"coverage.html":{}}}],["libs/foundation/src/servic",{"_index":569,"title":{},"body":{"classes/ServiceBase.html":{},"coverage.html":{}}}],["limit",{"_index":607,"title":{},"body":{"classes/ServiceBase.html":{}}}],["list",{"_index":76,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{}}}],["liter",{"_index":594,"title":{},"body":{"classes/ServiceBase.html":{}}}],["load",{"_index":134,"title":{},"body":{"classes/ActionBase.html":{}}}],["log",{"_index":582,"title":{},"body":{"classes/ServiceBase.html":{}}}],["loggingservic",{"_index":45,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["logic",{"_index":33,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{}}}],["logitem",{"_index":271,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["make",{"_index":762,"title":{},"body":{"index.html":{}}}],["manag",{"_index":440,"title":{},"body":{"classes/ComponentBase.html":{}}}],["map",{"_index":539,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["map(respons",{"_index":537,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["mark",{"_index":608,"title":{},"body":{"classes/ServiceBase.html":{}}}],["match",{"_index":180,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"modules/BuildMotionFoundationModule.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["member",{"_index":581,"title":{},"body":{"classes/ServiceBase.html":{}}}],["messag",{"_index":185,"title":{},"body":{"classes/AlertNotification.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{}}}],["message\":\"fail",{"_index":637,"title":{},"body":{"classes/ServiceError.html":{}}}],["message\":\"th",{"_index":640,"title":{},"body":{"classes/ServiceError.html":{}}}],["message.tostr",{"_index":272,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["messages.push(e.messag",{"_index":458,"title":{},"body":{"classes/ComponentBase.html":{}}}],["messagetyp",{"_index":109,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["messagetype.error",{"_index":150,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["method",{"_index":14,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["minut",{"_index":727,"title":{},"body":{"index.html":{}}}],["model",{"_index":625,"title":{},"body":{"classes/ServiceError.html":{}}}],["models/alert",{"_index":415,"title":{},"body":{"classes/ComponentBase.html":{}}}],["models/error",{"_index":116,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["models/oauth",{"_index":610,"title":{},"body":{"classes/ServiceBase.html":{}}}],["models/servic",{"_index":119,"title":{},"body":{"classes/ActionBase.html":{},"injectables/HttpBaseService.html":{}}}],["modul",{"_index":224,"title":{"modules/BuildMotionFoundationModule.html":{},"modules.html":{}},"body":{"modules/BuildMotionFoundationModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":362,"title":{},"body":{"classes/ComponentBase.html":{},"index.html":{}}}],["movi",{"_index":366,"title":{},"body":{"classes/ComponentBase.html":{}}}],["multipart/form",{"_index":504,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["multipl",{"_index":337,"title":{},"body":{"classes/ComponentBase.html":{},"index.html":{}}}],["myapp",{"_index":731,"title":{},"body":{"index.html":{}}}],["name",{"_index":78,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"index.html":{}}}],["navig",{"_index":404,"title":{},"body":{"classes/ComponentBase.html":{},"index.html":{}}}],["navigationend",{"_index":319,"title":{},"body":{"classes/ComponentBase.html":{}}}],["navsubscript",{"_index":290,"title":{},"body":{"classes/ComponentBase.html":{}}}],["new",{"_index":73,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":729,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":227,"title":{},"body":{"modules/BuildMotionFoundationModule.html":{}}}],["ngrx",{"_index":696,"title":{},"body":{"dependencies.html":{}}}],["ngrx/effect",{"_index":689,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":691,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":694,"title":{},"body":{"dependencies.html":{}}}],["note",{"_index":86,"title":{},"body":{"classes/ActionBase.html":{}}}],["notif",{"_index":214,"title":{},"body":{"classes/AlertNotification.html":{}}}],["notification.model",{"_index":416,"title":{},"body":{"classes/ComponentBase.html":{}}}],["notification.model.t",{"_index":183,"title":{},"body":{"classes/AlertNotification.html":{},"coverage.html":{}}}],["notification.model.ts:4",{"_index":199,"title":{},"body":{"classes/AlertNotification.html":{}}}],["notification.model.ts:5",{"_index":193,"title":{},"body":{"classes/AlertNotification.html":{}}}],["notification.model.ts:6",{"_index":197,"title":{},"body":{"classes/AlertNotification.html":{}}}],["notification.model.ts:7",{"_index":196,"title":{},"body":{"classes/AlertNotification.html":{}}}],["notification.model.ts:8",{"_index":191,"title":{},"body":{"classes/AlertNotification.html":{}}}],["nrwl",{"_index":711,"title":{},"body":{"index.html":{}}}],["nrwl/nx",{"_index":687,"title":{},"body":{"dependencies.html":{}}}],["number",{"_index":324,"title":{},"body":{"classes/ComponentBase.html":{}}}],["numer",{"_index":376,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ServiceError.html":{}}}],["nx",{"_index":712,"title":{},"body":{"index.html":{}}}],["oauth",{"_index":599,"title":{},"body":{"classes/ServiceBase.html":{}}}],["oautherrorrespons",{"_index":565,"title":{"interfaces/OAuthErrorResponse.html":{}},"body":{"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"coverage.html":{}}}],["object",{"_index":333,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{}}}],["observ",{"_index":60,"title":{},"body":{"classes/ActionBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["observable.throw(errorrespons",{"_index":160,"title":{},"body":{"classes/ActionBase.html":{}}}],["on",{"_index":642,"title":{},"body":{"classes/ServiceError.html":{}}}],["open",{"_index":714,"title":{},"body":{"index.html":{}}}],["opinion",{"_index":721,"title":{},"body":{"index.html":{}}}],["option",{"_index":79,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["out",{"_index":280,"title":{},"body":{"classes/BusinessProviderBase.html":{},"index.html":{},"overview.html":{}}}],["over",{"_index":339,"title":{},"body":{"classes/ComponentBase.html":{}}}],["overrid",{"_index":100,"title":{},"body":{"classes/ActionBase.html":{}}}],["overview",{"_index":771,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":672,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":428,"title":{},"body":{"classes/ComponentBase.html":{}}}],["page_path",{"_index":446,"title":{},"body":{"classes/ComponentBase.html":{}}}],["page_titl",{"_index":445,"title":{},"body":{"classes/ComponentBase.html":{}}}],["pageview",{"_index":432,"title":{},"body":{"classes/ComponentBase.html":{}}}],["param",{"_index":163,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["paramet",{"_index":77,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["parent",{"_index":371,"title":{},"body":{"classes/ComponentBase.html":{}}}],["parm",{"_index":454,"title":{},"body":{"classes/ComponentBase.html":{}}}],["particular",{"_index":345,"title":{},"body":{"classes/ComponentBase.html":{}}}],["password",{"_index":641,"title":{},"body":{"classes/ServiceError.html":{}}}],["pattern",{"_index":724,"title":{},"body":{"index.html":{}}}],["paus",{"_index":350,"title":{},"body":{"classes/ComponentBase.html":{}}}],["pipelin",{"_index":13,"title":{},"body":{"classes/ActionBase.html":{}}}],["play",{"_index":348,"title":{},"body":{"classes/ComponentBase.html":{}}}],["post",{"_index":36,"title":{},"body":{"classes/ActionBase.html":{}}}],["postexecuteact",{"_index":37,"title":{},"body":{"classes/ActionBase.html":{}}}],["postvalidateact",{"_index":27,"title":{},"body":{"classes/ActionBase.html":{}}}],["pre",{"_index":17,"title":{},"body":{"classes/ActionBase.html":{}}}],["pre/post",{"_index":15,"title":{},"body":{"classes/ActionBase.html":{}}}],["preexecuteact",{"_index":121,"title":{},"body":{"classes/ActionBase.html":{}}}],["preexecuteaction();if",{"_index":29,"title":{},"body":{"classes/ActionBase.html":{}}}],["prepar",{"_index":128,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["prevalidateact",{"_index":23,"title":{},"body":{"classes/ActionBase.html":{}}}],["privat",{"_index":293,"title":{},"body":{"classes/ComponentBase.html":{}}}],["process",{"_index":82,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["processact",{"_index":122,"title":{},"body":{"classes/ActionBase.html":{}}}],["processaction();th",{"_index":35,"title":{},"body":{"classes/ActionBase.html":{}}}],["prod",{"_index":751,"title":{},"body":{"index.html":{}}}],["product",{"_index":753,"title":{},"body":{"index.html":{}}}],["project",{"_index":709,"title":{},"body":{"index.html":{}}}],["properti",{"_index":42,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{}}}],["protect",{"_index":301,"title":{},"body":{"classes/ComponentBase.html":{}}}],["protractor",{"_index":760,"title":{},"body":{"index.html":{}}}],["provid",{"_index":11,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["public",{"_index":223,"title":{},"body":{"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["publish",{"_index":72,"title":{},"body":{"classes/ActionBase.html":{}}}],["publishruleresult",{"_index":48,"title":{},"body":{"classes/ActionBase.html":{}}}],["publishruleresult(ruleresult",{"_index":67,"title":{},"body":{"classes/ActionBase.html":{}}}],["purpos",{"_index":241,"title":{},"body":{"classes/BusinessProviderBase.html":{}}}],["quick",{"_index":725,"title":{},"body":{"index.html":{}}}],["read",{"_index":734,"title":{},"body":{"index.html":{}}}],["readm",{"_index":767,"title":{},"body":{"index.html":{}}}],["readonli",{"_index":218,"title":{},"body":{"classes/AlertTypes.html":{}}}],["recurs",{"_index":87,"title":{},"body":{"classes/ActionBase.html":{}}}],["relat",{"_index":340,"title":{},"body":{"classes/ComponentBase.html":{}}}],["reload",{"_index":743,"title":{},"body":{"index.html":{}}}],["remov",{"_index":394,"title":{},"body":{"classes/ComponentBase.html":{}}}],["render",{"_index":91,"title":{},"body":{"classes/ActionBase.html":{}}}],["render/execut",{"_index":95,"title":{},"body":{"classes/ActionBase.html":{}}}],["report",{"_index":375,"title":{},"body":{"classes/ComponentBase.html":{}}}],["repres",{"_index":626,"title":{},"body":{"classes/ServiceError.html":{}}}],["represent",{"_index":590,"title":{},"body":{"classes/ServiceBase.html":{}}}],["request",{"_index":276,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["request(new",{"_index":535,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["request(requestopt",{"_index":536,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["requestmethod",{"_index":506,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["requestopt",{"_index":478,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["requestoptions.method",{"_index":533,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["requestoptions.url",{"_index":532,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["requir",{"_index":93,"title":{},"body":{"classes/ActionBase.html":{},"classes/ServiceBase.html":{}}}],["requiresauthtoken",{"_index":497,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["reset",{"_index":392,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ServiceBase.html":{},"overview.html":{}}}],["resetalertnotif",{"_index":297,"title":{},"body":{"classes/ComponentBase.html":{}}}],["resetservicecontext",{"_index":576,"title":{},"body":{"classes/ServiceBase.html":{}}}],["respons",{"_index":46,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["response.except",{"_index":563,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["response.json",{"_index":538,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["response.messag",{"_index":564,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["response.model",{"_index":117,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["response.model.t",{"_index":471,"title":{},"body":{"classes/ErrorResponse.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceResponse.html":{},"coverage.html":{}}}],["response.model.ts:4",{"_index":474,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/ServiceResponse.html":{}}}],["response.model.ts:5",{"_index":475,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/ServiceResponse.html":{}}}],["response.model.ts:6",{"_index":472,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/ServiceResponse.html":{}}}],["response.model.ts:7",{"_index":473,"title":{},"body":{"classes/ErrorResponse.html":{},"classes/ServiceResponse.html":{}}}],["result",{"_index":84,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"modules/BuildMotionFoundationModule.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["result.isvalid",{"_index":143,"title":{},"body":{"classes/ActionBase.html":{}}}],["result.rulepolicy.isdisplay",{"_index":168,"title":{},"body":{"classes/ActionBase.html":{}}}],["retriev",{"_index":398,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{}}}],["retrieveresponseerrormessag",{"_index":298,"title":{},"body":{"classes/ComponentBase.html":{}}}],["retrieveresponseerrormessages(errorrespons",{"_index":396,"title":{},"body":{"classes/ComponentBase.html":{}}}],["retrieveruledetail",{"_index":49,"title":{},"body":{"classes/ActionBase.html":{}}}],["retrieveruledetails(ruleresult",{"_index":80,"title":{},"body":{"classes/ActionBase.html":{}}}],["retrieveservicecontexterrormessag",{"_index":299,"title":{},"body":{"classes/ComponentBase.html":{}}}],["retrieveservicecontexterrormessages(servicecontext",{"_index":400,"title":{},"body":{"classes/ComponentBase.html":{}}}],["return",{"_index":64,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["rout",{"_index":405,"title":{},"body":{"classes/ComponentBase.html":{}}}],["routenam",{"_index":406,"title":{},"body":{"classes/ComponentBase.html":{}}}],["router",{"_index":291,"title":{},"body":{"classes/ComponentBase.html":{}}}],["routerev",{"_index":421,"title":{},"body":{"classes/ComponentBase.html":{}}}],["routeto",{"_index":300,"title":{},"body":{"classes/ComponentBase.html":{}}}],["routeto(routenam",{"_index":402,"title":{},"body":{"classes/ComponentBase.html":{}}}],["rule",{"_index":83,"title":{},"body":{"classes/ActionBase.html":{}}}],["ruleresult",{"_index":68,"title":{},"body":{"classes/ActionBase.html":{}}}],["ruleresult.rulepolici",{"_index":164,"title":{},"body":{"classes/ActionBase.html":{}}}],["ruleresult.rulepolicy.isdisplay",{"_index":176,"title":{},"body":{"classes/ActionBase.html":{}}}],["ruleresult.rulepolicy.messag",{"_index":174,"title":{},"body":{"classes/ActionBase.html":{}}}],["ruleresult.rulepolicy.nam",{"_index":173,"title":{},"body":{"classes/ActionBase.html":{}}}],["run",{"_index":153,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"index.html":{}}}],["rxj",{"_index":683,"title":{},"body":{"dependencies.html":{}}}],["rxjs/add/operator/filt",{"_index":414,"title":{},"body":{"classes/ComponentBase.html":{}}}],["rxjs/behaviorsubject",{"_index":611,"title":{},"body":{"classes/ServiceBase.html":{}}}],["rxjs/observ",{"_index":104,"title":{},"body":{"classes/ActionBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["rxjs/rx",{"_index":526,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["rxjs/subscript",{"_index":413,"title":{},"body":{"classes/ComponentBase.html":{}}}],["same",{"_index":336,"title":{},"body":{"classes/ComponentBase.html":{},"index.html":{}}}],["scaffold",{"_index":746,"title":{},"body":{"index.html":{}}}],["section",{"_index":361,"title":{},"body":{"classes/ComponentBase.html":{}}}],["secur",{"_index":500,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["see",{"_index":356,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{}}}],["segment",{"_index":373,"title":{},"body":{"classes/ComponentBase.html":{}}}],["send",{"_index":326,"title":{},"body":{"classes/ComponentBase.html":{}}}],["serv",{"_index":738,"title":{},"body":{"index.html":{}}}],["server",{"_index":737,"title":{},"body":{"index.html":{}}}],["servic",{"_index":141,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{}}}],["servicebas",{"_index":568,"title":{"classes/ServiceBase.html":{}},"body":{"classes/ServiceBase.html":{},"coverage.html":{}}}],["servicecontext",{"_index":47,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["servicecontext.haserror",{"_index":449,"title":{},"body":{"classes/ComponentBase.html":{}}}],["servicecontext.messag",{"_index":75,"title":{},"body":{"classes/ActionBase.html":{}}}],["servicecontext.messages.foreach(",{"_index":456,"title":{},"body":{"classes/ComponentBase.html":{}}}],["servicecontext/validationcontext",{"_index":450,"title":{},"body":{"classes/ComponentBase.html":{}}}],["serviceerror",{"_index":118,"title":{"classes/ServiceError.html":{}},"body":{"classes/ActionBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"coverage.html":{}}}],["servicemessag",{"_index":74,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["servicemessage(error.nam",{"_index":266,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["servicemessage.displaytous",{"_index":175,"title":{},"body":{"classes/ActionBase.html":{}}}],["servicemessage.sourc",{"_index":177,"title":{},"body":{"classes/ActionBase.html":{}}}],["servicemessage.tostr",{"_index":179,"title":{},"body":{"classes/ActionBase.html":{}}}],["servicenam",{"_index":245,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["servicerespons",{"_index":648,"title":{"classes/ServiceResponse.html":{}},"body":{"classes/ServiceResponse.html":{},"coverage.html":{}}}],["set",{"_index":88,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{}}}],["sever",{"_index":112,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["severity.error",{"_index":151,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["severity.inform",{"_index":127,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["severity.warn",{"_index":447,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["show",{"_index":411,"title":{},"body":{"classes/ComponentBase.html":{}}}],["showalert",{"_index":186,"title":{},"body":{"classes/AlertNotification.html":{}}}],["showalertmessag",{"_index":302,"title":{},"body":{"classes/ComponentBase.html":{}}}],["showalertmessage(messag",{"_index":407,"title":{},"body":{"classes/ComponentBase.html":{}}}],["showresponseerror",{"_index":303,"title":{},"body":{"classes/ComponentBase.html":{}}}],["showresponseerrors(respons",{"_index":409,"title":{},"body":{"classes/ComponentBase.html":{}}}],["simpl",{"_index":314,"title":{},"body":{"classes/ComponentBase.html":{}}}],["simplemd",{"_index":699,"title":{},"body":{"dependencies.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"modules/BuildMotionFoundationModule.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"index.html":{}}}],["sourcenam",{"_index":255,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["special",{"_index":644,"title":{},"body":{"classes/ServiceError.html":{}}}],["specifi",{"_index":97,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["stack",{"_index":263,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["start",{"_index":19,"title":{"index.html":{}},"body":{"classes/ActionBase.html":{},"index.html":{}}}],["state",{"_index":393,"title":{},"body":{"classes/ComponentBase.html":{}}}],["statement",{"_index":652,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":217,"title":{},"body":{"classes/AlertTypes.html":{}}}],["statu",{"_index":30,"title":{},"body":{"classes/ActionBase.html":{},"injectables/HttpBaseService.html":{}}}],["stop",{"_index":349,"title":{},"body":{"classes/ComponentBase.html":{}}}],["store",{"_index":692,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["string",{"_index":51,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{}}}],["structur",{"_index":723,"title":{},"body":{"index.html":{}}}],["subject",{"_index":548,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["subject.asobserv",{"_index":550,"title":{},"body":{"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["subscript",{"_index":309,"title":{},"body":{"classes/ComponentBase.html":{}}}],["subsequ",{"_index":604,"title":{},"body":{"classes/ServiceBase.html":{}}}],["success",{"_index":204,"title":{},"body":{"classes/AlertNotification.html":{},"classes/AlertTypes.html":{}}}],["such",{"_index":365,"title":{},"body":{"classes/ComponentBase.html":{}}}],["suggest",{"_index":357,"title":{},"body":{"classes/ComponentBase.html":{}}}],["summar",{"_index":378,"title":{},"body":{"classes/ComponentBase.html":{}}}],["suppli",{"_index":330,"title":{},"body":{"classes/ComponentBase.html":{}}}],["sure",{"_index":763,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":671,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":670,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":439,"title":{},"body":{"classes/ComponentBase.html":{}}}],["target",{"_index":133,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceError.html":{}}}],["test",{"_index":755,"title":{},"body":{"index.html":{}}}],["this.accesstoken",{"_index":529,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.actionnam",{"_index":126,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.actionresult",{"_index":146,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.alertnotif",{"_index":418,"title":{},"body":{"classes/ComponentBase.html":{}}}],["this.componentnam",{"_index":417,"title":{},"body":{"classes/ComponentBase.html":{}}}],["this.createerrorrespons",{"_index":615,"title":{},"body":{"classes/ServiceBase.html":{}}}],["this.createerrorresponse(error",{"_index":561,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.googleanalyticspageview(ev",{"_index":420,"title":{},"body":{"classes/ComponentBase.html":{}}}],["this.googleanalyticspageview(routerev",{"_index":423,"title":{},"body":{"classes/ComponentBase.html":{}}}],["this.handlehttperror(error",{"_index":542,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.handleserviceerrors(respons",{"_index":467,"title":{},"body":{"classes/ComponentBase.html":{}}}],["this.handleunexpectederror(err",{"_index":560,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.handleunexpectederror(error",{"_index":554,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.head",{"_index":207,"title":{},"body":{"classes/AlertNotification.html":{}}}],["this.http",{"_index":534,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["this.loggingservice.log",{"_index":125,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["this.loggingservice.log(this.servicenam",{"_index":274,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["this.messag",{"_index":209,"title":{},"body":{"classes/AlertNotification.html":{}}}],["this.publishruleresult(errorresult",{"_index":170,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.publishruleresult(result",{"_index":144,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.respons",{"_index":159,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.retrieveresponseerrormessages(errorrespons",{"_index":453,"title":{},"body":{"classes/ComponentBase.html":{}}}],["this.retrieveruledetails(errorresult",{"_index":172,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.retrieveruledetails(result",{"_index":145,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.retrieveservicecontexterrormessages(servicecontext",{"_index":451,"title":{},"body":{"classes/ComponentBase.html":{}}}],["this.router.events.filt",{"_index":422,"title":{},"body":{"classes/ComponentBase.html":{}}}],["this.router.events.subscribe(ev",{"_index":419,"title":{},"body":{"classes/ComponentBase.html":{}}}],["this.router.navigate([routenam",{"_index":463,"title":{},"body":{"classes/ComponentBase.html":{}}}],["this.servicecontext",{"_index":619,"title":{},"body":{"classes/ServiceBase.html":{}}}],["this.servicecontext.addmessage(messag",{"_index":275,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["this.servicecontext.haserror",{"_index":278,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["this.servicecontext.isgood",{"_index":161,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.servicecontext.messag",{"_index":620,"title":{},"body":{"classes/ServiceBase.html":{}}}],["this.servicecontext.messages.filt",{"_index":281,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["this.servicecontext.messages.foreach(",{"_index":148,"title":{},"body":{"classes/ActionBase.html":{},"classes/ServiceBase.html":{}}}],["this.servicecontext.messages.length",{"_index":621,"title":{},"body":{"classes/ServiceBase.html":{}}}],["this.servicecontext.messages.push(servicemessag",{"_index":178,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.servicenam",{"_index":265,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["this.showalert",{"_index":210,"title":{},"body":{"classes/AlertNotification.html":{}}}],["this.titl",{"_index":208,"title":{},"body":{"classes/AlertNotification.html":{}}}],["this.typ",{"_index":206,"title":{},"body":{"classes/AlertNotification.html":{}}}],["this.validationcontext.hasruleviol",{"_index":132,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.validationcontext.renderrul",{"_index":124,"title":{},"body":{"classes/ActionBase.html":{}}}],["this.validationcontext.results.foreach(result",{"_index":142,"title":{},"body":{"classes/ActionBase.html":{}}}],["time",{"_index":338,"title":{},"body":{"classes/ComponentBase.html":{}}}],["titl",{"_index":187,"title":{},"body":{"classes/AlertNotification.html":{},"classes/ComponentBase.html":{}}}],["todo",{"_index":551,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["token",{"_index":501,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["toolkit",{"_index":715,"title":{},"body":{"index.html":{}}}],["tostr",{"_index":613,"title":{},"body":{"classes/ServiceBase.html":{}}}],["track",{"_index":334,"title":{},"body":{"classes/ComponentBase.html":{}}}],["tri",{"_index":462,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["trigger",{"_index":212,"title":{},"body":{"classes/AlertNotification.html":{}}}],["true",{"_index":211,"title":{},"body":{"classes/AlertNotification.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["type",{"_index":52,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"interfaces/OAuthErrorResponse.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{},"coverage.html":{}}}],["types.const",{"_index":202,"title":{},"body":{"classes/AlertNotification.html":{},"classes/ComponentBase.html":{}}}],["types.constants.t",{"_index":215,"title":{},"body":{"classes/AlertTypes.html":{},"coverage.html":{}}}],["types.constants.ts:5",{"_index":220,"title":{},"body":{"classes/AlertTypes.html":{}}}],["types.constants.ts:6",{"_index":222,"title":{},"body":{"classes/AlertTypes.html":{}}}],["types.constants.ts:7",{"_index":219,"title":{},"body":{"classes/AlertTypes.html":{}}}],["types.constants.ts:8",{"_index":221,"title":{},"body":{"classes/AlertTypes.html":{}}}],["typescript",{"_index":701,"title":{},"body":{"dependencies.html":{}}}],["typic",{"_index":335,"title":{},"body":{"classes/ComponentBase.html":{}}}],["ua",{"_index":434,"title":{},"body":{"classes/ComponentBase.html":{}}}],["ui",{"_index":341,"title":{},"body":{"classes/ComponentBase.html":{}}}],["unabl",{"_index":616,"title":{},"body":{"classes/ServiceBase.html":{}}}],["undefin",{"_index":468,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["under",{"_index":342,"title":{},"body":{"classes/ComponentBase.html":{}}}],["unexpect",{"_index":259,"title":{},"body":{"classes/BusinessProviderBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["uniqu",{"_index":352,"title":{},"body":{"classes/ComponentBase.html":{}}}],["unit",{"_index":754,"title":{},"body":{"index.html":{}}}],["up",{"_index":139,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{}}}],["url",{"_index":507,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["urlencod",{"_index":494,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["us",{"_index":34,"title":{},"body":{"classes/ActionBase.html":{},"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"index.html":{}}}],["user",{"_index":315,"title":{},"body":{"classes/ComponentBase.html":{},"classes/ServiceError.html":{}}}],["valid",{"_index":130,"title":{},"body":{"classes/ActionBase.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{}}}],["validateact",{"_index":50,"title":{},"body":{"classes/ActionBase.html":{}}}],["validateactionresult",{"_index":38,"title":{},"body":{"classes/ActionBase.html":{}}}],["validationcontext",{"_index":90,"title":{},"body":{"classes/ActionBase.html":{}}}],["valu",{"_index":195,"title":{},"body":{"classes/AlertNotification.html":{},"classes/AlertTypes.html":{},"classes/ComponentBase.html":{},"classes/ErrorResponse.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{},"classes/ServiceError.html":{},"classes/ServiceResponse.html":{}}}],["via",{"_index":756,"title":{},"body":{"index.html":{}}}],["video",{"_index":367,"title":{},"body":{"classes/ComponentBase.html":{},"index.html":{}}}],["view",{"_index":429,"title":{},"body":{"classes/ComponentBase.html":{}}}],["violat",{"_index":136,"title":{},"body":{"classes/ActionBase.html":{}}}],["viz",{"_index":705,"title":{},"body":{"dependencies.html":{}}}],["void",{"_index":65,"title":{},"body":{"classes/ActionBase.html":{},"classes/BusinessProviderBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["want",{"_index":94,"title":{},"body":{"classes/ActionBase.html":{},"classes/ComponentBase.html":{},"classes/ServiceBase.html":{}}}],["warn",{"_index":203,"title":{},"body":{"classes/AlertNotification.html":{},"classes/AlertTypes.html":{}}}],["watch",{"_index":726,"title":{},"body":{"index.html":{}}}],["way",{"_index":331,"title":{},"body":{"classes/ComponentBase.html":{}}}],["web",{"_index":346,"title":{},"body":{"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{},"classes/ServiceBase.html":{}}}],["whether",{"_index":628,"title":{},"body":{"classes/ServiceError.html":{}}}],["window).ga('config",{"_index":444,"title":{},"body":{"classes/ComponentBase.html":{}}}],["window).ga('send",{"_index":431,"title":{},"body":{"classes/ComponentBase.html":{}}}],["window).ga('set",{"_index":430,"title":{},"body":{"classes/ComponentBase.html":{}}}],["window).gtag('ev",{"_index":424,"title":{},"body":{"classes/ComponentBase.html":{}}}],["withdisplaytouser(tru",{"_index":268,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["withmessagetype(messagetype.error",{"_index":269,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["withsource(this.servicenam",{"_index":270,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["workspac",{"_index":733,"title":{},"body":{"index.html":{}}}],["write",{"_index":279,"title":{},"body":{"classes/BusinessProviderBase.html":{},"classes/ServiceBase.html":{}}}],["writemessag",{"_index":577,"title":{},"body":{"classes/ServiceBase.html":{}}}],["written",{"_index":606,"title":{},"body":{"classes/ServiceBase.html":{}}}],["www",{"_index":492,"title":{},"body":{"injectables/HttpBaseService.html":{}}}],["ye",{"_index":192,"title":{},"body":{"classes/AlertNotification.html":{},"classes/ComponentBase.html":{},"injectables/HttpBaseService.html":{}}}],["zone.j",{"_index":685,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":775,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ActionBase.html":{"url":"classes/ActionBase.html","title":"class - ActionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ActionBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/action-base.action.ts\n        \n\n            \n                Description\n            \n            \n                This is the application's base Action class that provides implementation of pipeline methods - pre/post\nexecution methods.\nThe pre-execute methods that can be implemented are:\n    1. start();\n    2. audit();\n    3. preValidateAction();\n    4. evaluateRules();\n    5. postValidateAction();\n    6. preExecuteAction();If the status of action is good, the business logic will be executed using the:\n    1. processAction();The post-execution methods that can be implemented are:\n    1. postExecuteAction();\n    2. validateActionResult();\n    3. finish();\n            \n\n            \n                Extends\n            \n            \n                    Action\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                actionName\n                            \n                            \n                                httpBase\n                            \n                            \n                                loggingService\n                            \n                            \n                                response\n                            \n                            \n                                serviceContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                postExecuteAction\n                            \n                            \n                                postValidateAction\n                            \n                            \n                                publishRuleResult\n                            \n                            \n                                retrieveRuleDetails\n                            \n                            \n                                validateAction\n                            \n                            \n                                validateActionResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            httpBase\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpBase:     HttpBaseService\n\n                    \n                \n                    \n                        \n                            Type :     HttpBaseService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loggingService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingService:     BuildMotionLoggingService\n\n                    \n                \n                    \n                        \n                            Type :     BuildMotionLoggingService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            response\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        response:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceContext\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceContext:     ServiceContext\n\n                    \n                \n                    \n                        \n                            Type :     ServiceContext\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:41\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postExecuteAction\n                            \n                            \n                        \n                    \n                \n                \n                    \npostExecuteAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:81\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postValidateAction\n                            \n                            \n                        \n                    \n                \n                \n                    \npostValidateAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            publishRuleResult\n                            \n                            \n                        \n                    \n                \n                \n                    \npublishRuleResult(ruleResult: RuleResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:152\n                            \n                        \n\n\n                \n                    \n                            A helper function to publish a new [ServiceMessage] to the [ServiceContext.Messages] list.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ruleResult\n                                                        \n                                                                    RuleResult\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveRuleDetails\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveRuleDetails(ruleResult: RuleResult)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:129\n                            \n                        \n\n\n                \n                    \n                            Use to process rule results for composite rules. Note, that this function is recursive\nand will process all composite rules in the rule set contained in the ValidationContext.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ruleResult\n                                                        \n                                                                    RuleResult\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The result of a rendered rule.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:51\n                            \n                        \n\n\n                \n                    \n                            This is a required implementation if you want to render/execute the rules that\nare associated to the specified action.\n\n\n                            \n                                Returns :     ValidationContext\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateActionResult\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateActionResult()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/action-base.action.ts:98\n                            \n                        \n\n\n                \n                    \n                            All concrete actions must override and implement this method. It is defined in the [Action] framework class.\n\n\n                            \n                                Returns :     ActionResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Response } from '@angular/http';\n\nimport { Action } from '@buildmotion/actions';\nimport { ValidationContext } from '@buildmotion/rules-engine';\nimport { ServiceMessage } from '@buildmotion/rules-engine';\nimport { MessageType } from '@buildmotion/rules-engine';\nimport { ServiceContext } from '@buildmotion/rules-engine';\nimport { ActionResult } from '@buildmotion/actions';\nimport { CompositeRule } from '@buildmotion/rules-engine';\nimport { RuleResult } from '@buildmotion/rules-engine';\n\nimport { BuildMotionLoggingService } from '@buildmotion/logging';\nimport { Severity } from '@buildmotion/logging';\nimport { HttpBaseService } from './http-base.service';\nimport { ErrorResponse } from './models/error-response.model';\nimport { ServiceError } from './models/service-error.model';\n\n/**\n * This is the application's base Action class that provides implementation of pipeline methods - pre/post\n * execution methods.\n *\n * The pre-execute methods that can be implemented are:\n *\t\t1. start();\n *\t\t2. audit();\n *\t\t3. preValidateAction();\n *\t\t4. evaluateRules();\n *\t\t5. postValidateAction();\n *\t\t6. preExecuteAction();\n *\n *If the status of action is good, the business logic will be executed using the:\n *\t\t1. processAction();\n *\n * The post-execution methods that can be implemented are:\n *\t\t1. postExecuteAction();\n *\t\t2. validateActionResult();\n *\t\t3. finish();\n */\n\nexport class ActionBase extends Action {\n  serviceContext: ServiceContext;\n  response: Observable;\n  httpBase: HttpBaseService;\n  loggingService: BuildMotionLoggingService;\n  actionName: string;\n\n  /**\n   * This is a required implementation if you want to render/execute the rules that\n   * are associated to the specified action.\n   */\n  validateAction(): ValidationContext {\n    return this.validationContext.renderRules();\n  }\n\n  postValidateAction() {\n    this.loggingService.log(\n      this.actionName,\n      Severity.Information,\n      `Preparing to determine if the action contains validation errors in ${\n        this.actionName\n      }`\n    );\n\n    if (this.validationContext.hasRuleViolations()) {\n      this.loggingService.log(\n        this.actionName,\n        Severity.Information,\n        `The target contains validation errors in ${this.actionName}`\n      );\n\n      // Load the error/rule violations into the ServiceContext so that the information bubbles up to the caller of the service;\n      this.validationContext.results.forEach(result => {\n        if (!result.isValid) {\n          this.publishRuleResult(result);\n          this.retrieveRuleDetails(result);\n        }\n      });\n    }\n  }\n\n  postExecuteAction() {\n    if (this.actionResult === ActionResult.Fail) {\n      this.serviceContext.Messages.forEach(e => {\n        if (e.MessageType === MessageType.Error) {\n          this.loggingService.log(\n            this.actionName,\n            Severity.Error,\n            e.toString()\n          );\n        }\n      });\n    }\n  }\n\n  /**\n   * All concrete actions must override and implement this method. It is defined in the [Action] framework class.\n   */\n  validateActionResult(): ActionResult {\n    this.loggingService.log(\n      this.actionName,\n      Severity.Information,\n      `Running [validateActionResult] for ${this.actionName}.`\n    );\n    // determine the status of the action based on any rule violations;\n    if (this.validationContext.hasRuleViolations()) {\n      this.loggingService.log(\n        this.actionName,\n        Severity.Error,\n        `The ${this.actionName} contains rule violations.`\n      );\n      this.actionResult = ActionResult.Fail;\n\n      const errorResponse = new ErrorResponse();\n      errorResponse.IsSuccess = false;\n      errorResponse.Message = `Validation errors exist.`;\n      this.response = Observable.throw(errorResponse);\n    }\n    this.actionResult = this.serviceContext.isGood()\n      ? ActionResult.Success\n      : ActionResult.Fail;\n    return this.actionResult;\n  }\n\n  /**\n   * Use to process rule results for composite rules. Note, that this function is recursive\n   * and will process all composite rules in the rule set contained in the ValidationContext.\n   * @param ruleResult The result of a rendered rule.\n   */\n  retrieveRuleDetails(ruleResult: RuleResult) {\n    if (ruleResult.rulePolicy instanceof CompositeRule) {\n      const composite = ruleResult.rulePolicy as CompositeRule;\n      if (composite && composite.hasErrors) {\n        const errors = composite.results.filter(\n          result => !result.isValid && result.rulePolicy.isDisplayable\n        );\n\n        errors.forEach(errorResult => {\n          this.publishRuleResult(errorResult);\n\n          if (errorResult.rulePolicy instanceof CompositeRule) {\n            this.retrieveRuleDetails(errorResult);\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * A helper function to publish a new [ServiceMessage] to the [ServiceContext.Messages] list.\n   * @param ruleResult\n   */\n  publishRuleResult(ruleResult: RuleResult) {\n    const serviceMessage = new ServiceMessage(\n      ruleResult.rulePolicy.name,\n      ruleResult.rulePolicy.message,\n      MessageType.Error\n    );\n    serviceMessage.DisplayToUser = ruleResult.rulePolicy.isDisplayable;\n    serviceMessage.Source = this.actionName;\n    this.serviceContext.Messages.push(serviceMessage);\n    this.loggingService.log(\n      this.actionName,\n      Severity.Error,\n      `${serviceMessage.toString()}`\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlertNotification.html":{"url":"classes/AlertNotification.html","title":"class - AlertNotification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlertNotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/models/alert-notification.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                header\n                            \n                            \n                                messages\n                            \n                            \n                                showAlert\n                            \n                            \n                                title\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(header: string, title: string, messages?: Array, type?: string)\n                    \n                \n                        \n                            \n                                Defined in libs/foundation/src/models/alert-notification.model.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        header\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        title\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            header\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        header:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/alert-notification.model.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            messages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        messages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/alert-notification.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showAlert\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showAlert:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/alert-notification.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/alert-notification.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : AlertTypes.Information\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/alert-notification.model.ts:4\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { AlertTypes } from './alert-types.constants';\n\nexport class AlertNotification {\n  type: string = AlertTypes.Information; // alert-warning, alert-success, alert-info, alert-danger\n  header: string;\n  title: string;\n  messages: Array = new Array();\n  showAlert = false;\n\n  constructor(\n    header: string,\n    title: string,\n    messages?: Array,\n    type?: string\n  ) {\n    if (type) {\n      this.type = type;\n    }\n\n    this.header = header;\n    this.title = title;\n    if (messages) {\n      this.messages = messages;\n    }\n\n    if (this.header && this.title) {\n      this.showAlert = true; // used to trigger the display of the notification.\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AlertTypes.html":{"url":"classes/AlertTypes.html","title":"class - AlertTypes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AlertTypes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/models/alert-types.constants.ts\n        \n\n            \n                Description\n            \n            \n                Use to provide the alert type information for the AlertNotification and AlertComponent.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                Danger\n                            \n                            \n                                    Static\n                                    Readonly\n                                Information\n                            \n                            \n                                    Static\n                                    Readonly\n                                Success\n                            \n                            \n                                    Static\n                                    Readonly\n                                Warning\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            Danger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Danger:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'alert-danger'\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/alert-types.constants.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            Information\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Information:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'alert-info'\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/alert-types.constants.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            Success\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Success:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'alert-success'\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/alert-types.constants.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            Warning\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Warning:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'alert-warning'\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/alert-types.constants.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AlertTypes {\n  public static readonly Information: string = 'alert-info';\n  public static readonly Warning: string = 'alert-warning';\n  public static readonly Danger: string = 'alert-danger';\n  public static readonly Success: string = 'alert-success';\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BuildMotionFoundationModule.html":{"url":"modules/BuildMotionFoundationModule.html","title":"module - BuildMotionFoundationModule","body":"\n                   \n\n\n\n\n  Modules\n  BuildMotionFoundationModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/foundation/src/foundation.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BuildMotionLoggingModule } from '@buildmotion/logging';\n\n@NgModule({\n  imports: [BuildMotionLoggingModule, CommonModule]\n})\nexport class BuildMotionFoundationModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BusinessProviderBase.html":{"url":"classes/BusinessProviderBase.html","title":"class - BusinessProviderBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  BusinessProviderBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/business-provider-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Use the business provider base class to access common elements of the business provider.\nserviceContext: This is initialized for each instance of a business provider - its purpose is to collect information during the processing of business logic.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    Public\n                                loggingService\n                            \n                            \n                                serviceContext\n                            \n                            \n                                serviceName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                finishRequest\n                            \n                            \n                                handleUnexpectedError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: BuildMotionLoggingService)\n                    \n                \n                        \n                            \n                                Defined in libs/foundation/src/business-provider-base.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    BuildMotionLoggingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accessToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/business-provider-base.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggingService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingService:     BuildMotionLoggingService\n\n                    \n                \n                    \n                        \n                            Type :     BuildMotionLoggingService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/business-provider-base.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceContext\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceContext:     ServiceContext\n\n                    \n                \n                    \n                        \n                            Type :     ServiceContext\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/business-provider-base.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/business-provider-base.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finishRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \nfinishRequest(sourceName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/business-provider-base.service.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sourceName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleUnexpectedError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleUnexpectedError(error: Error)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/business-provider-base.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            Use to handle an unexpected error in the application. The error should implement\nthe specified interface. The method will add a new [ServiceMessage] to the\nspecified [ServiceContext].\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Error\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                An unexpected application error that implements the [Error] interface.\ninterface Error {\nname: string;\nmessage: string;\nstack?: string;\n}\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { BuildMotionLoggingService } from '@buildmotion/logging';\n\nimport { ServiceContext } from '@buildmotion/rules-engine';\nimport { ServiceMessage } from '@buildmotion/rules-engine';\nimport { MessageType } from '@buildmotion/rules-engine';\nimport { Severity } from '@buildmotion/logging';\n\n/**\n * Use the business provider base class to access common elements of the business provider.\n *\n * serviceContext: This is initialized for each instance of a business provider - its purpose is to collect information during the processing of business logic.\n */\nexport class BusinessProviderBase {\n  serviceName: string;\n  serviceContext: ServiceContext;\n  accessToken: string;\n\n  constructor(public loggingService: BuildMotionLoggingService) {\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Information,\n      `Running constructor for the [BusinessProviderBase].`\n    );\n  }\n\n  /**\n   * Use to handle an unexpected error in the application. The error should implement\n   * the specified interface. The method will add a new [ServiceMessage] to the\n   * specified [ServiceContext].\n   * @param error An unexpected application error that implements the [Error] interface.\n   *\n   * interface Error {\n   *  name: string;\n   *  message: string;\n   *  stack?: string;\n   * }\n   */\n  handleUnexpectedError(error: Error): void {\n    const message = new ServiceMessage(error.name, error.message)\n      .WithDisplayToUser(true)\n      .WithMessageType(MessageType.Error)\n      .WithSource(this.serviceName);\n\n    const logItem = `${message.toString()}; ${error.stack}`;\n    this.loggingService.log(this.serviceName, Severity.Error, logItem);\n\n    this.serviceContext.addMessage(message);\n  }\n\n  finishRequest(sourceName: string): void {\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Information,\n      `Request for [${sourceName}] by ${this.serviceName} is complete.`\n    );\n    if (this.serviceContext.hasErrors()) {\n      this.loggingService.log(\n        this.serviceName,\n        Severity.Information,\n        `Preparing to write out the errors.`\n      );\n      this.serviceContext.Messages.filter(\n        f => f.DisplayToUser && f.MessageType === MessageType.Error\n      ).forEach(e =>\n        this.loggingService.log(this.serviceName, Severity.Error, e.toString())\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ComponentBase.html":{"url":"classes/ComponentBase.html","title":"class - ComponentBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ComponentBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/component-base.component.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alertNotification\n                            \n                            \n                                componentName\n                            \n                            \n                                    Public\n                                loggingService\n                            \n                            \n                                navSubscription\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createErrorResponse\n                            \n                            \n                                finishRequest\n                            \n                            \n                                    Private\n                                googleAnalyticsPageview\n                            \n                            \n                                    Public\n                                googleAnalyticsSendEvent\n                            \n                            \n                                handleServiceErrors\n                            \n                            \n                                resetAlertNotifications\n                            \n                            \n                                retrieveResponseErrorMessages\n                            \n                            \n                                retrieveServiceContextErrorMessages\n                            \n                            \n                                    Public\n                                routeTo\n                            \n                            \n                                    Protected\n                                showAlertMessage\n                            \n                            \n                                showResponseErrors\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentName: string, loggingService: BuildMotionLoggingService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in libs/foundation/src/component-base.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentName\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    BuildMotionLoggingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            alertNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        alertNotification:     AlertNotification\n\n                    \n                \n                    \n                        \n                            Type :     AlertNotification\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggingService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingService:     BuildMotionLoggingService\n\n                    \n                \n                    \n                        \n                            Type :     BuildMotionLoggingService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            navSubscription\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        navSubscription:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateErrorResponse(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Use to create a simple [ErrorResponse] with the specified message.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The message to display to the user.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ErrorResponse\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finishRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \nfinishRequest(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:230\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            googleAnalyticsPageview\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        googleAnalyticsPageview(event: NavigationEnd)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    NavigationEnd\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            googleAnalyticsSendEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        googleAnalyticsSendEvent(category: string, action: string, label: string, value: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Use to send an analytic event to [Google Analytics].\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        category\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                A category is a name that you supply as a way to group objects that you want to track. Typically, you will use the same category name multiple times over related UI elements that you want to group under a given category.\n\n                                                        \n                                                \n                                                \n                                                        action\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Use the action parameter to name the type of event or interaction you want to track for a particular web object (i.e., play, stop, pause, download). A unique event is determined by a unique action name. You can use duplicate action names across categories, but this can affect how unique events are calculated. See the suggestions below and the Implicit Count section for more details.\n\n                                                        \n                                                \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Provide additional information for events that you want to track, such as the movie title in the video examples above, or the name of a file when tracking downloads. All labels are listed independently from their parent categories and actions. This provides you with another useful way to segment the event data for your reports. All labels are listed independently from their parent categories and actions. This provides you with another useful way to segment the event data for your reports.\n\n                                                        \n                                                \n                                                \n                                                        value\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Any numeric value indicating a [value] that will be summarized for the analytic item(s).\nMore information at: https://support.google.com/analytics/answer/1033068\nor https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleServiceErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleServiceErrors(errorResponse: ErrorResponse, serviceContext?: ServiceContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:120\n                            \n                        \n\n\n                \n                    \n                            Use to handle service errors. These are error response [See: ErrorResponse] from\nthe application business layers (Action(s) or Http) that will bubble up to the\ncaller (i.e., a component) in a specified format:\nIsSuccess: boolean = false; // default for ErrorResponse\nMessage: string;\nErrors: Array = new Array();\nException: any;\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    ErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        serviceContext\n                                                        \n                                                                    ServiceContext\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetAlertNotifications\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetAlertNotifications()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:201\n                            \n                        \n\n\n                \n                    \n                            Use to reset the [AlertNotification] to the initial state. Removes\nexisting messages and hides the AlertComponent.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveResponseErrorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveResponseErrorMessages(errorResponse: ErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:185\n                            \n                        \n\n\n                \n                    \n                            Use to retrieve the error messages from the specified Web API response.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        errorResponse\n                                                        \n                                                                    ErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieveServiceContextErrorMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieveServiceContextErrorMessages(serviceContext: ServiceContext)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:170\n                            \n                        \n\n\n                \n                    \n                            Use to retrieve the error messages from the specified [ServiceContext].\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceContext\n                                                        \n                                                                    ServiceContext\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            routeTo\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        routeTo(routeName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:209\n                            \n                        \n\n\n                \n                    \n                            Use to navigate to the specified route.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        routeName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            showAlertMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        showAlertMessage(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:238\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showResponseErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowResponseErrors(response: ErrorResponse)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/component-base.component.ts:226\n                            \n                        \n\n\n                \n                    \n                            Use to retrieve and show any response error messages.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    ErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Router, NavigationEnd } from '@angular/router';\nimport { Subscription } from 'rxjs/Subscription';\nimport 'rxjs/add/operator/filter';\n\nimport {\n  MessageType,\n  ServiceContext,\n  ServiceMessage\n} from '@buildmotion/rules-engine';\nimport { ErrorResponse } from './models/error-response.model';\nimport { BuildMotionLoggingService, Severity } from '@buildmotion/logging';\nimport { AlertNotification } from './models/alert-notification.model';\nimport { AlertTypes } from './models/alert-types.constants';\n\nexport class ComponentBase {\n  componentName: string;\n  alertNotification: AlertNotification;\n  navSubscription: Subscription;\n\n  constructor(\n    componentName: string,\n    public loggingService: BuildMotionLoggingService,\n    public router: Router\n  ) {\n    this.componentName = componentName;\n    this.alertNotification = new AlertNotification('', '');\n\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.googleAnalyticsPageview(event);\n      }\n    });\n    // const routerEvent = this.router.events.filter(\n    //   event => event instanceof NavigationEnd\n    // );\n    // if (routerEvent && routerEvent instanceof NavigationEnd) {\n    //   this.googleAnalyticsPageview(routerEvent);\n    // }\n  }\n\n  /**\n   * Use to send an analytic event to [Google Analytics].\n   * @param category A category is a name that you supply as a way to group objects that you want to track. Typically, you will use the same category name multiple times over related UI elements that you want to group under a given category.\n   * @param action Use the action parameter to name the type of event or interaction you want to track for a particular web object (i.e., play, stop, pause, download). A unique event is determined by a unique action name. You can use duplicate action names across categories, but this can affect how unique events are calculated. See the suggestions below and the Implicit Count section for more details.\n   * @param label Provide additional information for events that you want to track, such as the movie title in the video examples above, or the name of a file when tracking downloads. All labels are listed independently from their parent categories and actions. This provides you with another useful way to segment the event data for your reports. All labels are listed independently from their parent categories and actions. This provides you with another useful way to segment the event data for your reports.\n   * @param value Any numeric value indicating a [value] that will be summarized for the analytic item(s).\n   *\n   * More information at: https://support.google.com/analytics/answer/1033068\n   * or https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n   */\n  public googleAnalyticsSendEvent(\n    category: string,\n    action: string,\n    label: string,\n    value: number\n  ) {\n    (window).gtag('event', action, {\n      event_category: category,\n      event_label: label,\n      value: value\n    });\n  }\n\n  private googleAnalyticsPageview(event: NavigationEnd) {\n    if (event && event.urlAfterRedirects) {\n      this.loggingService.log(\n        this.componentName,\n        Severity.Information,\n        `Preparing to set [Google Analytics] page view for [${\n          event.urlAfterRedirects\n        }].`\n      );\n      // (window).ga('set', 'page', event.urlAfterRedirects);\n      // (window).ga('send', 'pageview');\n      // ga('create', 'UA-110194344-1', 'auto', this.componentName);\n      // ga(`${this.componentName}.send`, 'pageview');\n\n      // https://blog.thecodecampus.de/angular-2-google-analytics-google-tag-manager/\n      // https://developers.google.com/analytics/devguides/collection/gtagjs/pages\n      const GA_TRACKING_ID = 'UA-110194344-1';\n      // gtag('config', 'GA_TRACKING_ID', {});\n      (window).ga('config', GA_TRACKING_ID, {\n        page_title: this.componentName,\n        page_path: event.urlAfterRedirects\n      });\n    } else {\n      this.loggingService.log(\n        this.componentName,\n        Severity.Warning,\n        `Failed to set [Google Analytics] page view.`\n      );\n    }\n  }\n\n  /**\n   * Use to create a simple [ErrorResponse] with the specified message.\n   * @param message The message to display to the user.\n   */\n  createErrorResponse(message: string): ErrorResponse {\n    this.loggingService.log(\n      this.componentName,\n      Severity.Information,\n      `Preparing to create error response for component.`\n    );\n    const errorResponse: ErrorResponse = new ErrorResponse();\n    errorResponse.Message = message;\n    return errorResponse;\n  }\n\n  /**\n   * Use to handle service errors. These are error response [See: ErrorResponse] from\n   * the application business layers (Action(s) or Http) that will bubble up to the\n   * caller (i.e., a component) in a specified format:\n   *\n   * IsSuccess: boolean = false; // default for ErrorResponse\n   * Message: string;\n   * Errors: Array = new Array();\n   * Exception: any;\n   */\n  handleServiceErrors(\n    errorResponse: ErrorResponse,\n    serviceContext?: ServiceContext\n  ) {\n    this.loggingService.log(\n      this.componentName,\n      Severity.Information,\n      `Preparing to handle service errors for component.`\n    );\n    if (serviceContext && serviceContext.hasErrors()) {\n      this.loggingService.log(\n        this.componentName,\n        Severity.Information,\n        `Retrieving error messages from the ServiceContext/ValidationContext;`\n      );\n      const messages = this.retrieveServiceContextErrorMessages(serviceContext);\n      this.alertNotification = new AlertNotification(\n        'Errors',\n        errorResponse.Message,\n        messages,\n        AlertTypes.Warning\n      );\n    } else {\n      if (errorResponse && errorResponse.Message) {\n        this.loggingService.log(\n          this.componentName,\n          Severity.Information,\n          `Retrieving error messages from the [ErrorResponse].`\n        );\n        const errors = this.retrieveResponseErrorMessages(errorResponse);\n        this.alertNotification = new AlertNotification(\n          'Error',\n          errorResponse.Message,\n          errors,\n          AlertTypes.Warning\n        );\n        this.loggingService.log(\n          this.componentName,\n          Severity.Error,\n          `Error: ${errorResponse.Message}`\n        );\n      }\n    }\n  }\n\n  /**\n   * Use to retrieve the error messages from the specified [ServiceContext].\n   *\n   * @parm: serviceContext: A context object containing messages for the specified request.\n   */\n  retrieveServiceContextErrorMessages(\n    serviceContext: ServiceContext\n  ): Array {\n    const messages = Array();\n    serviceContext.Messages.forEach(e => {\n      if (e.MessageType === MessageType.Error && e.DisplayToUser) {\n        messages.push(e.Message);\n      }\n    });\n    return messages;\n  }\n\n  /**\n   * Use to retrieve the error messages from the specified Web API response.\n   */\n  retrieveResponseErrorMessages(errorResponse: ErrorResponse) {\n    const errors = new Array();\n    if (errorResponse && errorResponse.Errors) {\n      errorResponse.Errors.forEach(e => {\n        if (e.DisplayToUser) {\n          errors.push(e.Message);\n        }\n      });\n    }\n    return errors;\n  }\n\n  /**\n   * Use to reset the [AlertNotification] to the initial state. Removes\n   * existing messages and hides the AlertComponent.\n   */\n  resetAlertNotifications() {\n    this.alertNotification = new AlertNotification('', '');\n  }\n\n  /**\n   * Use to navigate to the specified route.\n   * @parm routeName The name of the target route.\n   */\n  public routeTo(routeName: string) {\n    try {\n      this.router.navigate([routeName]);\n    } catch (error) {\n      this.loggingService.log(\n        this.componentName,\n        Severity.Error,\n        `Error while attempting to navigate to [${routeName}] route from ${\n          this.componentName\n        }. Error: ${error.toString()}`\n      );\n    }\n  }\n\n  /**\n   * Use to retrieve and show any response error messages.\n   */\n  showResponseErrors(response: ErrorResponse) {\n    this.handleServiceErrors(response, undefined);\n  }\n\n  finishRequest(message: string): void {\n    this.loggingService.log(\n      this.componentName,\n      Severity.Information,\n      `${this.componentName}: ${message}`\n    );\n  }\n\n  protected showAlertMessage(message: string): void {\n    alert(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorResponse.html":{"url":"classes/ErrorResponse.html","title":"class - ErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/models/error-response.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Errors\n                            \n                            \n                                Exception\n                            \n                            \n                                IsSuccess\n                            \n                            \n                                Message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Errors:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/error-response.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Exception\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Exception:     Error\n\n                    \n                \n                    \n                        \n                            Type :     Error\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/error-response.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IsSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IsSuccess:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/error-response.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/error-response.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceError } from './service-error.model';\n\nexport class ErrorResponse {\n  IsSuccess = false; // default for ErrorResponse\n  Message: string;\n  Errors: Array = new Array();\n  Exception: Error;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpBaseService.html":{"url":"injectables/HttpBaseService.html","title":"injectable - HttpBaseService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HttpBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/http-base.service.ts\n        \n\n            \n                Description\n            \n            \n                Use to create and execute HTTP service requests.\n\nCreate Headers\nCreate RequestOptions\nExecute Request\n\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    Public\n                                http\n                            \n                            \n                                    Public\n                                loggingService\n                            \n                            \n                                    Public\n                                serviceName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createErrorResponse\n                            \n                            \n                                createFormUrlencodedHeader\n                            \n                            \n                                createHeader\n                            \n                            \n                                createMultipartFormDataHeader\n                            \n                            \n                                createRequestOptions\n                            \n                            \n                                executeRequest\n                            \n                            \n                                handleHttpError\n                            \n                            \n                                handleUnexpectedError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: Http, loggingService: BuildMotionLoggingService)\n                    \n                \n                        \n                            \n                                Defined in libs/foundation/src/http-base.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    Http\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    BuildMotionLoggingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateErrorResponse(error?: Error)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Error\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ErrorResponse\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createFormUrlencodedHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateFormUrlencodedHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Use to create a [Header] for Content-Type [application/x-www-form-urlencoded].\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateHeader(requiresAuthToken: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            Use to create a [Header] for the HTTP request. If the [requiresAuthToken] indicator\nis true, the request will use the current Authorization security token.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requiresAuthToken\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createMultipartFormDataHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateMultipartFormDataHeader(requiresAuthToken: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Use to create a [Header] for [multipart/form-data].\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requiresAuthToken\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createRequestOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateRequestOptions(method: RequestMethod, headers: Headers, url: string, body: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Use to create a new instance of a [RequestOptions] object.\nSee RequestOptions: https://angular.io/docs/ts/latest/api/http/index/RequestOptions-class.html\nSee RequestMethod: https://angular.io/docs/ts/latest/api/http/index/RequestMethod-enum.html\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    RequestMethod\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        headers\n                                                        \n                                                                    Headers\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        body\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            executeRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecuteRequest(requestOptions: RequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:112\n                            \n                        \n\n\n                \n                    \n                            Use to execute an HTTP request using the specified header and URL.\nSee Request: https://angular.io/docs/ts/latest/api/http/index/Request-class.html\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestOptions\n                                                        \n                                                                    RequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleHttpError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleHttpError(error: any, requestOptions: RequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:129\n                            \n                        \n\n\n                \n                    \n                            Use to handle HTTP errors when calling web api(s).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        requestOptions\n                                                        \n                                                                    RequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleUnexpectedError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleUnexpectedError(error?: Error)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:165\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Error\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accessToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            http\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        http:     Http\n\n                    \n                \n                    \n                        \n                            Type :     Http\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggingService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingService:     BuildMotionLoggingService\n\n                    \n                \n                    \n                        \n                            Type :     BuildMotionLoggingService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            serviceName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'HttpBaseService'\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/http-base.service.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  Headers,\n  Http,\n  Request,\n  RequestMethod,\n  RequestOptions,\n  Response\n} from '@angular/http';\nimport { Observable } from 'rxjs/observable';\nimport { BehaviorSubject } from 'rxjs/Rx';\n\nimport { Severity } from '@buildmotion/logging';\nimport { BuildMotionLoggingService } from '@buildmotion/logging';\nimport { ErrorResponse } from './models/error-response.model';\nimport { ServiceError } from './models/service-error.model';\n\n/**\n * Use to create and execute HTTP service requests.\n * 1. Create Headers\n * 2. Create RequestOptions\n * 3. Execute Request\n */\n@Injectable()\nexport class HttpBaseService {\n  public serviceName = 'HttpBaseService';\n  accessToken: string;\n\n  constructor(\n    public http: Http,\n    public loggingService: BuildMotionLoggingService\n  ) {}\n\n  /**\n   * Use to create a [Header] for [multipart/form-data].\n   */\n  createMultipartFormDataHeader(requiresAuthToken: boolean) {\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Information,\n      `Preparing to create header for the [multipart/form-data] HTTP request. RequiresAuthToken: ${requiresAuthToken}.`\n    );\n    const headers = new Headers();\n    if (requiresAuthToken) {\n      // create header request with security token;\n      headers.append('Authorization', `Bearer ${this.accessToken}`);\n    }\n    return headers;\n  }\n\n  /**\n   * Use to create a [Header] for Content-Type [application/x-www-form-urlencoded].\n   */\n  createFormUrlencodedHeader() {\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Information,\n      `Preparing to create header for the [application/x-www-form-urlencoded] HTTP request.`\n    );\n    const headers = new Headers({\n      'Content-Type': 'application/x-www-form-urlencoded'\n    });\n    return headers;\n  }\n\n  /**\n   * Use to create a [Header] for the HTTP request. If the [requiresAuthToken] indicator\n   * is true, the request will use the current Authorization security token.\n   * @param isSecure\n   */\n  createHeader(requiresAuthToken: boolean) {\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Information,\n      `Preparing to create header for the HTTP request. RequiresAuthToken: ${requiresAuthToken}.`\n    );\n    const headers = new Headers({ 'Content-Type': 'application/json' });\n    if (requiresAuthToken) {\n      headers.append('Authorization', `Bearer ${this.accessToken}`);\n    }\n    return headers;\n  }\n\n  /**\n   * Use to create a new instance of a [RequestOptions] object.\n   * See RequestOptions: https://angular.io/docs/ts/latest/api/http/index/RequestOptions-class.html\n   * See RequestMethod: https://angular.io/docs/ts/latest/api/http/index/RequestMethod-enum.html\n   */\n  createRequestOptions(\n    method: RequestMethod,\n    headers: Headers,\n    url: string,\n    body: any\n  ) {\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Information,\n      `Preparing to create request options for the HTTP request.`\n    );\n    return new RequestOptions({\n      method: method,\n      headers: headers,\n      url: url,\n      body: body\n    });\n  }\n\n  /**\n   * Use to execute an HTTP request using the specified header and URL.\n   * See Request: https://angular.io/docs/ts/latest/api/http/index/Request-class.html\n   */\n  executeRequest(requestOptions: RequestOptions) {\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Information,\n      `Preparing to execute HTTP request. Url: ${requestOptions.url}, Method: ${\n        requestOptions.method\n      }`\n    );\n    return this.http\n      .request(new Request(requestOptions))\n      .map(response => response.json()) // maps the observable response to a JSON object;\n      .catch(error => this.handleHttpError(error, requestOptions)); // use to handle any exception during service call;\n  }\n\n  /**\n   * Use to handle HTTP errors when calling web api(s).\n   */\n  handleHttpError(\n    error: any,\n    requestOptions: RequestOptions\n  ): Observable {\n    const message = `${error.toString()} ${\n      requestOptions.url\n    }, ${JSON.stringify(requestOptions.body)}`;\n    this.loggingService.log(this.serviceName, Severity.Error, message);\n    if (error && error._body) {\n      /**\n       * This is an error that contains a body - a [Response] from the application web api. Includes:\n       * 1. IsSuccess\n       * 2. Message\n       * 3. Array of ServiceError items\n       * 4. Exception (optional)\n       */\n      try {\n        const response: ErrorResponse = error.json();\n        if (response) {\n          const subject: BehaviorSubject = new BehaviorSubject(response);\n          return subject.asObservable();\n        } else {\n          // TODO: RETRIEVE ERROR DETAILS; STATUS, MESSAGE; ETC. AND PROVIDE TO HANDLER;\n          return this.handleUnexpectedError(error);\n        }\n      } catch (ex) {\n        const err = ex;\n        const errorMessage = `${err.name}; ${err.message}`;\n        this.loggingService.log(this.serviceName, Severity.Error, errorMessage);\n        return this.handleUnexpectedError(err);\n      }\n    } else {\n      return this.handleUnexpectedError(error);\n    }\n  }\n\n  handleUnexpectedError(error?: Error) {\n    const response = this.createErrorResponse(error);\n    const subject: BehaviorSubject = new BehaviorSubject(response);\n    return subject.asObservable();\n  }\n\n  createErrorResponse(error?: Error): ErrorResponse {\n    let message = 'Unexpected error while processing response.';\n    const response: ErrorResponse = new ErrorResponse();\n    if (error instanceof Error) {\n      message = `${error.name} - ${error.message}`;\n      response.Exception = error;\n    }\n    response.Message = message;\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OAuthErrorResponse.html":{"url":"interfaces/OAuthErrorResponse.html","title":"interface - OAuthErrorResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OAuthErrorResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/models/oauth-error-response.model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _body\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _body\n                                    \n                                \n                                \n                                    \n                                        _body:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface OAuthErrorResponse {\n  _body: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceBase.html":{"url":"classes/ServiceBase.html","title":"class - ServiceBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceBase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/service-base.ts\n        \n\n            \n                Description\n            \n            \n                Use the [ServiceBase] to provide common behavior for Angular\nservices.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    Public\n                                loggingService\n                            \n                            \n                                serviceContext\n                            \n                            \n                                serviceName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createErrorResponse\n                            \n                            \n                                extractData\n                            \n                            \n                                finishRequest\n                            \n                            \n                                handleError\n                            \n                            \n                                handleHttpError\n                            \n                            \n                                handleOAuthError\n                            \n                            \n                                handleUnexpectedError\n                            \n                            \n                                resetServiceContext\n                            \n                            \n                                writeMessages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: BuildMotionLoggingService)\n                    \n                \n                        \n                            \n                                Defined in libs/foundation/src/service-base.ts:20\n                            \n                        \n\n                \n                    \n                            Use the constructor to provide required elements to the base class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    BuildMotionLoggingService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The [LoggingService] is a required dependency of this\nclass. It should be injected into any Angular Services that extend from\nthis base class. It will allow the members of the base class to log information\nusing the common LoggingService.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accessToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loggingService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loggingService:     BuildMotionLoggingService\n\n                    \n                \n                    \n                        \n                            Type :     BuildMotionLoggingService\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:30\n                            \n                        \n\n                \n                    \n                        The [LoggingService] is a required dependency of this\nclass. It should be injected into any Angular Services that extend from\nthis base class. It will allow the members of the base class to log information\nusing the common LoggingService.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceContext\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceContext:     ServiceContext\n\n                    \n                \n                    \n                        \n                            Type :     ServiceContext\n\n                        \n                    \n                    \n                        \n                            Default value : new ServiceContext()\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            serviceName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        serviceName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createErrorResponse\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateErrorResponse(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:159\n                            \n                        \n\n\n                \n                    \n                            Use to create a new [ErrorResponse] with the specified message.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The message for the specified [ErrorResponse].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ErrorResponse\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            extractData\n                            \n                            \n                        \n                    \n                \n                \n                    \nextractData(response: Response)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:37\n                            \n                        \n\n\n                \n                    \n                            Use to extract the contents of the HTTP body and return a JSON\nrepresentation of the data.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                        \n                                                                    Response\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : contains the HTTP response.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finishRequest\n                            \n                            \n                        \n                    \n                \n                \n                    \nfinishRequest(sourceName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:169\n                            \n                        \n\n\n                \n                    \n                            Use a generic method to finish service requests that return [Observables].\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sourceName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleError(error: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:70\n                            \n                        \n\n\n                \n                    \n                            Use to handle an error that contains a [name] and a [message].\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleHttpError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleHttpError(error: literal type, requestOptions: RequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:88\n                            \n                        \n\n\n                \n                    \n                            Use to handle HTTP errors when calling web api(s).\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        requestOptions\n                                                        \n                                                                    RequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleOAuthError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleOAuthError(error: OAuthErrorResponse, requestOptions: RequestOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:125\n                            \n                        \n\n\n                \n                    \n                            Use this method to handle an error from the OAuth Provider API.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    OAuthErrorResponse\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        requestOptions\n                                                        \n                                                                    RequestOptions\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            handleUnexpectedError\n                            \n                            \n                        \n                    \n                \n                \n                    \nhandleUnexpectedError(error: Error)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:54\n                            \n                        \n\n\n                \n                    \n                            Use to handle an unexpected error in the application. The error should implement\nthe specified interface. The method will add a new [ServiceMessage] to the\nspecified [ServiceContext].\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        error\n                                                        \n                                                                    Error\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                An unexpected application error that implements the [Error] interface.\ninterface Error {\nname: string;\nmessage: string;\nstack?: string;\n}\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetServiceContext\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetServiceContext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:193\n                            \n                        \n\n\n                \n                    \n                            Use to reset the service context when you want to clear messages from the [ServiceContext]. If you want to\nappend messages from subsequent service calls, do not use this method.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeMessages\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteMessages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/foundation/src/service-base.ts:232\n                            \n                        \n\n\n                \n                    \n                            Use to write the current messages contained in the [ServiceContext]. Written messages are limited\nto items that are marked as [DisplayToUser = true].\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ServiceContext,\n  MessageType,\n  ServiceMessage\n} from '@buildmotion/rules-engine';\nimport { BuildMotionLoggingService, Severity } from '@buildmotion/logging';\nimport { ErrorResponse } from './models/error-response.model';\nimport { OAuthErrorResponse } from './models/oauth-error-response.model';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { RequestOptions, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * Use the [ServiceBase] to provide common behavior for Angular\n * services.\n */\nexport class ServiceBase {\n  accessToken = '';\n  serviceName: string;\n  serviceContext: ServiceContext = new ServiceContext();\n\n  /**\n   * Use the constructor to provide required elements to the base class.\n   *\n   * @param loggingService The [LoggingService] is a required dependency of this\n   * class. It should be injected into any Angular Services that extend from\n   * this base class. It will allow the members of the base class to log information\n   * using the common LoggingService.\n   */\n  constructor(public loggingService: BuildMotionLoggingService) {}\n\n  /**\n   * Use to extract the contents of the HTTP body and return a JSON\n   * representation of the data.\n   * @param response: contains the HTTP response.\n   */\n  extractData(response: Response) {\n    const body = response.json();\n    return body.data || {};\n  }\n\n  /**\n   * Use to handle an unexpected error in the application. The error should implement\n   * the specified interface. The method will add a new [ServiceMessage] to the\n   * specified [ServiceContext].\n   * @param error An unexpected application error that implements the [Error] interface.\n   *\n   * interface Error {\n   *  name: string;\n   *  message: string;\n   *  stack?: string;\n   * }\n   */\n  handleUnexpectedError(error: Error): void {\n    const message = new ServiceMessage(error.name, error.message)\n      .WithDisplayToUser(true)\n      .WithMessageType(MessageType.Error)\n      .WithSource(this.serviceName);\n\n    const logItem = `${message.toString()}; ${error.stack}`;\n    this.loggingService.log(this.serviceName, Severity.Error, logItem);\n\n    this.serviceContext.addMessage(message);\n  }\n\n  /**\n   * Use to handle an error that contains a [name] and a [message].\n   * @param error\n   */\n  handleError(error: { name: string; message: string | undefined }): void {\n    const message = new ServiceMessage(error.name, error.message)\n      .WithDisplayToUser(true)\n      .WithMessageType(MessageType.Error)\n      .WithSource(this.serviceName);\n\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Error,\n      message.toString()\n    );\n\n    this.serviceContext.addMessage(message);\n  }\n\n  /**\n   * Use to handle HTTP errors when calling web api(s).\n   */\n  handleHttpError(\n    error: { toString: () => void; _body: any; json: () => ErrorResponse },\n    requestOptions: RequestOptions\n  ): Observable {\n    const message = `${error.toString()} ${\n      requestOptions.url\n    }, ${JSON.stringify(requestOptions.body)}`;\n    this.loggingService.log(this.serviceName, Severity.Error, message);\n    if (error && error._body) {\n      try {\n        const errorResponse: ErrorResponse = error.json();\n        const behaviorSubject: BehaviorSubject = new BehaviorSubject(\n          errorResponse\n        );\n        return behaviorSubject.asObservable();\n      } catch (error) {\n        this.loggingService.log(\n          this.serviceName,\n          Severity.Error,\n          error.toString()\n        );\n      }\n    }\n\n    // default return behavior;\n    const response = this.createErrorResponse(\n      'Unexpected error while processing response.'\n    );\n    const subject: BehaviorSubject = new BehaviorSubject(response);\n    return subject.asObservable();\n  }\n\n  /**\n   * Use this method to handle an error from the OAuth Provider API.\n   * @param error\n   * @param requestOptions\n   */\n  handleOAuthError(\n    error: OAuthErrorResponse,\n    requestOptions: RequestOptions\n  ): Observable {\n    const message = `${error.toString()} ${\n      requestOptions.url\n    }, ${JSON.stringify(requestOptions.body)}`;\n    this.loggingService.log(this.serviceName, Severity.Error, message);\n    if (error && error._body) {\n      try {\n        const errorResponse = this.createErrorResponse(\n          `Unable to validate credentials.`\n        );\n        const behaviorSubject: BehaviorSubject = new BehaviorSubject(\n          errorResponse\n        );\n        return behaviorSubject.asObservable();\n      } catch (e) {\n        this.loggingService.log(this.serviceName, Severity.Error, e.toString());\n      }\n    }\n\n    // default return behavior;\n    const response = this.createErrorResponse(\n      `Unable to validate credentials.`\n    );\n    const subject: BehaviorSubject = new BehaviorSubject(response);\n    return subject.asObservable();\n  }\n\n  /**\n   * Use to create a new [ErrorResponse] with the specified message.\n   * @param message The message for the specified [ErrorResponse].\n   */\n  createErrorResponse(message: string): ErrorResponse {\n    const response: ErrorResponse = new ErrorResponse();\n    response.Message = message;\n    return response;\n  }\n\n  /**\n   * Use a generic method to finish service requests that return [Observables].\n   * @param sourceName\n   */\n  finishRequest(sourceName: string): void {\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Information,\n      `Request for [${sourceName}] by ${this.serviceName} is complete.`\n    );\n    if (this.serviceContext.hasErrors()) {\n      this.loggingService.log(\n        this.serviceName,\n        Severity.Information,\n        `Preparing to write any messages.`\n      );\n      this.serviceContext.Messages.filter(\n        f => f.MessageType === MessageType.Error && f.DisplayToUser\n      ).forEach(e =>\n        this.loggingService.log(this.serviceName, Severity.Error, e.toString())\n      );\n    }\n  }\n\n  /**\n   * Use to reset the service context when you want to clear messages from the [ServiceContext]. If you want to\n   * append messages from subsequent service calls, do not use this method.\n   */\n  resetServiceContext() {\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Information,\n      `Preparing to reset the Messages of the current [ServiceContext].`\n    );\n    if (this.serviceContext && this.serviceContext.Messages) {\n      if (this.serviceContext.Messages.length > 0) {\n        this.loggingService.log(\n          this.serviceName,\n          Severity.Information,\n          `Resetting the Messages of the current [ServiceContext].`\n        );\n        this.serviceContext.Messages = new Array();\n      } else {\n        this.loggingService.log(\n          this.serviceName,\n          Severity.Information,\n          `The current [ServiceContext] does not contain any [Messages].`\n        );\n      }\n    } else {\n      this.loggingService.log(\n        this.serviceName,\n        Severity.Warning,\n        `The current [ServiceContext] is not valid.`\n      );\n    }\n    this.loggingService.log(\n      this.serviceName,\n      Severity.Information,\n      `Finished  processing request to [reset] the Messages of the current [ServiceContext].`\n    );\n  }\n\n  /**\n   * Use to write the current messages contained in the [ServiceContext]. Written messages are limited\n   * to items that are marked as [DisplayToUser = true].\n   */\n  writeMessages() {\n    if (this.serviceContext && this.serviceContext.Messages) {\n      this.serviceContext.Messages.forEach(e => {\n        if (e.MessageType === MessageType.Error && e.DisplayToUser) {\n          this.loggingService.log(\n            this.serviceName,\n            Severity.Error,\n            e.toString()\n          );\n        }\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceError.html":{"url":"classes/ServiceError.html","title":"class - ServiceError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/models/service-error.model.ts\n        \n\n            \n                Description\n            \n            \n                Use this model to represent service error/message information from the\napplication's service APIs.\nThe DisplayToUser boolean value indicates whether the message should be\ndisplayed to the user if desired.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DisplayToUser\n                            \n                            \n                                Exception\n                            \n                            \n                                Message\n                            \n                            \n                                Name\n                            \n                            \n                                Source\n                            \n                            \n                                Target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DisplayToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DisplayToUser:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/service-error.model.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Exception\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Exception:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/service-error.model.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/service-error.model.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/service-error.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Source\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Source:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/service-error.model.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Target:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/service-error.model.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ServiceError {\n  // \"{\"IsSuccess\":false,\n  // \"Message\":\"Failed to create new user account.\",\n  // \"Errors\":[{\"Name\":\"PasswordFormatIsValid\",\n  // \"Message\":\"The password format is not valid. Must contain at least one: alpha, numeric, and special character.\",\n  // \"Exception\":null,\"Source\":\"CreateLearnerAccountAction\",\n  // DisplayToUser\":true,\"Target\":\"\"}]}\"\n\n  Name: string;\n  Message: string;\n  Exception: any;\n  DisplayToUser: boolean;\n  Source: string;\n  Target: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceResponse.html":{"url":"classes/ServiceResponse.html","title":"class - ServiceResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/foundation/src/models/service-response.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Data\n                            \n                            \n                                Errors\n                            \n                            \n                                IsSuccess\n                            \n                            \n                                Message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Data\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Data:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/service-response.model.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Errors:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/service-response.model.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            IsSuccess\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        IsSuccess:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/service-response.model.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/foundation/src/models/service-response.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceError } from './service-error.model';\n\nexport class ServiceResponse {\n  IsSuccess: boolean;\n  Message: string;\n  Data: any;\n  Errors: Array = new Array();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    libs/foundation/src/action-base.action.ts\n            \n            \n                class\n            \n            \n                ActionBase\n            \n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                    libs/foundation/src/business-provider-base.service.ts\n            \n            \n                class\n            \n            \n                BusinessProviderBase\n            \n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                    libs/foundation/src/component-base.component.ts\n            \n            \n                class\n            \n            \n                ComponentBase\n            \n            \n                44 %\n                (8/18)\n            \n        \n        \n            \n                \n                    libs/foundation/src/http-base.service.ts\n            \n            \n                injectable\n            \n            \n                HttpBaseService\n            \n            \n                50 %\n                (7/14)\n            \n        \n        \n            \n                \n                    libs/foundation/src/models/alert-notification.model.ts\n            \n            \n                class\n            \n            \n                AlertNotification\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    libs/foundation/src/models/alert-types.constants.ts\n            \n            \n                class\n            \n            \n                AlertTypes\n            \n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                    libs/foundation/src/models/error-response.model.ts\n            \n            \n                class\n            \n            \n                ErrorResponse\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    libs/foundation/src/models/oauth-error-response.model.ts\n            \n            \n                interface\n            \n            \n                OAuthErrorResponse\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    libs/foundation/src/models/service-error.model.ts\n            \n            \n                class\n            \n            \n                ServiceError\n            \n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                    libs/foundation/src/models/service-response.model.ts\n            \n            \n                class\n            \n            \n                ServiceResponse\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    libs/foundation/src/service-base.ts\n            \n            \n                class\n            \n            \n                ServiceBase\n            \n            \n                80 %\n                (12/15)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 5.2.7\n        \n            @angular/common : 5.2.7\n        \n            @angular/compiler : 5.2.7\n        \n            @angular/core : 5.2.7\n        \n            @angular/forms : 5.2.7\n        \n            @angular/http : 5.2.7\n        \n            @angular/platform-browser : 5.2.7\n        \n            @angular/platform-browser-dynamic : 5.2.7\n        \n            @angular/router : 5.2.7\n        \n            core-js : ^2.4.1\n        \n            rxjs : ^5.5.6\n        \n            zone.js : ^0.8.19\n        \n            @nrwl/nx : 1.0.3\n        \n            @ngrx/effects : 5.2.0\n        \n            @ngrx/router-store : 5.0.1\n        \n            @ngrx/store : 5.2.0\n        \n            @ngrx/store-devtools : 5.2.0\n        \n            ngrx-store-freeze : ^0.2.1\n        \n            simplemde : ^1.11.2\n        \n            typescript-dotnet-commonjs : ^4.10.0\n        \n            viz : ^0.0.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBuildmotionWorkspace\nThis project was generated with Angular CLI using Nrwl Nx.\nNrwl Extensions for Angular (Nx)\n\nNx is an open source toolkit for enterprise Angular applications.\nNx is designed to help you create and build enterprise grade Angular applications. It provides an opinionated approach to application project structure and patterns.\nQuick Start & Documentation\nWatch a 5-minute video on how to get started with Nx.\nGenerate your first application\nRun ng generate app myapp to generate an application. When using Nx, you can create multiple applications and libraries in the same CLI workspace. Read more here.\nDevelopment server\nRun ng serve --app=myapp for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name --app=myapp to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build --app=myapp to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BuildMotionFoundationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        9 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
