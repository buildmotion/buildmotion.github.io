var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/Action.html",[0,0.635,1,0.635]],["body/classes/Action.html",[0,0.752,1,1.204,2,0.331,3,0.252,4,0.188,5,0.437,6,0.437,7,1.046,8,0.925,9,3.132,10,1.046,11,1.955,12,2.461,13,2.497,14,1.046,15,0.764,16,2.09,17,3.606,18,0.579,19,1.321,20,0.764,21,2.388,22,0.764,23,2.388,24,1.046,25,2.611,26,0.764,27,2.09,28,1.046,29,0.598,30,1.046,31,1.046,32,2.785,33,2.388,34,1.926,35,1.046,36,0.598,37,1.046,38,1.046,39,2.09,40,1.046,41,2.388,42,1.046,43,2.09,44,0.704,45,0.252,46,1.046,47,2.984,48,1.672,49,1.975,50,1.672,51,1.672,52,2.388,53,1.9,54,2.25,55,1.672,56,1.672,57,1.672,58,1.9,59,2.374,60,1.046,61,2.25,62,2.785,63,0.764,64,0.109,65,1.388,66,0.925,67,0.598,68,3.341,69,2.25,70,1.672,71,1.046,72,1.046,73,0.071,74,0.764,75,1.046,76,1.394,77,0.598,78,0.764,79,1.672,80,2.984,81,1.672,82,0.598,83,2.611,84,1.046,85,1.672,86,1.046,87,2.319,88,2.137,89,0.598,90,3.038,91,0.598,92,2.25,93,0.598,94,1.046,95,1.046,96,1.046,97,1.046,98,1.046,99,0.598,100,0.764,101,0.598,102,1.046,103,0.598,104,1.046,105,1.046,106,1.046,107,0.598,108,1.672,109,1.046,110,1.046,111,0.598,112,1.672,113,1.527,114,0.598,115,1.046,116,0.598,117,2.09,118,1.046,119,1.672,120,1.527,121,1.046,122,0.598,123,0.598,124,1.046,125,1.046,126,1.046,127,1.046,128,0.598,129,1.046,130,0.598,131,1.046,132,0.598,133,1.046,134,0.598,135,0.598,136,0.598,137,1.046,138,1.222,139,0.764,140,0.764,141,0.598,142,0.252,143,0.598,144,0.598,145,0.598,146,0.598,147,1.394,148,0.598,149,0.598,150,1.046,151,0.598,152,0.598,153,0.598,154,0.598,155,0.598,156,0.598,157,1.046,158,0.598,159,0.598,160,0.598,161,0.598,162,0.598,163,1.046,164,0.598,165,0.598,166,1.046,167,0.598,168,0.598,169,0.598,170,0.598,171,1.046,172,0.598,173,0.598,174,0.598,175,1.046,176,0.598,177,0.598,178,0.598,179,0.028]],["title/modules/ActionsModule.html",[180,0.635,181,1.115]],["body/modules/ActionsModule.html",[0,0.871,2,1.53,3,1.164,4,0.871,64,0.107,73,0.09,138,2.705,139,2.021,140,2.021,142,1.164,179,0.09,180,0.871,181,1.841,182,2.765,183,3.326,184,2.021,185,3.326,186,2.021,187,3.326]],["title/interfaces/IAction.html",[44,0.848,188,0.848]],["body/interfaces/IAction.html",[1,1.106,2,1.475,3,1.122,4,0.84,6,1.947,11,2.111,12,2.672,13,2.377,44,1.369,45,1.122,59,2.377,64,0.105,73,0.088,87,1.947,88,2.377,120,2.377,142,1.122,179,0.088,188,1.478,189,1.947,190,2.665]],["title/coverage.html",[191,1.986]],["body/coverage.html",[0,0.905,1,0.905,4,0.905,5,2.099,44,1.209,63,2.099,64,0.101,66,1.59,73,0.092,179,0.092,188,1.209,189,2.099,191,2.099,192,2.099,193,2.873,194,2.873,195,3.403,196,2.873,197,2.873,198,2.873,199,2.873]],["title/dependencies.html",[200,1.699,201,1.336]],["body/dependencies.html",[64,0.109,73,0.082,179,0.082,184,1.74,186,1.74,201,1.318,202,2.381,203,3.851,204,2.381,205,2.381,206,2.381,207,3.032,208,3.032,209,2.381,210,2.381,211,2.381,212,2.381,213,2.381,214,2.381,215,2.381,216,2.381,217,2.381,218,2.381,219,2.381,220,2.381,221,3.336,222,2.381,223,2.216,224,2.381,225,3.032,226,2.381,227,2.381,228,2.381,229,2.381,230,2.381,231,2.381,232,2.381,233,2.381,234,2.381,235,2.381,236,2.381,237,2.381]],["title/miscellaneous/enumerations.html",[238,1.241,239,1.764]],["body/miscellaneous/enumerations.html",[1,0.895,18,1.571,20,2.075,22,2.075,34,1.571,45,1.195,49,2.47,64,0.091,65,2.637,73,0.098,74,2.47,78,2.075,179,0.091,238,2.075,239,2.075,240,2.84,241,2.84,242,2.84,243,2.84,244,3.38,245,2.84]],["title/index.html",[19,0.94,45,0.715,246,1.699]],["body/index.html",[3,1.075,4,0.58,8,1.018,11,1.414,15,1.345,19,1.414,26,1.345,34,1.842,64,0.079,66,1.018,73,0.069,100,2.316,113,1.345,179,0.069,192,1.345,223,1.345,247,1.84,248,2.934,249,3.534,250,3.446,251,3.169,252,2.554,253,3.446,254,1.84,255,1.84,256,1.84,257,2.554,258,3.446,259,1.84,260,3.169,261,2.554,262,3.446,263,1.84,264,1.84,265,1.84,266,1.84,267,1.84,268,1.84,269,1.84,270,1.84,271,1.84,272,3.658,273,3.658,274,2.934,275,1.84,276,1.84,277,1.84,278,1.84,279,1.84,280,1.84,281,2.554,282,1.84,283,1.84,284,2.554,285,2.934,286,2.934,287,1.84,288,1.84,289,1.84,290,1.84,291,1.84,292,1.84,293,1.84,294,1.84,295,2.934,296,1.84,297,1.84,298,1.84,299,1.84,300,1.84,301,1.84,302,1.84,303,1.84,304,2.554,305,3.446,306,2.934,307,1.84,308,1.84,309,1.84,310,1.84,311,1.84,312,1.84,313,1.84,314,1.84,315,1.345,316,1.84]],["title/modules.html",[180,0.856]],["body/modules.html",[64,0.096,73,0.096,179,0.096,180,0.965,181,1.695,317,3.064,318,3.064,319,3.064]],["title/overview.html",[320,1.986]],["body/overview.html",[0,0.916,8,1.609,18,2.017,64,0.093,73,0.093,142,1.223,179,0.093,180,1.08,188,1.223,201,1.609,315,2.124,320,2.124,321,2.907,322,2.907,323,2.907,324,3.427,325,2.907]]],"invertedIndex":[["",{"_index":64,"title":{},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{},"interfaces/IAction.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0.0.1",{"_index":237,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":229,"title":{},"body":{"dependencies.html":{}}}],["0.8.19",{"_index":217,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":18,"title":{},"body":{"classes/Action.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.3",{"_index":219,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":231,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":42,"title":{},"body":{"classes/Action.html":{}}}],["100",{"_index":195,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":20,"title":{},"body":{"classes/Action.html":{},"miscellaneous/enumerations.html":{}}}],["2.4.1",{"_index":213,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":197,"title":{},"body":{"coverage.html":{}}}],["21/21",{"_index":196,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":22,"title":{},"body":{"classes/Action.html":{},"miscellaneous/enumerations.html":{}}}],["4",{"_index":24,"title":{},"body":{"classes/Action.html":{}}}],["4.10.0",{"_index":235,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":26,"title":{},"body":{"classes/Action.html":{},"index.html":{}}}],["5.0.1",{"_index":224,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":221,"title":{},"body":{"dependencies.html":{}}}],["5.2.7",{"_index":203,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":215,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":28,"title":{},"body":{"classes/Action.html":{}}}],["7",{"_index":35,"title":{},"body":{"classes/Action.html":{}}}],["8",{"_index":38,"title":{},"body":{"classes/Action.html":{}}}],["9",{"_index":40,"title":{},"body":{"classes/Action.html":{}}}],["_validationcontext",{"_index":48,"title":{},"body":{"classes/Action.html":{}}}],["accessor",{"_index":134,"title":{},"body":{"classes/Action.html":{}}}],["action",{"_index":1,"title":{"classes/Action.html":{}},"body":{"classes/Action.html":{},"interfaces/IAction.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["action'",{"_index":118,"title":{},"body":{"classes/Action.html":{}}}],["actionresult",{"_index":49,"title":{},"body":{"classes/Action.html":{},"miscellaneous/enumerations.html":{}}}],["actionresult.unknown",{"_index":72,"title":{},"body":{"classes/Action.html":{}}}],["actionsmodul",{"_index":181,"title":{"modules/ActionsModule.html":{}},"body":{"modules/ActionsModule.html":{},"modules.html":{}}}],["allow",{"_index":79,"title":{},"body":{"classes/Action.html":{}}}],["allowexecut",{"_index":50,"title":{},"body":{"classes/Action.html":{}}}],["angular",{"_index":250,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":186,"title":{},"body":{"modules/ActionsModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":204,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":184,"title":{},"body":{"modules/ActionsModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":205,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":206,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":207,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":210,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":274,"title":{},"body":{"index.html":{}}}],["app=myapp",{"_index":286,"title":{},"body":{"index.html":{}}}],["applic",{"_index":258,"title":{},"body":{"index.html":{}}}],["approach",{"_index":265,"title":{},"body":{"index.html":{}}}],["artifact",{"_index":298,"title":{},"body":{"index.html":{}}}],["audit",{"_index":21,"title":{},"body":{"classes/Action.html":{}}}],["automat",{"_index":290,"title":{},"body":{"index.html":{}}}],["avail",{"_index":318,"title":{},"body":{"modules.html":{}}}],["befor",{"_index":113,"title":{},"body":{"classes/Action.html":{},"index.html":{}}}],["begin",{"_index":129,"title":{},"body":{"classes/Action.html":{}}}],["belong",{"_index":127,"title":{},"body":{"classes/Action.html":{}}}],["bootstrap",{"_index":323,"title":{},"body":{"overview.html":{}}}],["brows",{"_index":319,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":262,"title":{},"body":{"index.html":{}}}],["buildmotion/rul",{"_index":139,"title":{},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{}}}],["buildmotionrulesenginemodul",{"_index":187,"title":{},"body":{"modules/ActionsModule.html":{}}}],["buildmotionworkspac",{"_index":247,"title":{},"body":{"index.html":{}}}],["busi",{"_index":32,"title":{},"body":{"classes/Action.html":{}}}],["call",{"_index":90,"title":{},"body":{"classes/Action.html":{}}}],["chang",{"_index":292,"title":{},"body":{"index.html":{}}}],["check",{"_index":314,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/Action.html":{}},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{},"coverage.html":{},"overview.html":{}}}],["cleanup",{"_index":94,"title":{},"body":{"classes/Action.html":{}}}],["cli",{"_index":251,"title":{},"body":{"index.html":{}}}],["code",{"_index":293,"title":{},"body":{"index.html":{}}}],["commonj",{"_index":234,"title":{},"body":{"dependencies.html":{}}}],["commonmodul",{"_index":185,"title":{},"body":{"modules/ActionsModule.html":{}}}],["compon",{"_index":295,"title":{},"body":{"index.html":{}}}],["concret",{"_index":92,"title":{},"body":{"classes/Action.html":{}}}],["console.log('audit",{"_index":165,"title":{},"body":{"classes/Action.html":{}}}],["console.log('evalu",{"_index":167,"title":{},"body":{"classes/Action.html":{}}}],["console.log('finish",{"_index":157,"title":{},"body":{"classes/Action.html":{}}}],["console.log('post",{"_index":175,"title":{},"body":{"classes/Action.html":{}}}],["console.log('pr",{"_index":166,"title":{},"body":{"classes/Action.html":{}}}],["console.log('prepar",{"_index":144,"title":{},"body":{"classes/Action.html":{}}}],["console.log('process",{"_index":161,"title":{},"body":{"classes/Action.html":{}}}],["console.log('start",{"_index":150,"title":{},"body":{"classes/Action.html":{}}}],["console.log('valid",{"_index":177,"title":{},"body":{"classes/Action.html":{}}}],["const",{"_index":168,"title":{},"body":{"classes/Action.html":{}}}],["constructor",{"_index":58,"title":{},"body":{"classes/Action.html":{}}}],["context",{"_index":69,"title":{},"body":{"classes/Action.html":{}}}],["context.isvalid",{"_index":170,"title":{},"body":{"classes/Action.html":{}}}],["core",{"_index":211,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":191,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":261,"title":{},"body":{"index.html":{}}}],["data",{"_index":131,"title":{},"body":{"classes/Action.html":{}}}],["declar",{"_index":322,"title":{},"body":{"overview.html":{}}}],["default",{"_index":61,"title":{},"body":{"classes/Action.html":{}}}],["defin",{"_index":59,"title":{},"body":{"classes/Action.html":{},"interfaces/IAction.html":{}}}],["depend",{"_index":201,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/Action.html":{},"interfaces/IAction.html":{}}}],["design",{"_index":259,"title":{},"body":{"index.html":{}}}],["determin",{"_index":108,"title":{},"body":{"classes/Action.html":{}}}],["dev",{"_index":287,"title":{},"body":{"index.html":{}}}],["develop",{"_index":283,"title":{},"body":{"index.html":{}}}],["devtool",{"_index":226,"title":{},"body":{"dependencies.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":297,"title":{},"body":{"index.html":{}}}],["directori",{"_index":300,"title":{},"body":{"index.html":{}}}],["dispos",{"_index":96,"title":{},"body":{"classes/Action.html":{}}}],["dist",{"_index":299,"title":{},"body":{"index.html":{}}}],["document",{"_index":192,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dotnet",{"_index":233,"title":{},"body":{"dependencies.html":{}}}],["dure",{"_index":85,"title":{},"body":{"classes/Action.html":{}}}],["dynam",{"_index":209,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":308,"title":{},"body":{"index.html":{}}}],["earli",{"_index":125,"title":{},"body":{"classes/Action.html":{}}}],["end",{"_index":100,"title":{},"body":{"classes/Action.html":{},"index.html":{}}}],["engin",{"_index":140,"title":{},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{}}}],["enterpris",{"_index":257,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":239,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":164,"title":{},"body":{"classes/Action.html":{}}}],["error('concret",{"_index":176,"title":{},"body":{"classes/Action.html":{}}}],["eval",{"_index":110,"title":{},"body":{"classes/Action.html":{}}}],["evalu",{"_index":105,"title":{},"body":{"classes/Action.html":{}}}],["evaluaterul",{"_index":25,"title":{},"body":{"classes/Action.html":{}}}],["except",{"_index":102,"title":{},"body":{"classes/Action.html":{}}}],["exectuion",{"_index":86,"title":{},"body":{"classes/Action.html":{}}}],["execut",{"_index":11,"title":{},"body":{"classes/Action.html":{},"interfaces/IAction.html":{},"index.html":{}}}],["export",{"_index":142,"title":{},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{},"interfaces/IAction.html":{},"overview.html":{}}}],["extens",{"_index":254,"title":{},"body":{"index.html":{}}}],["fail",{"_index":244,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fals",{"_index":173,"title":{},"body":{"classes/Action.html":{}}}],["featur",{"_index":84,"title":{},"body":{"classes/Action.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{},"interfaces/IAction.html":{},"coverage.html":{},"index.html":{}}}],["finish",{"_index":43,"title":{},"body":{"classes/Action.html":{}}}],["finishact",{"_index":51,"title":{},"body":{"classes/Action.html":{}}}],["first",{"_index":271,"title":{},"body":{"index.html":{}}}],["flag",{"_index":302,"title":{},"body":{"index.html":{}}}],["framework",{"_index":7,"title":{},"body":{"classes/Action.html":{}}}],["freez",{"_index":228,"title":{},"body":{"dependencies.html":{}}}],["funciton",{"_index":104,"title":{},"body":{"classes/Action.html":{}}}],["function",{"_index":17,"title":{},"body":{"classes/Action.html":{}}}],["further",{"_index":312,"title":{},"body":{"index.html":{}}}],["gener",{"_index":249,"title":{},"body":{"index.html":{}}}],["get",{"_index":246,"title":{"index.html":{}},"body":{}}],["getvalidationcontext",{"_index":135,"title":{},"body":{"classes/Action.html":{}}}],["go",{"_index":313,"title":{},"body":{"index.html":{}}}],["good",{"_index":31,"title":{},"body":{"classes/Action.html":{}}}],["grade",{"_index":263,"title":{},"body":{"index.html":{}}}],["graph",{"_index":317,"title":{},"body":{"modules.html":{}}}],["handl",{"_index":109,"title":{},"body":{"classes/Action.html":{}}}],["happen",{"_index":115,"title":{},"body":{"classes/Action.html":{}}}],["help",{"_index":260,"title":{},"body":{"index.html":{}}}],["here",{"_index":282,"title":{},"body":{"index.html":{}}}],["http://localhost:4200",{"_index":289,"title":{},"body":{"index.html":{}}}],["i.",{"_index":242,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["iaction",{"_index":44,"title":{"interfaces/IAction.html":{}},"body":{"classes/Action.html":{},"interfaces/IAction.html":{},"coverage.html":{}}}],["identifi",{"_index":193,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":13,"title":{},"body":{"classes/Action.html":{},"interfaces/IAction.html":{}}}],["import",{"_index":138,"title":{},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"classes/Action.html":{},"interfaces/IAction.html":{},"miscellaneous/enumerations.html":{}}}],["indic",{"_index":78,"title":{},"body":{"classes/Action.html":{},"miscellaneous/enumerations.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{},"interfaces/IAction.html":{}}}],["instanc",{"_index":71,"title":{},"body":{"classes/Action.html":{}}}],["interfac",{"_index":188,"title":{"interfaces/IAction.html":{}},"body":{"interfaces/IAction.html":{},"coverage.html":{},"overview.html":{}}}],["js",{"_index":212,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":307,"title":{},"body":{"index.html":{}}}],["last",{"_index":98,"title":{},"body":{"classes/Action.html":{}}}],["legend",{"_index":321,"title":{},"body":{"overview.html":{}}}],["librari",{"_index":277,"title":{},"body":{"index.html":{}}}],["libs/.../actionresult.t",{"_index":240,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/actions/src/action.t",{"_index":5,"title":{},"body":{"classes/Action.html":{},"coverage.html":{}}}],["libs/actions/src/action.ts:110",{"_index":116,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:120",{"_index":101,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:130",{"_index":123,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:138",{"_index":82,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:146",{"_index":114,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:154",{"_index":89,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:170",{"_index":107,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:177",{"_index":111,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:185",{"_index":103,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:193",{"_index":132,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:201",{"_index":93,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:208",{"_index":130,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:33",{"_index":77,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:38",{"_index":67,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:44",{"_index":60,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:54",{"_index":136,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:63",{"_index":91,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:71",{"_index":122,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:83",{"_index":128,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/action.ts:96",{"_index":99,"title":{},"body":{"classes/Action.html":{}}}],["libs/actions/src/actionresult.t",{"_index":241,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/actions/src/actions.module.t",{"_index":182,"title":{},"body":{"modules/ActionsModule.html":{}}}],["libs/actions/src/iaction.t",{"_index":189,"title":{},"body":{"interfaces/IAction.html":{},"coverage.html":{}}}],["libs/actions/src/iaction.ts:10",{"_index":190,"title":{},"body":{"interfaces/IAction.html":{}}}],["log",{"_index":95,"title":{},"body":{"classes/Action.html":{}}}],["logic",{"_index":33,"title":{},"body":{"classes/Action.html":{}}}],["make",{"_index":310,"title":{},"body":{"index.html":{}}}],["match",{"_index":179,"title":{},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{},"interfaces/IAction.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["method",{"_index":12,"title":{},"body":{"classes/Action.html":{},"interfaces/IAction.html":{}}}],["minut",{"_index":269,"title":{},"body":{"index.html":{}}}],["miscellan",{"_index":238,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["modul",{"_index":180,"title":{"modules/ActionsModule.html":{},"modules.html":{}},"body":{"modules/ActionsModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":281,"title":{},"body":{"index.html":{}}}],["multipl",{"_index":276,"title":{},"body":{"index.html":{}}}],["myapp",{"_index":275,"title":{},"body":{"index.html":{}}}],["name",{"_index":296,"title":{},"body":{"index.html":{}}}],["navig",{"_index":288,"title":{},"body":{"index.html":{}}}],["new",{"_index":66,"title":{},"body":{"classes/Action.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":273,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":183,"title":{},"body":{"modules/ActionsModule.html":{}}}],["ngrx",{"_index":227,"title":{},"body":{"dependencies.html":{}}}],["ngrx/effect",{"_index":220,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":222,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":225,"title":{},"body":{"dependencies.html":{}}}],["nrwl",{"_index":252,"title":{},"body":{"index.html":{}}}],["nrwl/nx",{"_index":218,"title":{},"body":{"dependencies.html":{}}}],["nx",{"_index":253,"title":{},"body":{"index.html":{}}}],["open",{"_index":255,"title":{},"body":{"index.html":{}}}],["oper",{"_index":126,"title":{},"body":{"classes/Action.html":{}}}],["opinion",{"_index":264,"title":{},"body":{"index.html":{}}}],["opportun",{"_index":133,"title":{},"body":{"classes/Action.html":{}}}],["out",{"_index":315,"title":{},"body":{"index.html":{},"overview.html":{}}}],["override/impl",{"_index":124,"title":{},"body":{"classes/Action.html":{}}}],["overview",{"_index":320,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":200,"title":{"dependencies.html":{}},"body":{}}],["part",{"_index":121,"title":{},"body":{"classes/Action.html":{}}}],["pattern",{"_index":15,"title":{},"body":{"classes/Action.html":{},"index.html":{}}}],["perform",{"_index":83,"title":{},"body":{"classes/Action.html":{}}}],["performact",{"_index":52,"title":{},"body":{"classes/Action.html":{}}}],["pipelin",{"_index":9,"title":{},"body":{"classes/Action.html":{}}}],["post",{"_index":37,"title":{},"body":{"classes/Action.html":{}}}],["postexecuteact",{"_index":39,"title":{},"body":{"classes/Action.html":{}}}],["postvalidateact",{"_index":27,"title":{},"body":{"classes/Action.html":{}}}],["pre",{"_index":16,"title":{},"body":{"classes/Action.html":{}}}],["pre/post",{"_index":10,"title":{},"body":{"classes/Action.html":{}}}],["preexecuteact",{"_index":53,"title":{},"body":{"classes/Action.html":{}}}],["preexecuteaction();if",{"_index":29,"title":{},"body":{"classes/Action.html":{}}}],["prevalidateact",{"_index":23,"title":{},"body":{"classes/Action.html":{}}}],["privat",{"_index":47,"title":{},"body":{"classes/Action.html":{}}}],["process",{"_index":117,"title":{},"body":{"classes/Action.html":{}}}],["processact",{"_index":54,"title":{},"body":{"classes/Action.html":{}}}],["processaction();th",{"_index":36,"title":{},"body":{"classes/Action.html":{}}}],["processactionpipelin",{"_index":55,"title":{},"body":{"classes/Action.html":{}}}],["prod",{"_index":301,"title":{},"body":{"index.html":{}}}],["product",{"_index":303,"title":{},"body":{"index.html":{}}}],["project",{"_index":248,"title":{},"body":{"index.html":{}}}],["properti",{"_index":46,"title":{},"body":{"classes/Action.html":{}}}],["protractor",{"_index":309,"title":{},"body":{"index.html":{}}}],["provid",{"_index":8,"title":{},"body":{"classes/Action.html":{},"index.html":{},"overview.html":{}}}],["quick",{"_index":267,"title":{},"body":{"index.html":{}}}],["read",{"_index":280,"title":{},"body":{"index.html":{}}}],["readm",{"_index":316,"title":{},"body":{"index.html":{}}}],["reload",{"_index":291,"title":{},"body":{"index.html":{}}}],["requir",{"_index":120,"title":{},"body":{"classes/Action.html":{},"interfaces/IAction.html":{}}}],["reset",{"_index":325,"title":{},"body":{"overview.html":{}}}],["resourc",{"_index":97,"title":{},"body":{"classes/Action.html":{}}}],["result",{"_index":73,"title":{},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{},"interfaces/IAction.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["retriev",{"_index":137,"title":{},"body":{"classes/Action.html":{}}}],["return",{"_index":87,"title":{},"body":{"classes/Action.html":{},"interfaces/IAction.html":{}}}],["rule",{"_index":80,"title":{},"body":{"classes/Action.html":{}}}],["run",{"_index":272,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":214,"title":{},"body":{"dependencies.html":{}}}],["same",{"_index":278,"title":{},"body":{"index.html":{}}}],["scaffold",{"_index":294,"title":{},"body":{"index.html":{}}}],["serv",{"_index":285,"title":{},"body":{"index.html":{}}}],["server",{"_index":284,"title":{},"body":{"index.html":{}}}],["setup",{"_index":112,"title":{},"body":{"classes/Action.html":{}}}],["simplemd",{"_index":230,"title":{},"body":{"dependencies.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/Action.html":{},"modules/ActionsModule.html":{},"interfaces/IAction.html":{},"index.html":{}}}],["specifi",{"_index":70,"title":{},"body":{"classes/Action.html":{}}}],["start",{"_index":19,"title":{"index.html":{}},"body":{"classes/Action.html":{},"index.html":{}}}],["startact",{"_index":56,"title":{},"body":{"classes/Action.html":{}}}],["state",{"_index":119,"title":{},"body":{"classes/Action.html":{}}}],["statement",{"_index":194,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":30,"title":{},"body":{"classes/Action.html":{}}}],["store",{"_index":223,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["structur",{"_index":266,"title":{},"body":{"index.html":{}}}],["success",{"_index":245,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sucess",{"_index":243,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["sure",{"_index":311,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":199,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":198,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":14,"title":{},"body":{"classes/Action.html":{}}}],["test",{"_index":305,"title":{},"body":{"index.html":{}}}],["this._validationcontext",{"_index":143,"title":{},"body":{"classes/Action.html":{}}}],["this.allowexecut",{"_index":147,"title":{},"body":{"classes/Action.html":{}}}],["this.audit",{"_index":152,"title":{},"body":{"classes/Action.html":{}}}],["this.evaluaterul",{"_index":154,"title":{},"body":{"classes/Action.html":{}}}],["this.finish",{"_index":160,"title":{},"body":{"classes/Action.html":{}}}],["this.finishact",{"_index":149,"title":{},"body":{"classes/Action.html":{}}}],["this.performact",{"_index":162,"title":{},"body":{"classes/Action.html":{}}}],["this.postexecuteact",{"_index":158,"title":{},"body":{"classes/Action.html":{}}}],["this.postvalidateact",{"_index":155,"title":{},"body":{"classes/Action.html":{}}}],["this.preexecuteact",{"_index":156,"title":{},"body":{"classes/Action.html":{}}}],["this.prevalidateact",{"_index":153,"title":{},"body":{"classes/Action.html":{}}}],["this.processact",{"_index":148,"title":{},"body":{"classes/Action.html":{}}}],["this.processactionpipelin",{"_index":145,"title":{},"body":{"classes/Action.html":{}}}],["this.start",{"_index":151,"title":{},"body":{"classes/Action.html":{}}}],["this.startact",{"_index":146,"title":{},"body":{"classes/Action.html":{}}}],["this.validateact",{"_index":169,"title":{},"body":{"classes/Action.html":{}}}],["this.validateactionresult",{"_index":159,"title":{},"body":{"classes/Action.html":{}}}],["this.validationcontext",{"_index":178,"title":{},"body":{"classes/Action.html":{}}}],["this.validationcontext.st",{"_index":171,"title":{},"body":{"classes/Action.html":{}}}],["throw",{"_index":163,"title":{},"body":{"classes/Action.html":{}}}],["toolkit",{"_index":256,"title":{},"body":{"index.html":{}}}],["true",{"_index":76,"title":{},"body":{"classes/Action.html":{}}}],["type",{"_index":63,"title":{},"body":{"classes/Action.html":{},"coverage.html":{}}}],["typescript",{"_index":232,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":304,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":74,"title":{},"body":{"classes/Action.html":{},"miscellaneous/enumerations.html":{}}}],["until",{"_index":75,"title":{},"body":{"classes/Action.html":{}}}],["us",{"_index":34,"title":{},"body":{"classes/Action.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["valid",{"_index":68,"title":{},"body":{"classes/Action.html":{}}}],["validateact",{"_index":57,"title":{},"body":{"classes/Action.html":{}}}],["validateactionresult",{"_index":41,"title":{},"body":{"classes/Action.html":{}}}],["validationcontext",{"_index":62,"title":{},"body":{"classes/Action.html":{}}}],["validationcontextst",{"_index":141,"title":{},"body":{"classes/Action.html":{}}}],["validationcontextstate.failur",{"_index":174,"title":{},"body":{"classes/Action.html":{}}}],["validationcontextstate.success",{"_index":172,"title":{},"body":{"classes/Action.html":{}}}],["valu",{"_index":65,"title":{},"body":{"classes/Action.html":{},"miscellaneous/enumerations.html":{}}}],["via",{"_index":306,"title":{},"body":{"index.html":{}}}],["video",{"_index":270,"title":{},"body":{"index.html":{}}}],["violat",{"_index":81,"title":{},"body":{"classes/Action.html":{}}}],["viz",{"_index":236,"title":{},"body":{"dependencies.html":{}}}],["void",{"_index":88,"title":{},"body":{"classes/Action.html":{},"interfaces/IAction.html":{}}}],["watch",{"_index":268,"title":{},"body":{"index.html":{}}}],["within",{"_index":106,"title":{},"body":{"classes/Action.html":{}}}],["workspac",{"_index":279,"title":{},"body":{"index.html":{}}}],["zone.j",{"_index":216,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":324,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Action.html":{"url":"classes/Action.html","title":"class - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/actions/src/Action.ts\n        \n\n            \n                Description\n            \n            \n                This is the framework Action class that provides the pipeline of pre/post\nexecution methods. This class implements the [Template Method] pattern.\nThe pre-execute functions that can be implemented are:\n    1. start();\n    2. audit();\n    3. preValidateAction();\n    4. evaluateRules();\n    5. postValidateAction();\n    6. preExecuteAction();If the status of action is good, the business logic will be executed using the:\n    7. processAction();The post-execution functions that can be implemented are:\n    8. postExecuteAction();\n    9. validateActionResult();\n    10. finish();\n            \n\n\n            \n                Implements\n            \n            \n                        IAction\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _validationContext\n                            \n                            \n                                actionResult\n                            \n                            \n                                allowExecution\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                audit\n                            \n                            \n                                evaluateRules\n                            \n                            \n                                execute\n                            \n                            \n                                finish\n                            \n                            \n                                    Private\n                                finishAction\n                            \n                            \n                                performAction\n                            \n                            \n                                postExecuteAction\n                            \n                            \n                                postValidateAction\n                            \n                            \n                                preExecuteAction\n                            \n                            \n                                preValidateAction\n                            \n                            \n                                    Private\n                                processAction\n                            \n                            \n                                    Private\n                                processActionPipeline\n                            \n                            \n                                start\n                            \n                            \n                                    Private\n                                startAction\n                            \n                            \n                                validateAction\n                            \n                            \n                                validateActionResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/actions/src/Action.ts:44\n                            \n                        \n\n                \n                    \n                            The default constructor for the class.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            _validationContext\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _validationContext:     ValidationContext\n\n                    \n                \n                    \n                        \n                            Type :     ValidationContext\n\n                        \n                    \n                    \n                        \n                            Default value : new ValidationContext()\n                        \n                    \n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:38\n                            \n                        \n\n                \n                    \n                        The validation context for the specified action instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            actionResult\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        actionResult:     ActionResult\n\n                    \n                \n                    \n                        \n                            Type :     ActionResult\n\n                        \n                    \n                    \n                        \n                            Default value : ActionResult.Unknown\n                        \n                    \n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:44\n                            \n                        \n\n                \n                    \n                        The result of the action. The default value is [Unknown], until the action\nis executed.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            allowExecution\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        allowExecution:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:33\n                            \n                        \n\n                \n                    \n                        Indicates if the action is allowed execution. If there are any rule \nviolations in the validation context, the action is not allowed to \nexecute. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            audit\n                            \n                            \n                        \n                    \n                \n                \n                    \naudit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:138\n                            \n                        \n\n\n                \n                    \n                            Implement this function to perform any auditing features during the pre-exectuion of the\nbusiness logic.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            evaluateRules\n                            \n                            \n                        \n                    \n                \n                \n                    \nevaluateRules()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:154\n                            \n                        \n\n\n                \n                    \n                            Use this function to implement the execution of the validation and business rules. This\nfunction is called after [preValidateAction].\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:63\n                            \n                        \n\n\n                \n                    \n                            Use this method to execute a concrete action. A concrete action must implement\nthe [processAction] and the [validateActionResult] functions to be a valid\naction.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            finish\n                            \n                            \n                        \n                    \n                \n                \n                    \nfinish()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:201\n                            \n                        \n\n\n                \n                    \n                            Use this function to perform any cleanup, logging, or disposing of resources used\nby the action. This is the last function called during the pipeline.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            finishAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        finishAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:96\n                            \n                        \n\n\n                \n                    \n                            Use this method to execute the methods at the end of the action pipeline.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            performAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nperformAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:120\n                            \n                        \n\n\n                \n                    \n                            All action must implement this function. This is where your\n[business logic] should be implemented. This function is called if\nthere are no validation rule exceptions.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postExecuteAction\n                            \n                            \n                        \n                    \n                \n                \n                    \npostExecuteAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:185\n                            \n                        \n\n\n                \n                    \n                            Use this funciton to evaluate the action after the the business logic within\nthe [performAction] has executed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postValidateAction\n                            \n                            \n                        \n                    \n                \n                \n                    \npostValidateAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:170\n                            \n                        \n\n\n                \n                    \n                            Use to determine or handle the results of the rule evalation. This\nfunction is called after the [evaluateRules].\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preExecuteAction\n                            \n                            \n                        \n                    \n                \n                \n                    \npreExecuteAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:177\n                            \n                        \n\n\n                \n                    \n                            Use this function to perform any setup before the action is executed.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            preValidateAction\n                            \n                            \n                        \n                    \n                \n                \n                    \npreValidateAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:146\n                            \n                        \n\n\n                \n                    \n                            Use this function to setup any validation rules before the validation happens. This\nfunction is called before [evaluateRules].\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        processAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:110\n                            \n                        \n\n\n                \n                    \n                            Use this method to process the action. This will only be called if the action's \nvalidation context is in a valid state (no rule violations).\nAll concrete actions are required to provide an implementation of the [performAction] \nmethod that is called for this part of the action pipeline.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            processActionPipeline\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        processActionPipeline()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:71\n                            \n                        \n\n\n                \n                    \n                            Use this method to process the action pipeline methods. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \nstart()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:130\n                            \n                        \n\n\n                \n                    \n                            Override/Implement this function to perform an early operation in the action pipeline.\nThis function belongs to the pre-execute functions of the action pipeline.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            startAction\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        startAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:83\n                            \n                        \n\n\n                \n                    \n                            Use this method to call the pipeline methods for the [start] or beginning \nprocess of the action pipeline.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateAction\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateAction()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:208\n                            \n                        \n\n\n                \n                    \n                            Implement this function to perform validation of business rules and data.\n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateActionResult\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateActionResult()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/Action.ts:193\n                            \n                        \n\n\n                \n                    \n                            This function requires implementation to determin the state and result of the action.\nUse this opportunity to validate the results.\n\n\n                            \n                                Returns :     ActionResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        validationContext\n                    \n                \n\n                \n                    \n                        getvalidationContext()\n                    \n                \n                            \n                                \n                                    Defined in libs/actions/src/Action.ts:54\n                                \n                            \n                    \n                        \n                                Use to retrieve the [ValidationContext] for the specified action.\n\n\n                                \n                                    Returns :     ValidationContext\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { ValidationContext } from '@buildmotion/rules-engine';\nimport { ValidationContextState } from '@buildmotion/rules-engine';\nimport { IAction } from './IAction';\nimport { ActionResult } from './ActionResult';\n\n/**\n * This is the framework Action class that provides the pipeline of pre/post\n * execution methods. This class implements the [Template Method] pattern.\n *\n * The pre-execute functions that can be implemented are:\n *\t\t1. start();\n *\t\t2. audit();\n *\t\t3. preValidateAction();\n *\t\t4. evaluateRules();\n *\t\t5. postValidateAction();\n *\t\t6. preExecuteAction();\n *\n *If the status of action is good, the business logic will be executed using the:\n *\t\t7. processAction();\n *\n * The post-execution functions that can be implemented are:\n *\t\t8. postExecuteAction();\n *\t\t9. validateActionResult();\n *\t\t10. finish();\n */\nexport class Action implements IAction {\n\n  /**\n   * Indicates if the action is allowed execution. If there are any rule \n   * violations in the validation context, the action is not allowed to \n   * execute. \n   */\n  allowExecution = true;\n\n  /**\n   * The validation context for the specified action instance.\n   */\n  private _validationContext: ValidationContext = new ValidationContext();\n  \n  /**\n   * The result of the action. The default value is [Unknown], until the action\n   * is executed.\n   */\n  actionResult: ActionResult = ActionResult.Unknown;\n\n  /**\n   * The default constructor for the class.\n   */\n  constructor() {}\n\n  /**\n   * Use to retrieve the [ValidationContext] for the specified action.\n   */\n  get validationContext(): ValidationContext {\n    return this._validationContext;\n  }\n\n  /**\n   * Use this method to execute a concrete action. A concrete action must implement\n   * the [processAction] and the [validateActionResult] functions to be a valid\n   * action.\n   */\n  execute() {\n    console.log('Preparing to execute action.');\n    this.processActionPipeline();\n  }\n\n  /**\n   * Use this method to process the action pipeline methods. \n   */\n  private processActionPipeline() {\n    this.startAction();\n    if (this.allowExecution) {\n      this.processAction();\n    }\n    this.finishAction();\n  }\n\n  /**\n   * Use this method to call the pipeline methods for the [start] or beginning \n   * process of the action pipeline.\n   */\n  private startAction() {\n    console.log('Starting action.');\n    this.start();\n    this.audit();\n    this.preValidateAction();\n    this.evaluateRules();\n    this.postValidateAction();\n    this.preExecuteAction();\n  }\n\n  /**\n   * Use this method to execute the methods at the end of the action pipeline.\n   */\n  private finishAction() {\n    console.log('Finishing action.');\n    this.postExecuteAction();\n    this.validateActionResult();\n    this.finish();\n  }\n\n  /**\n   * Use this method to process the action. This will only be called if the action's \n   * validation context is in a valid state (no rule violations).\n   * \n   * All concrete actions are required to provide an implementation of the [performAction] \n   * method that is called for this part of the action pipeline.\n   */\n  private processAction() {\n    console.log('Processing action.');\n    this.performAction();\n  }\n\n  /**\n   * All action must implement this function. This is where your\n   * [business logic] should be implemented. This function is called if\n   * there are no validation rule exceptions.\n   */\n  performAction() {\n    throw new Error(\n      'Not implemented. Requires implementation in concrete action.'\n    );\n  }\n\n  /**\n   * Override/Implement this function to perform an early operation in the action pipeline.\n   * This function belongs to the pre-execute functions of the action pipeline.\n   */\n  start() {\n    console.log('Starting action.');\n  }\n\n  /**\n   * Implement this function to perform any auditing features during the pre-exectuion of the\n   * business logic.\n   */\n  audit() {\n    console.log('Auditing action.');\n  }\n\n  /**\n   * Use this function to setup any validation rules before the validation happens. This\n   * function is called before [evaluateRules].\n   */\n  preValidateAction() {\n    console.log('Pre-validating action.');\n  }\n\n  /**\n   * Use this function to implement the execution of the validation and business rules. This\n   * function is called after [preValidateAction].\n   */\n  evaluateRules() {\n    console.log('Evaluating action rules.');\n    const context = this.validateAction();\n    if (context.isValid) {\n      this.allowExecution = true;\n      this.validationContext.state = ValidationContextState.Success;\n    } else {\n      this.allowExecution = false;\n      this.validationContext.state = ValidationContextState.Failure;\n    }\n  }\n\n  /**\n   * Use to determine or handle the results of the rule evalation. This\n   * function is called after the [evaluateRules].\n   */\n  postValidateAction() {\n    console.log('Post-Validation of action.');\n  }\n\n  /**\n   * Use this function to perform any setup before the action is executed.\n   */\n  preExecuteAction() {\n    console.log('Pre-execution of action.');\n  }\n\n  /**\n   * Use this funciton to evaluate the action after the the business logic within\n   * the [performAction] has executed.\n   */\n  postExecuteAction() {\n    console.log('Post-execution of action');\n  }\n\n  /**\n   * This function requires implementation to determin the state and result of the action.\n   * Use this opportunity to validate the results.\n   */\n  validateActionResult(): ActionResult {\n    throw new Error('Concrete actions required to implement this method.');\n  }\n\n  /**\n   * Use this function to perform any cleanup, logging, or disposing of resources used\n   * by the action. This is the last function called during the pipeline.\n   */\n  finish() {\n    console.log('Finish action.');\n  }\n\n  /**\n   * Implement this function to perform validation of business rules and data.\n   */\n  validateAction() {\n    console.log('Validating the action.');\n    return this.validationContext;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ActionsModule.html":{"url":"modules/ActionsModule.html","title":"module - ActionsModule","body":"\n                   \n\n\n\n\n  Modules\n  ActionsModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/actions/src/actions.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BuildMotionRulesEngineModule } from '@buildmotion/rules-engine';\n\n@NgModule({\n  imports: [BuildMotionRulesEngineModule, CommonModule]\n})\nexport class ActionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAction.html":{"url":"interfaces/IAction.html","title":"interface - IAction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IAction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/actions/src/IAction.ts\n        \n\n            \n                Description\n            \n            \n                Defines the interface for an action.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    execute\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/actions/src/IAction.ts:10\n                            \n                        \n\n\n                \n                    \n                            All actions are required to implement the [execute] method.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        export interface IAction {\n\n  /**\n   * All actions are required to implement the [execute] method.\n   */\n  execute(): void;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    libs/actions/src/Action.ts\n            \n            \n                class\n            \n            \n                Action\n            \n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                    libs/actions/src/IAction.ts\n            \n            \n                interface\n            \n            \n                IAction\n            \n            \n                100 %\n                (2/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 5.2.7\n        \n            @angular/common : 5.2.7\n        \n            @angular/compiler : 5.2.7\n        \n            @angular/core : 5.2.7\n        \n            @angular/forms : 5.2.7\n        \n            @angular/http : 5.2.7\n        \n            @angular/platform-browser : 5.2.7\n        \n            @angular/platform-browser-dynamic : 5.2.7\n        \n            @angular/router : 5.2.7\n        \n            core-js : ^2.4.1\n        \n            rxjs : ^5.5.6\n        \n            zone.js : ^0.8.19\n        \n            @nrwl/nx : 1.0.3\n        \n            @ngrx/effects : 5.2.0\n        \n            @ngrx/router-store : 5.0.1\n        \n            @ngrx/store : 5.2.0\n        \n            @ngrx/store-devtools : 5.2.0\n        \n            ngrx-store-freeze : ^0.2.1\n        \n            simplemde : ^1.11.2\n        \n            typescript-dotnet-commonjs : ^4.10.0\n        \n            viz : ^0.0.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionResult   (libs/.../ActionResult.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/actions/src/ActionResult.ts\n    \n        \n            \n                \n                    \n                        \n                        ActionResult\n                    \n                \n                    \n                        \n                            Use to indicate the result of the action (i.e., Sucess, Fail, or Unknown).\n\n                        \n                    \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 Fail\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 Unknown\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBuildmotionWorkspace\nThis project was generated with Angular CLI using Nrwl Nx.\nNrwl Extensions for Angular (Nx)\n\nNx is an open source toolkit for enterprise Angular applications.\nNx is designed to help you create and build enterprise grade Angular applications. It provides an opinionated approach to application project structure and patterns.\nQuick Start & Documentation\nWatch a 5-minute video on how to get started with Nx.\nGenerate your first application\nRun ng generate app myapp to generate an application. When using Nx, you can create multiple applications and libraries in the same CLI workspace. Read more here.\nDevelopment server\nRun ng serve --app=myapp for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name --app=myapp to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build --app=myapp to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ActionsModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
