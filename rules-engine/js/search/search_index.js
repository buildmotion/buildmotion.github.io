var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/AreEqual.html",[0,0.265,1,2.207]],["body/classes/AreEqual.html",[0,0.359,1,2.988,2,0.293,3,0.248,4,0.206,5,0.29,6,2.527,7,0.463,8,0.49,9,0.75,10,1.507,11,2.36,12,3.873,13,0.918,14,1.239,15,0.206,16,0.53,17,0.649,18,0.891,19,0.824,20,0.608,21,0.794,22,0.912,23,2.816,24,1.179,25,0.604,26,0.568,27,4.167,28,4.167,29,0.792,30,0.438,31,0.036,32,0.702,33,0.387,34,0.438,35,0.832,36,0.824,37,0.928,38,1.789,39,0.53,40,1.46,41,0.672,42,0.463,43,1.019,44,2.127,45,0.734,46,2.891,47,3.046,48,3.046,49,0.031,50,0.649,51,0.614,52,1.011,53,0.513,54,1.555,55,1.928,56,1.928,57,1.555,58,1.555,59,1.555,60,0.248,61,0.863,62,0.739,63,1.111,64,2.639,65,1.929,66,2.527,67,1.068,68,0.438,69,0.492,70,1.169,71,0.023]],["title/classes/AreNotEqual.html",[0,0.265,72,2.207]],["body/classes/AreNotEqual.html",[0,0.359,2,0.293,3,0.248,4,0.206,5,0.29,7,0.463,8,0.49,9,0.75,10,1.507,11,2.36,12,3.873,13,0.918,14,1.239,15,0.206,16,0.53,17,0.649,18,0.891,19,0.824,20,0.608,21,0.794,22,0.912,23,2.816,24,1.179,25,0.604,26,0.568,29,0.792,30,0.438,31,0.036,32,0.702,33,0.387,34,0.683,35,0.832,36,0.824,37,0.928,38,1.789,39,0.53,40,1.46,41,0.672,43,1.019,44,2.127,45,0.734,46,2.891,49,0.031,50,0.649,51,0.614,52,1.011,53,0.513,54,1.555,55,1.928,56,1.928,57,1.555,58,1.555,59,1.555,60,0.248,61,0.863,62,0.739,63,1.111,64,2.639,65,1.929,66,2.527,67,1.068,68,0.438,69,0.492,70,1.169,71,0.023,72,2.988,73,2.527,74,4.167,75,4.167,76,3.046,77,3.046]],["title/modules/BuildMotionRulesEngineModule.html",[78,1.742,79,2.207]],["body/modules/BuildMotionRulesEngineModule.html",[0,0.407,2,0.454,3,0.386,4,0.32,5,0.257,31,0.035,49,0.031,53,0.56,60,0.386,71,0.031,78,2.68,79,3.951,80,4.732,81,4.732,82,5.509,83,3.925,84,5.509,85,3.925]],["title/classes/CompositeRule.html",[0,0.265,86,1.078]],["body/classes/CompositeRule.html",[0,0.374,2,0.207,3,0.381,4,0.146,5,0.284,7,0.361,8,0.565,9,0.703,13,0.716,15,0.146,16,0.413,17,0.682,18,0.866,19,0.348,20,0.648,21,0.809,22,0.896,24,1.155,25,0.647,26,0.658,29,0.81,30,0.31,31,0.036,32,0.682,33,0.453,34,0.31,35,0.979,36,0.822,37,0.882,39,0.706,41,0.822,42,0.596,43,0.78,45,0.798,49,0.034,50,0.73,51,0.633,52,1.056,53,0.312,60,0.176,61,0.631,62,0.523,67,0.755,68,0.671,69,0.753,70,0.827,71,0.018,86,1.525,87,1.787,88,2.057,89,3.247,90,1.5,91,2.44,92,2.221,93,1.37,94,2.16,95,1.965,96,2.144,97,2.213,98,2.464,99,2.464,100,1.636,101,3.247,102,2.155,103,2.301,104,2.155,105,1.832,106,1.839,107,1.658,108,1.658,109,2.505,110,2.834,111,1.787,112,1.787,113,0.907,114,1.787,115,1.787,116,1.367,117,1.787,118,0.997,119,0.907,120,0.997,121,1.787,122,1.787,123,0.997,124,1.787,125,0.907,126,1.787,127,2.155,128,2.464,129,1.839,130,2.155,131,1.645,132,1.839,133,1.503,134,1.367,135,1.839,136,2.155,137,1.787,138,1.503,139,0.907,140,0.827,141,0.997,142,0.907,143,0.997,144,1.787,145,0.997,146,0.755,147,0.997,148,0.69,149,2.694,150,2.155,151,2.155,152,1.787,153,1.787,154,2.155,155,1.787,156,1.658,157,2.155,158,1.787,159,1.787,160,2.155]],["title/classes/GuidIsValid.html",[0,0.265,161,2.207]],["body/classes/GuidIsValid.html",[0,0.275,2,0.202,3,0.377,4,0.142,5,0.209,7,0.355,8,0.581,9,0.832,10,1.359,13,0.704,15,0.142,16,0.406,17,0.642,18,0.816,19,0.515,20,0.42,21,0.83,22,0.891,24,1.147,25,0.618,26,0.659,29,0.797,30,0.303,31,0.036,32,0.691,33,0.45,34,0.303,35,0.971,36,0.694,37,0.877,39,0.711,41,0.816,42,0.647,43,0.637,45,0.766,49,0.033,50,0.677,51,0.579,52,0.775,53,0.37,60,0.172,61,0.694,62,0.511,63,1.028,68,0.665,69,0.746,71,0.018,86,2.097,90,0.809,92,1.968,93,1.351,94,2.139,95,1.946,96,2.128,97,1.808,98,2.183,99,2.183,100,1.62,103,2.048,105,1.344,106,1.193,107,1.075,108,1.075,109,2.36,110,2.99,113,0.887,116,1.344,118,0.975,119,0.887,120,0.975,123,0.975,125,0.887,128,1.808,129,1.193,131,1.344,132,1.193,133,0.975,134,0.887,135,1.193,138,1.477,139,0.887,140,0.809,141,0.975,142,0.887,143,0.975,145,0.975,146,0.738,147,0.975,148,1.666,156,2.36,161,3.315,162,1.747,163,4.623,164,3.568,165,3.085,166,2.107,167,3.193,168,3.193,169,3.193,170,2.022,171,2.022,172,1.334,173,1.334,174,1.334,175,1.334,176,1.334,177,1.334,178,1.334,179,1.334,180,2.107,181,2.648,182,1.334,183,1.334,184,1.334,185,1.334,186,1.334,187,1.334,188,2.022,189,2.648,190,2.107,191,1.511,192,1.511,193,2.196,194,1.747,195,3.568,196,3.193,197,2.107,198,2.29,199,3.193,200,3.193,201,4.623,202,2.107,203,3.855,204,2.107,205,1.747,206,2.441,207,1.747,208,2.107,209,0.975,210,1.075,211,2.107,212,2.107,213,2.107]],["title/interfaces/IRuleComponent.html",[214,1.571,215,1.949]],["body/interfaces/IRuleComponent.html",[2,0.41,3,0.348,4,0.289,5,0.281,7,0.475,15,0.289,17,0.738,26,0.621,29,0.784,31,0.036,42,0.576,49,0.029,50,0.709,51,0.672,53,0.41,60,0.348,71,0.029,100,2.118,109,2.646,140,1.989,142,2.182,146,2.033,191,3.717,214,2.962,215,3.282,216,3.542,217,5.182,218,4.27,219,5.182]],["title/interfaces/IValidationContext.html",[214,1.571,220,1.949]],["body/interfaces/IValidationContext.html",[0,0.385,2,0.326,3,0.276,4,0.229,5,0.272,7,0.377,8,0.547,15,0.229,16,0.569,17,0.724,18,0.723,25,0.705,26,0.593,29,0.791,31,0.036,33,0.435,36,0.919,37,0.919,39,0.724,42,0.498,43,1.064,49,0.033,50,0.678,51,0.377,53,0.482,60,0.276,71,0.025,90,2.047,91,2.245,93,1.869,103,2.111,105,2.245,113,1.885,133,2.072,134,1.885,146,1.869,148,1.928,214,2.723,220,3.377,221,2.813,222,3.715,223,3.41,224,4.084,225,4.424,226,4.424,227,3.391,228,3.391,229,4.478,230,3.976,231,2.813,232,2.813]],["title/classes/IsFalse.html",[0,0.265,233,2.207]],["body/classes/IsFalse.html",[0,0.382,2,0.321,3,0.273,4,0.226,5,0.288,7,0.494,8,0.545,10,1.489,13,0.979,14,1.287,15,0.226,16,0.564,17,0.674,18,0.916,19,0.856,20,0.668,21,0.816,22,0.934,24,1.217,25,0.756,26,0.554,29,0.783,30,0.481,31,0.036,32,0.721,33,0.362,34,0.481,35,0.886,36,0.856,37,0.949,38,1.556,39,0.721,40,1.556,41,0.716,42,0.631,45,0.638,49,0.032,50,0.674,51,0.631,52,1.077,53,0.426,60,0.273,61,0.856,62,0.812,63,1.328,67,1.173,68,0.794,69,0.54,70,1.285,71,0.025,233,3.805,234,2.776,235,4.439,236,4.439,237,3.347,238,3.347]],["title/classes/IsNotNullOrUndefined.html",[0,0.265,239,1.571]],["body/classes/IsNotNullOrUndefined.html",[0,0.381,2,0.32,3,0.272,4,0.226,5,0.287,7,0.493,8,0.509,9,0.797,10,1.502,13,0.977,14,1.286,15,0.226,16,0.563,17,0.674,18,0.915,19,0.855,20,0.666,21,0.815,22,0.933,24,1.216,25,0.632,26,0.553,29,0.79,30,0.48,31,0.036,32,0.721,33,0.272,34,0.48,35,0.884,36,0.855,37,0.948,38,1.553,39,0.563,40,1.553,41,0.715,42,0.493,45,0.762,49,0.032,50,0.674,51,0.63,52,1.075,53,0.425,60,0.272,61,0.855,62,0.81,63,1.47,67,1.169,68,0.762,69,0.538,70,1.281,71,0.025,209,2.452,210,2.539,239,2.705,240,2.768,241,4.43,242,3.337,243,2.768]],["title/classes/IsNullOrUndefined.html",[0,0.265,244,2.207]],["body/classes/IsNullOrUndefined.html",[0,0.379,2,0.318,3,0.27,4,0.224,5,0.286,7,0.49,8,0.507,9,0.792,10,1.5,13,0.971,14,1.282,15,0.224,16,0.56,17,0.671,18,0.913,19,0.852,20,0.66,21,0.813,22,0.931,24,1.212,25,0.629,26,0.551,29,0.789,30,0.476,31,0.036,32,0.719,33,0.27,34,0.476,35,0.879,36,0.852,37,0.946,38,1.544,39,0.56,40,1.544,41,0.711,42,0.49,43,0.66,45,0.759,49,0.032,50,0.671,51,0.629,52,1.069,53,0.423,60,0.27,61,0.852,62,0.803,63,1.466,67,1.544,68,0.759,69,0.534,70,1.27,71,0.025,209,2.292,210,2.696,243,3.654,244,3.787,245,2.744,246,4.405,247,3.308]],["title/classes/IsTrue.html",[0,0.265,248,2.207]],["body/classes/IsTrue.html",[0,0.381,2,0.32,3,0.272,4,0.225,5,0.287,7,0.492,8,0.509,9,0.796,10,1.502,13,0.976,14,1.285,15,0.225,16,0.563,17,0.673,18,0.914,19,0.855,20,0.665,21,0.815,22,0.933,24,1.215,25,0.756,26,0.553,29,0.789,30,0.479,31,0.036,32,0.72,33,0.361,34,0.479,35,0.883,36,0.855,37,0.948,38,1.551,39,0.563,40,1.551,41,0.714,42,0.492,43,1.1,45,0.762,49,0.032,50,0.673,51,0.63,52,1.074,53,0.425,60,0.272,61,0.855,62,0.809,63,1.325,67,1.551,68,0.715,69,0.538,70,1.279,71,0.025,248,3.798,249,2.764,250,4.426,251,4.426,252,3.332,253,3.332]],["title/classes/Max.html",[0,0.265,254,1.949]],["body/classes/Max.html",[0,0.354,2,0.288,3,0.244,4,0.202,5,0.288,7,0.458,8,0.487,9,0.741,10,1.494,11,2.332,12,3.864,13,0.908,14,1.23,15,0.202,16,0.523,17,0.644,18,0.886,19,0.818,20,0.598,21,0.79,22,0.908,23,2.809,24,1.171,25,0.598,26,0.564,29,0.794,30,0.431,31,0.036,32,0.698,33,0.384,34,0.431,35,0.822,36,0.818,37,0.925,38,1.776,39,0.523,40,1.443,41,0.664,42,0.611,43,0.598,44,2.102,45,0.729,46,2.87,49,0.031,50,0.644,51,0.611,52,0.999,53,0.51,54,2.403,55,1.905,56,1.905,57,1.529,58,1.529,59,1.529,60,0.244,61,0.858,62,0.727,63,1.098,64,2.608,65,1.896,67,1.049,68,0.729,69,0.483,70,1.149,71,0.023,193,1.529,254,3.477,255,2.484,256,3.415,257,4.118,258,2.994,259,2.994,260,2.994]],["title/classes/Min.html",[0,0.265,261,1.949]],["body/classes/Min.html",[0,0.352,2,0.285,3,0.242,4,0.2,5,0.287,7,0.455,8,0.485,9,0.736,10,1.492,11,2.65,12,3.877,13,0.901,14,1.225,15,0.2,16,0.52,17,0.641,18,0.883,19,0.814,20,0.591,21,0.787,22,0.905,23,2.805,24,1.167,25,0.595,26,0.561,29,0.794,30,0.426,31,0.036,32,0.696,33,0.382,34,0.426,35,0.816,36,0.814,37,0.922,38,1.768,39,0.52,40,1.433,41,0.66,42,0.624,43,0.591,44,2.087,45,0.726,46,2.858,49,0.031,50,0.641,51,0.609,52,0.992,53,0.508,54,2.389,55,1.892,56,1.892,57,1.513,58,1.513,59,1.513,60,0.242,61,0.854,62,0.719,63,1.09,64,2.589,65,1.876,67,1.038,68,0.726,69,0.478,70,1.137,71,0.023,193,1.513,261,3.466,262,2.458,263,3.882,264,3.391,265,2.932,266,4.088,267,2.963,268,2.963,269,2.963]],["title/classes/Range.html",[0,0.265,270,1.949]],["body/classes/Range.html",[0,0.245,2,0.174,3,0.352,4,0.122,5,0.234,7,0.316,8,0.559,9,0.714,10,1.428,11,1.609,13,0.626,14,0.69,15,0.122,16,0.361,17,0.608,18,0.772,19,0.641,20,0.361,21,0.777,22,0.858,23,2.413,24,1.123,25,0.582,26,0.651,29,0.789,30,0.26,31,0.036,32,0.663,33,0.452,34,0.504,35,0.914,36,0.8,37,0.8,39,0.719,41,0.822,42,0.682,43,0.361,45,0.764,49,0.032,50,0.63,51,0.58,52,0.69,53,0.489,54,0.925,55,1.315,56,1.315,57,0.925,58,0.925,59,0.925,60,0.148,61,0.739,62,0.44,63,1.15,68,0.62,69,0.696,71,0.016,86,2.052,90,0.695,92,1.79,93,1.229,94,1.996,95,1.816,96,2.015,97,1.609,98,1.986,99,1.986,100,1.512,103,1.927,105,1.196,106,1.026,107,0.925,108,0.925,109,1.79,110,2.913,113,0.763,116,2.335,118,0.838,119,0.763,120,0.838,123,0.838,125,0.763,128,1.609,129,1.026,131,1.196,132,1.026,133,0.838,134,0.763,135,1.026,138,1.315,139,0.763,140,0.695,141,0.838,142,0.763,143,0.838,145,0.838,146,0.635,147,0.838,148,1.701,156,1.451,170,1.8,171,1.8,172,1.147,173,1.147,174,1.147,175,1.147,176,1.147,177,1.147,178,1.147,179,1.147,183,1.147,184,1.147,185,1.147,186,1.147,187,1.147,206,2.221,209,1.315,210,0.925,239,1.79,254,2.221,256,1.502,261,2.221,263,1.502,265,2.848,270,3.64,271,1.502,272,4.481,273,4.122,274,4.768,275,2.842,276,4.956,277,3.74,278,4.111,279,2.038,280,2.842,281,2.842,282,2.357,283,2.842,284,2.357,285,3.971,286,2.842,287,2.842,288,2.842,289,2.842,290,1.811,291,1.811,292,2.842,293,2.842,294,1.502,295,1.811,296,1.811,297,1.811]],["title/classes/RulePolicy.html",[0,0.265,91,1.295]],["body/classes/RulePolicy.html",[0,0.46,2,0.204,3,0.413,4,0.144,5,0.308,7,0.357,8,0.578,9,0.578,13,1.076,14,0.78,15,0.144,16,0.408,17,0.663,18,0.697,19,0.749,20,0.641,21,0.843,22,0.94,24,1.22,25,0.644,26,0.624,29,0.8,30,0.305,31,0.036,32,0.746,33,0.436,34,0.667,35,1.011,36,0.925,37,0.788,39,0.754,40,1.358,41,0.862,42,0.615,43,0.641,45,0.702,49,0.031,50,0.62,51,0.615,53,0.415,60,0.173,61,0.862,68,0.557,69,0.625,71,0.018,86,1.126,88,2.035,90,1.233,91,2.197,93,1.514,94,2.746,95,2.249,96,2.542,100,1.872,113,1.353,116,2.055,118,1.999,119,1.353,120,1.487,123,1.793,125,1.819,131,1.353,138,1.999,139,1.353,140,1.233,141,1.487,142,1.353,143,1.487,145,1.793,146,1.626,147,1.793,148,1.24,156,1.978,215,2.736,284,2.665,294,1.762,298,1.762,299,3.213,300,2.124,301,3.875,302,3.213,303,3.213,304,3.213,305,2.124,306,2.124,307,2.124,308,2.124,309,2.124,310,2.124,311,2.124,312,2.124,313,2.124,314,2.124,315,2.124,316,2.665,317,1.345,318,2.124,319,2.124,320,2.124,321,2.124,322,2.124,323,1.524,324,2.124]],["title/classes/RuleResult.html",[0,0.265,51,0.342]],["body/classes/RuleResult.html",[0,0.503,2,0.313,3,0.265,4,0.22,5,0.305,7,0.485,8,0.579,10,1.503,15,0.22,16,0.554,19,0.883,21,0.706,22,0.908,26,0.639,29,0.79,30,0.468,31,0.036,32,0.414,33,0.428,34,0.468,37,0.973,39,0.554,41,0.525,42,0.362,44,2.225,45,0.851,49,0.032,51,0.626,53,0.419,60,0.265,61,0.883,63,0.868,67,1.141,68,0.754,71,0.024,86,1.722,91,2.633,93,1.973,148,1.395,209,1.507,317,2.062,325,2.7,326,3.126,327,5.247,328,3.256,329,2.7,330,3.256,331,3.256,332,3.256,333,3.256,334,4.358,335,3.256,336,3.256,337,3.256]],["title/classes/ServiceContext.html",[0,0.265,338,1.949]],["body/classes/ServiceContext.html",[0,0.481,2,0.306,3,0.259,4,0.215,5,0.294,7,0.354,8,0.558,9,0.935,15,0.215,16,0.546,17,0.661,22,0.983,25,0.661,26,0.578,30,0.458,31,0.036,32,0.405,33,0.424,34,0.458,41,0.514,42,0.354,43,0.857,45,0.617,49,0.024,50,0.727,53,0.412,60,0.259,68,0.617,69,0.839,71,0.024,90,2.147,92,2.654,103,2.285,105,2.189,131,2.189,156,2.654,182,2.015,193,2.191,223,2.431,317,2.718,323,3.728,326,3.078,338,3.681,339,2.64,340,4.292,341,4.938,342,4.292,343,4.312,344,5.199,345,5.199,346,4.292,347,5.199,348,3.183,349,3.078,350,4.292,351,3.074,352,3.183,353,3.078,354,3.183,355,3.728,356,3.183,357,3.078,358,3.183,359,4.292,360,4.292,361,4.292,362,4.292,363,4.292,364,4.292,365,4.292]],["title/classes/ServiceMessage.html",[0,0.265,351,1.742]],["body/classes/ServiceMessage.html",[0,0.364,2,0.196,3,0.499,4,0.138,5,0.305,7,0.556,8,0.589,15,0.138,16,0.396,17,0.723,19,0.736,20,0.622,21,0.894,22,1.026,25,0.697,26,0.618,30,0.691,31,0.036,32,0.781,33,0.475,34,0.691,35,1.123,39,0.764,42,0.347,44,2.453,45,0.741,49,0.017,50,0.723,53,0.196,60,0.166,61,0.952,68,0.293,71,0.017,316,3.136,317,2.394,329,2.585,338,1.973,341,3.51,351,3.219,353,3.035,355,2.235,357,4.427,366,1.693,367,2.235,368,5.738,369,4.232,370,3.116,371,3.116,372,3.116,373,3.116,374,2.585,375,2.041,376,5.154,377,4.805,378,2.041,379,2.041,380,2.041,381,3.116,382,2.041,383,2.041,384,2.041,385,3.116,386,3.116,387,2.041,388,3.865,389,3.446,390,3.116,391,2.041,392,3.116,393,2.041,394,3.116,395,2.041,396,2.585,397,2.041,398,3.116,399,3.136,400,3.116,401,2.041]],["title/classes/SimpleRule.html",[0,0.265,14,0.747]],["body/classes/SimpleRule.html",[0,0.487,2,0.273,3,0.425,4,0.193,5,0.216,7,0.442,8,0.575,9,0.512,10,0.965,13,1.192,14,0.965,15,0.193,16,0.506,17,0.663,18,0.74,19,0.74,20,0.794,21,0.854,22,0.95,24,1.223,25,0.663,26,0.661,29,0.797,30,0.41,31,0.036,32,0.731,33,0.469,34,0.41,35,0.99,36,0.842,37,0.801,39,0.705,41,0.801,42,0.601,43,0.568,45,0.659,49,0.031,50,0.583,51,0.58,53,0.273,60,0.232,61,0.642,62,0.691,68,0.41,71,0.022,86,1.394,88,2.519,90,2.003,91,2.551,93,1.606,94,2.415,95,2.197,96,2.336,100,1.829,110,3.006,111,2.362,112,2.362,113,1.199,114,2.362,115,2.362,116,1.674,117,2.362,118,1.318,119,1.199,120,1.318,121,2.362,122,2.362,123,1.318,124,2.362,125,1.199,126,2.362,131,1.199,133,1.84,134,1.674,137,2.362,138,1.84,139,1.199,140,1.093,141,1.318,142,1.929,143,1.318,144,2.362,145,1.318,146,0.998,147,1.318,148,0.912,326,2.852,402,2.362,403,5.406,404,2.848]],["title/classes/StringIsNotNullEmptyRange.html",[0,0.265,405,2.207]],["body/classes/StringIsNotNullEmptyRange.html",[0,0.26,2,0.188,3,0.365,4,0.132,5,0.257,7,0.336,8,0.566,9,0.544,10,1.456,13,0.666,14,0.733,15,0.132,16,0.384,17,0.663,18,0.795,19,0.669,20,0.391,21,0.838,22,0.875,23,2.467,24,1.086,25,0.601,26,0.662,29,0.792,30,0.282,31,0.036,32,0.678,33,0.46,34,0.282,35,0.827,36,0.763,37,0.86,38,1.059,39,0.7,41,0.795,42,0.648,43,0.391,45,0.792,49,0.033,50,0.663,51,0.593,52,0.733,53,0.489,54,1,55,1.398,56,1.398,57,1,58,1,59,1,60,0.16,61,0.722,62,0.476,63,0.983,68,0.53,69,0.669,71,0.017,86,2.076,90,0.752,92,1.882,93,1.292,94,2.071,95,1.884,96,2.074,97,1.711,98,2.088,99,2.088,100,1.568,103,1.99,105,1.272,106,1.11,107,1,108,1,109,1.882,110,2.954,113,0.825,116,2.374,118,0.907,119,0.825,120,0.907,123,0.907,125,0.825,128,1.711,129,1.11,131,1.272,132,1.11,133,0.907,134,0.825,135,1.11,138,1.398,139,0.825,140,0.752,141,0.907,142,0.825,143,0.907,145,0.907,146,0.687,147,0.907,148,1.577,165,2.971,170,1.913,171,1.913,172,1.241,173,1.241,174,1.241,175,1.241,176,1.241,177,1.241,178,1.241,179,1.241,182,1.241,183,1.241,184,1.241,185,1.241,186,1.241,187,1.241,192,1.405,198,3.649,206,1.913,209,1.917,210,1.882,223,1.711,239,1.882,264,3.922,265,2.971,270,2.624,272,3.058,405,2.167,406,1.625,407,3.021,408,5.22,409,5.22,410,3.021,411,3.021,412,3.021,413,4.143,414,1.96,415,1.96,416,3.021,417,2.167,418,1.96,419,3.021,420,3.021,421,3.021,422,3.021,423,1.96,424,1.96,425,1.96]],["title/classes/StringIsRegExMatch.html",[0,0.265,188,1.949]],["body/classes/StringIsRegExMatch.html",[0,0.285,2,0.213,3,0.385,4,0.15,5,0.216,7,0.369,8,0.563,9,0.85,10,1.312,13,0.731,15,0.15,16,0.421,17,0.653,18,0.83,19,0.712,20,0.442,21,0.849,22,0.902,24,1.165,25,0.63,26,0.664,29,0.803,30,0.319,31,0.036,32,0.7,33,0.455,34,0.319,35,0.881,36,0.853,37,0.888,38,1.162,39,0.7,40,1.162,41,0.872,42,0.648,43,0.662,45,0.777,49,0.033,50,0.687,51,0.588,52,0.805,53,0.318,60,0.181,61,0.712,62,0.538,63,0.884,68,0.679,69,0.712,71,0.027,86,2.111,90,0.85,92,2.029,93,1.393,94,2.186,95,1.989,96,2.164,97,1.878,98,2.251,99,2.251,100,1.656,103,2.087,105,1.396,106,1.255,107,1.131,108,1.131,109,2.029,110,3.014,113,0.933,116,1.396,118,1.025,119,0.933,120,1.025,123,1.025,125,0.933,128,1.878,129,1.255,131,1.396,132,1.255,133,1.025,134,0.933,135,1.255,138,1.535,139,0.933,140,0.85,141,1.025,142,0.933,143,1.025,145,1.025,146,0.776,147,1.025,148,1.061,164,3.919,165,3.164,170,2.1,171,2.1,172,1.403,173,1.403,174,1.403,175,1.403,176,1.403,177,1.403,178,1.403,179,1.403,181,2.751,182,1.403,183,1.403,184,1.403,185,1.403,186,1.403,187,1.403,188,2.1,189,1.838,191,1.589,192,1.589,193,1.693,194,1.838,195,3.297,205,3.297,206,2.1,207,1.838,209,1.025,210,1.131,239,1.693,282,1.838,426,1.838,427,3.316,428,4.725,429,2.215,430,2.215,431,2.215,432,2.215,433,2.215,434,2.215]],["title/classes/ValidationContext.html",[0,0.265,435,2.207]],["body/classes/ValidationContext.html",[0,0.398,2,0.235,3,0.471,4,0.165,5,0.31,7,0.272,8,0.572,9,0.833,15,0.165,16,0.454,17,0.691,18,0.576,19,0.794,21,0.739,25,0.588,26,0.627,29,0.785,30,0.513,31,0.036,32,0.454,33,0.419,34,0.513,36,0.829,37,0.829,39,0.588,41,0.68,42,0.468,43,0.712,45,0.513,46,2.021,49,0.031,50,0.716,51,0.272,53,0.445,60,0.199,61,0.395,68,0.606,69,0.895,71,0.02,88,2.26,91,1.949,93,1.251,100,1.251,103,2.404,105,1.949,146,1.251,148,1.945,149,3.841,152,2.029,153,2.029,155,2.029,156,1.822,158,2.96,159,2.029,193,1.822,198,1.755,220,2.932,223,3.441,224,3.686,225,3.841,226,3.841,230,3.531,231,2.029,232,2.029,343,2.96,349,2.559,353,3.32,355,2.559,367,2.559,374,2.96,388,2.559,389,2.559,396,2.96,399,3.494,435,3.806,436,2.029,437,3.568,438,3.568,439,2.447,440,3.568,441,2.447,442,3.568,443,2.447,444,3.568,445,2.447,446,2.447,447,2.447,448,2.447,449,2.447,450,2.447,451,2.447,452,2.447,453,2.447,454,2.447,455,2.447,456,2.447,457,2.447,458,2.447,459,2.447,460,2.447,461,2.447,462,2.447,463,4.212,464,3.568,465,3.568,466,4.212,467,3.568]],["title/coverage.html",[468,3.48]],["body/coverage.html",[0,0.545,1,2.671,4,0.252,5,0.345,6,3.09,14,0.904,31,0.036,33,0.304,49,0.027,51,0.414,69,0.601,71,0.027,72,2.671,73,3.09,86,1.305,87,3.09,91,1.568,161,2.671,162,3.09,188,2.359,214,2.43,215,2.359,216,3.09,220,2.359,221,3.09,233,2.671,234,3.09,239,1.902,240,3.09,244,2.671,245,3.09,248,2.671,249,3.09,254,2.359,255,3.09,261,2.359,262,3.09,270,2.359,271,3.09,298,3.09,325,3.09,338,2.359,339,3.09,351,2.109,366,3.09,402,3.09,405,2.671,406,3.09,426,3.09,435,2.671,436,3.09,468,3.09,469,3.09,470,3.725,471,3.725,472,6.334,473,5.712,474,3.725,475,3.725,476,4.76,477,3.725,478,5.527,479,3.725,480,4.76,481,3.725,482,3.725,483,3.725,484,3.725,485,3.725,486,3.725,487,3.725,488,3.725]],["title/dependencies.html",[489,2.572,490,2.653]],["body/dependencies.html",[31,0.036,49,0.029,55,1.991,56,1.991,71,0.029,83,3.569,85,3.569,490,3.086,491,4.302,492,6.223,493,4.302,494,4.302,495,4.302,496,5.206,497,5.206,498,4.302,499,4.302,500,4.302,501,4.302,502,4.302,503,4.302,504,4.302,505,4.302,506,4.302,507,4.302,508,4.302,509,4.302,510,5.598,511,4.302,512,4.318,513,4.302,514,5.206,515,4.302,516,4.302,517,4.302,518,4.302,519,4.302,520,4.302,521,4.302,522,4.302,523,4.302,524,4.302]],["title/miscellaneous/enumerations.html",[525,1.628,526,3.069]],["body/miscellaneous/enumerations.html",[5,0.318,8,0.563,9,0.794,15,0.298,18,0.712,29,0.672,31,0.03,33,0.36,36,0.712,39,0.719,42,0.629,49,0.03,52,1.283,71,0.03,95,2.225,96,2.382,125,1.857,148,1.412,223,2.498,224,3.163,230,3.79,277,3.163,278,3.659,279,3.163,323,3.163,351,2.498,357,3.79,389,3.163,525,2.793,526,4.384,527,4.411,528,4.411,529,4.411,530,4.411,531,4.411,532,5.285,533,4.411,534,4.411,535,4.411,536,4.411,537,4.411,538,4.411,539,4.411,540,4.411,541,4.411]],["title/index.html",[15,0.174,273,1.844,542,2.572]],["body/index.html",[3,0.384,4,0.248,8,0.546,31,0.029,32,0.467,49,0.026,69,0.592,71,0.026,100,1.652,107,1.874,119,1.545,134,1.985,139,1.545,140,1.409,222,3.045,273,3.382,274,4.56,349,4.173,367,3.382,388,2.632,417,2.632,469,3.045,512,3.045,543,3.671,544,5.209,545,5.918,546,5.819,547,5.497,548,4.715,549,5.819,550,3.671,551,3.671,552,4.715,553,5.497,554,5.819,555,3.671,556,3.671,557,3.671,558,3.671,559,3.671,560,3.671,561,3.671,562,3.671,563,6.055,564,6.055,565,5.209,566,3.671,567,3.671,568,3.671,569,3.671,570,3.671,571,3.671,572,3.671,573,3.671,574,4.715,575,5.209,576,5.209,577,3.671,578,3.671,579,3.671,580,3.671,581,3.671,582,3.671,583,3.671,584,3.671,585,5.209,586,3.671,587,3.671,588,3.671,589,3.671,590,3.671,591,3.671,592,3.671,593,4.715,594,5.819,595,5.209,596,3.671,597,3.671,598,3.671,599,3.671,600,3.671,601,3.671,602,3.671,603,3.671,604,3.045,605,3.671]],["title/modules.html",[78,2.376]],["body/modules.html",[31,0.032,49,0.032,71,0.032,78,2.802,79,3.549,108,2.526,606,4.948,607,4.948]],["title/overview.html",[608,3.48]],["body/overview.html",[0,0.414,31,0.031,49,0.031,60,0.392,71,0.031,78,3.15,214,2.457,277,3.451,279,3.451,417,3.451,490,3.451,604,3.992,608,3.992,609,4.812,610,4.812,611,4.812,612,5.563,613,4.812,614,4.812]],["title/miscellaneous/typealiases.html",[525,1.628,615,3.7]],["body/miscellaneous/typealiases.html",[5,0.263,15,0.327,21,0.696,23,2.722,25,0.616,31,0.034,33,0.395,49,0.031,71,0.031,116,2.039,525,3.067,616,4.843,617,4.843,618,4.843]]],"invertedIndex":[["",{"_index":31,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"modules/BuildMotionRulesEngineModule.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":156,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceContext.html":{},"classes/ValidationContext.html":{}}}],["0.0.1",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["0.8.19",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":277,"title":{},"body":{"classes/Range.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.3",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["1.11.2",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":486,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":472,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":484,"title":{},"body":{"coverage.html":{}}}],["13/13",{"_index":480,"title":{},"body":{"coverage.html":{}}}],["18/19",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":614,"title":{},"body":{"overview.html":{}}}],["2",{"_index":279,"title":{},"body":{"classes/Range.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["2.4.1",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["20/20",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":479,"title":{},"body":{"coverage.html":{}}}],["23/23",{"_index":482,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":278,"title":{},"body":{"classes/Range.html":{},"miscellaneous/enumerations.html":{}}}],["36",{"_index":197,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["4",{"_index":280,"title":{},"body":{"classes/Range.html":{}}}],["4.10.0",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":560,"title":{},"body":{"index.html":{}}}],["5.0.1",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["5.2.7",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["5.5.6",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":473,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":481,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":485,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":483,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["9a",{"_index":201,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["abstract",{"_index":299,"title":{},"body":{"classes/RulePolicy.html":{}}}],["accessor",{"_index":449,"title":{},"body":{"classes/ValidationContext.html":{}}}],["action(",{"_index":454,"title":{},"body":{"classes/ValidationContext.html":{}}}],["ad",{"_index":343,"title":{},"body":{"classes/ServiceContext.html":{},"classes/ValidationContext.html":{}}}],["add",{"_index":353,"title":{},"body":{"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/ValidationContext.html":{}}}],["addmessag",{"_index":346,"title":{},"body":{"classes/ServiceContext.html":{}}}],["addmessage(messag",{"_index":350,"title":{},"body":{"classes/ServiceContext.html":{}}}],["addrul",{"_index":437,"title":{},"body":{"classes/ValidationContext.html":{}}}],["addrule(rul",{"_index":444,"title":{},"body":{"classes/ValidationContext.html":{}}}],["against",{"_index":38,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["alias",{"_index":616,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":265,"title":{},"body":{"classes/Min.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{}}}],["angular",{"_index":546,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":85,"title":{},"body":{"modules/BuildMotionRulesEngineModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":83,"title":{},"body":{"modules/BuildMotionRulesEngineModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":496,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":565,"title":{},"body":{"index.html":{}}}],["app=myapp",{"_index":576,"title":{},"body":{"index.html":{}}}],["appli",{"_index":283,"title":{},"body":{"classes/Range.html":{}}}],["applic",{"_index":349,"title":{},"body":{"classes/ServiceContext.html":{},"classes/ValidationContext.html":{},"index.html":{}}}],["approach",{"_index":557,"title":{},"body":{"index.html":{}}}],["areequ",{"_index":1,"title":{"classes/AreEqual.html":{}},"body":{"classes/AreEqual.html":{},"coverage.html":{}}}],["areequalrul",{"_index":28,"title":{},"body":{"classes/AreEqual.html":{}}}],["arenotequ",{"_index":72,"title":{"classes/AreNotEqual.html":{}},"body":{"classes/AreNotEqual.html":{},"coverage.html":{}}}],["arenotequalrul",{"_index":75,"title":{},"body":{"classes/AreNotEqual.html":{}}}],["array",{"_index":103,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/Range.html":{},"classes/ServiceContext.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["artifact",{"_index":587,"title":{},"body":{"index.html":{}}}],["automat",{"_index":580,"title":{},"body":{"index.html":{}}}],["avail",{"_index":108,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"modules.html":{}}}],["base",{"_index":88,"title":{},"body":{"classes/CompositeRule.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/ValidationContext.html":{}}}],["befor",{"_index":107,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"index.html":{}}}],["begin",{"_index":219,"title":{},"body":{"interfaces/IRuleComponent.html":{}}}],["belong",{"_index":440,"title":{},"body":{"classes/ValidationContext.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/typealiases.html":{}}}],["bootstrap",{"_index":611,"title":{},"body":{"overview.html":{}}}],["boundari",{"_index":285,"title":{},"body":{"classes/Range.html":{}}}],["broken",{"_index":458,"title":{},"body":{"classes/ValidationContext.html":{}}}],["brows",{"_index":607,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":554,"title":{},"body":{"index.html":{}}}],["buildmotion/rul",{"_index":189,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/StringIsRegExMatch.html":{}}}],["buildmotionrulesenginemodul",{"_index":79,"title":{"modules/BuildMotionRulesEngineModule.html":{}},"body":{"modules/BuildMotionRulesEngineModule.html":{},"modules.html":{}}}],["buildmotionworkspac",{"_index":543,"title":{},"body":{"index.html":{}}}],["call",{"_index":342,"title":{},"body":{"classes/ServiceContext.html":{}}}],["caller",{"_index":288,"title":{},"body":{"classes/Range.html":{}}}],["chang",{"_index":582,"title":{},"body":{"index.html":{}}}],["check",{"_index":603,"title":{},"body":{"index.html":{}}}],["child",{"_index":128,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["class",{"_index":0,"title":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"modules/BuildMotionRulesEngineModule.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":547,"title":{},"body":{"index.html":{}}}],["client",{"_index":289,"title":{},"body":{"classes/Range.html":{}}}],["code",{"_index":583,"title":{},"body":{"index.html":{}}}],["collect",{"_index":132,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["commonj",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["commonjs/system/compar",{"_index":59,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{}}}],["commonjs/system/compareresult",{"_index":57,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{}}}],["commonmodul",{"_index":84,"title":{},"body":{"modules/BuildMotionRulesEngineModule.html":{}}}],["compar",{"_index":58,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{}}}],["compare(this.target",{"_index":65,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{}}}],["compareresult",{"_index":54,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{}}}],["compareresult.equ",{"_index":66,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{}}}],["compareresult.great",{"_index":260,"title":{},"body":{"classes/Max.html":{}}}],["compareresult.less",{"_index":269,"title":{},"body":{"classes/Min.html":{}}}],["comparison",{"_index":12,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{}}}],["complex",{"_index":89,"title":{},"body":{"classes/CompositeRule.html":{}}}],["compon",{"_index":585,"title":{},"body":{"index.html":{}}}],["composit",{"_index":109,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerul",{"_index":86,"title":{"classes/CompositeRule.html":{}},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"coverage.html":{}}}],["compositerule:13",{"_index":170,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:16",{"_index":174,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:19",{"_index":171,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:22",{"_index":175,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:24",{"_index":172,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:25",{"_index":177,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:28",{"_index":173,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:31",{"_index":176,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:34",{"_index":178,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:37",{"_index":179,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:40",{"_index":185,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:51",{"_index":183,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:64",{"_index":184,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:74",{"_index":186,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["compositerule:82",{"_index":187,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["concret",{"_index":324,"title":{},"body":{"classes/RulePolicy.html":{}}}],["configur",{"_index":181,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/StringIsRegExMatch.html":{}}}],["configure/add",{"_index":420,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["configurerul",{"_index":165,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["console.log",{"_index":452,"title":{},"body":{"classes/ValidationContext.html":{}}}],["console.log('begin",{"_index":320,"title":{},"body":{"classes/RulePolicy.html":{}}}],["const",{"_index":193,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/ServiceContext.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["construcctor",{"_index":167,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["constructor",{"_index":19,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["constructor(nam",{"_index":20,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["constructor(rulepolici",{"_index":327,"title":{},"body":{"classes/RuleResult.html":{}}}],["contain",{"_index":90,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceContext.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["context",{"_index":223,"title":{},"body":{"interfaces/IValidationContext.html":{},"classes/ServiceContext.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["coordind",{"_index":141,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["core",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":468,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":367,"title":{},"body":{"classes/ServiceMessage.html":{},"classes/ValidationContext.html":{},"index.html":{}}}],["current",{"_index":355,"title":{},"body":{"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/ValidationContext.html":{}}}],["declar",{"_index":610,"title":{},"body":{"overview.html":{}}}],["default",{"_index":41,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["defin",{"_index":26,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["depend",{"_index":490,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":7,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["design",{"_index":139,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"index.html":{}}}],["determin",{"_index":9,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceContext.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["dev",{"_index":577,"title":{},"body":{"index.html":{}}}],["develop",{"_index":573,"title":{},"body":{"index.html":{}}}],["devtool",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":586,"title":{},"body":{"index.html":{}}}],["directori",{"_index":589,"title":{},"body":{"index.html":{}}}],["display",{"_index":35,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["displaybl",{"_index":40,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/RulePolicy.html":{},"classes/StringIsRegExMatch.html":{}}}],["displaytous",{"_index":368,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["dist",{"_index":588,"title":{},"body":{"index.html":{}}}],["document",{"_index":469,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["donotshowruleviol",{"_index":195,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/StringIsRegExMatch.html":{}}}],["dotnet",{"_index":56,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"dependencies.html":{}}}],["dure",{"_index":344,"title":{},"body":{"classes/ServiceContext.html":{}}}],["dynam",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":597,"title":{},"body":{"index.html":{}}}],["each",{"_index":145,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["end",{"_index":274,"title":{},"body":{"classes/Range.html":{},"index.html":{}}}],["engin",{"_index":191,"title":{},"body":{"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"classes/StringIsRegExMatch.html":{}}}],["engine.module.t",{"_index":81,"title":{},"body":{"modules/BuildMotionRulesEngineModule.html":{}}}],["engine/src/rul",{"_index":80,"title":{},"body":{"modules/BuildMotionRulesEngineModule.html":{}}}],["engine/src/rules/areequal.t",{"_index":6,"title":{},"body":{"classes/AreEqual.html":{},"coverage.html":{}}}],["engine/src/rules/areequal.ts:16",{"_index":47,"title":{},"body":{"classes/AreEqual.html":{}}}],["engine/src/rules/areequal.ts:21",{"_index":27,"title":{},"body":{"classes/AreEqual.html":{}}}],["engine/src/rules/areequal.ts:47",{"_index":48,"title":{},"body":{"classes/AreEqual.html":{}}}],["engine/src/rules/arenotequal.t",{"_index":73,"title":{},"body":{"classes/AreNotEqual.html":{},"coverage.html":{}}}],["engine/src/rules/arenotequal.ts:16",{"_index":76,"title":{},"body":{"classes/AreNotEqual.html":{}}}],["engine/src/rules/arenotequal.ts:21",{"_index":74,"title":{},"body":{"classes/AreNotEqual.html":{}}}],["engine/src/rules/arenotequal.ts:47",{"_index":77,"title":{},"body":{"classes/AreNotEqual.html":{}}}],["engine/src/rules/compositerule.t",{"_index":87,"title":{},"body":{"classes/CompositeRule.html":{},"coverage.html":{}}}],["engine/src/rules/compositerule.ts:13",{"_index":102,"title":{},"body":{"classes/CompositeRule.html":{}}}],["engine/src/rules/compositerule.ts:19",{"_index":104,"title":{},"body":{"classes/CompositeRule.html":{}}}],["engine/src/rules/compositerule.ts:24",{"_index":101,"title":{},"body":{"classes/CompositeRule.html":{}}}],["engine/src/rules/compositerule.ts:40",{"_index":136,"title":{},"body":{"classes/CompositeRule.html":{}}}],["engine/src/rules/compositerule.ts:51",{"_index":127,"title":{},"body":{"classes/CompositeRule.html":{}}}],["engine/src/rules/compositerule.ts:64",{"_index":130,"title":{},"body":{"classes/CompositeRule.html":{}}}],["engine/src/rules/guidisvalid.t",{"_index":162,"title":{},"body":{"classes/GuidIsValid.html":{},"coverage.html":{}}}],["engine/src/rules/guidisvalid.ts:31",{"_index":180,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["engine/src/rules/guidisvalid.ts:9",{"_index":166,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["engine/src/rules/irulecomponent.t",{"_index":216,"title":{},"body":{"interfaces/IRuleComponent.html":{},"coverage.html":{}}}],["engine/src/rules/irulecomponent.ts:13",{"_index":218,"title":{},"body":{"interfaces/IRuleComponent.html":{}}}],["engine/src/rules/isfalse.t",{"_index":234,"title":{},"body":{"classes/IsFalse.html":{},"coverage.html":{}}}],["engine/src/rules/isfalse.ts:12",{"_index":236,"title":{},"body":{"classes/IsFalse.html":{}}}],["engine/src/rules/isfalse.ts:35",{"_index":237,"title":{},"body":{"classes/IsFalse.html":{}}}],["engine/src/rules/isnotnullorundefined.t",{"_index":240,"title":{},"body":{"classes/IsNotNullOrUndefined.html":{},"coverage.html":{}}}],["engine/src/rules/isnotnullorundefined.ts:12",{"_index":241,"title":{},"body":{"classes/IsNotNullOrUndefined.html":{}}}],["engine/src/rules/isnotnullorundefined.ts:35",{"_index":242,"title":{},"body":{"classes/IsNotNullOrUndefined.html":{}}}],["engine/src/rules/isnullorundefined.t",{"_index":245,"title":{},"body":{"classes/IsNullOrUndefined.html":{},"coverage.html":{}}}],["engine/src/rules/isnullorundefined.ts:12",{"_index":246,"title":{},"body":{"classes/IsNullOrUndefined.html":{}}}],["engine/src/rules/isnullorundefined.ts:35",{"_index":247,"title":{},"body":{"classes/IsNullOrUndefined.html":{}}}],["engine/src/rules/istrue.t",{"_index":249,"title":{},"body":{"classes/IsTrue.html":{},"coverage.html":{}}}],["engine/src/rules/istrue.ts:12",{"_index":251,"title":{},"body":{"classes/IsTrue.html":{}}}],["engine/src/rules/istrue.ts:35",{"_index":252,"title":{},"body":{"classes/IsTrue.html":{}}}],["engine/src/rules/max.t",{"_index":255,"title":{},"body":{"classes/Max.html":{},"coverage.html":{}}}],["engine/src/rules/max.ts:17",{"_index":258,"title":{},"body":{"classes/Max.html":{}}}],["engine/src/rules/max.ts:22",{"_index":257,"title":{},"body":{"classes/Max.html":{}}}],["engine/src/rules/max.ts:48",{"_index":259,"title":{},"body":{"classes/Max.html":{}}}],["engine/src/rules/min.t",{"_index":262,"title":{},"body":{"classes/Min.html":{},"coverage.html":{}}}],["engine/src/rules/min.ts:17",{"_index":267,"title":{},"body":{"classes/Min.html":{}}}],["engine/src/rules/min.ts:22",{"_index":266,"title":{},"body":{"classes/Min.html":{}}}],["engine/src/rules/min.ts:48",{"_index":268,"title":{},"body":{"classes/Min.html":{}}}],["engine/src/rules/primitive.t",{"_index":618,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["engine/src/rules/range.t",{"_index":271,"title":{},"body":{"classes/Range.html":{},"coverage.html":{}}}],["engine/src/rules/range.ts:27",{"_index":290,"title":{},"body":{"classes/Range.html":{}}}],["engine/src/rules/range.ts:31",{"_index":291,"title":{},"body":{"classes/Range.html":{}}}],["engine/src/rules/range.ts:36",{"_index":281,"title":{},"body":{"classes/Range.html":{}}}],["engine/src/rules/rendertype.t",{"_index":533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["engine/src/rules/rulepolicy.t",{"_index":298,"title":{},"body":{"classes/RulePolicy.html":{},"coverage.html":{}}}],["engine/src/rules/rulepolicy.ts:13",{"_index":306,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:16",{"_index":307,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:19",{"_index":308,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:22",{"_index":309,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:25",{"_index":311,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:28",{"_index":305,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:31",{"_index":310,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:34",{"_index":312,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:37",{"_index":313,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:45",{"_index":300,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:74",{"_index":314,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/rulepolicy.ts:82",{"_index":315,"title":{},"body":{"classes/RulePolicy.html":{}}}],["engine/src/rules/ruleresult.t",{"_index":325,"title":{},"body":{"classes/RuleResult.html":{},"coverage.html":{}}}],["engine/src/rules/ruleresult.ts:12",{"_index":330,"title":{},"body":{"classes/RuleResult.html":{}}}],["engine/src/rules/ruleresult.ts:17",{"_index":332,"title":{},"body":{"classes/RuleResult.html":{}}}],["engine/src/rules/ruleresult.ts:22",{"_index":331,"title":{},"body":{"classes/RuleResult.html":{}}}],["engine/src/rules/ruleresult.ts:27",{"_index":333,"title":{},"body":{"classes/RuleResult.html":{}}}],["engine/src/rules/ruleresult.ts:39",{"_index":328,"title":{},"body":{"classes/RuleResult.html":{}}}],["engine/src/rules/severity.t",{"_index":537,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["engine/src/rules/simplerule.t",{"_index":402,"title":{},"body":{"classes/SimpleRule.html":{},"coverage.html":{}}}],["engine/src/rules/simplerule.ts:10",{"_index":404,"title":{},"body":{"classes/SimpleRule.html":{}}}],["engine/src/rules/stringisnotnullemptyrange.t",{"_index":406,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{},"coverage.html":{}}}],["engine/src/rules/stringisnotnullemptyrange.ts:20",{"_index":414,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["engine/src/rules/stringisnotnullemptyrange.ts:25",{"_index":415,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["engine/src/rules/stringisnotnullemptyrange.ts:30",{"_index":410,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["engine/src/rules/stringisnotnullemptyrange.ts:60",{"_index":418,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["engine/src/rules/stringisregexmatch",{"_index":190,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["engine/src/rules/stringisregexmatch.t",{"_index":426,"title":{},"body":{"classes/StringIsRegExMatch.html":{},"coverage.html":{}}}],["engine/src/rules/stringisregexmatch.ts:31",{"_index":430,"title":{},"body":{"classes/StringIsRegExMatch.html":{}}}],["engine/src/rules/stringisregexmatch.ts:8",{"_index":429,"title":{},"body":{"classes/StringIsRegExMatch.html":{}}}],["engine/src/service/messagetype.t",{"_index":531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["engine/src/service/servicecontext.t",{"_index":339,"title":{},"body":{"classes/ServiceContext.html":{},"coverage.html":{}}}],["engine/src/service/servicecontext.ts:14",{"_index":348,"title":{},"body":{"classes/ServiceContext.html":{}}}],["engine/src/service/servicecontext.ts:19",{"_index":352,"title":{},"body":{"classes/ServiceContext.html":{}}}],["engine/src/service/servicecontext.ts:26",{"_index":354,"title":{},"body":{"classes/ServiceContext.html":{}}}],["engine/src/service/servicecontext.ts:41",{"_index":356,"title":{},"body":{"classes/ServiceContext.html":{}}}],["engine/src/service/servicemessage.t",{"_index":366,"title":{},"body":{"classes/ServiceMessage.html":{},"coverage.html":{}}}],["engine/src/service/servicemessage.ts:102",{"_index":397,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:111",{"_index":387,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:119",{"_index":384,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:12",{"_index":379,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:15",{"_index":380,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:18",{"_index":383,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:21",{"_index":378,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:45",{"_index":375,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:75",{"_index":395,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:84",{"_index":391,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:9",{"_index":382,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/service/servicemessage.ts:93",{"_index":393,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["engine/src/validation/ivalidationcontext.t",{"_index":221,"title":{},"body":{"interfaces/IValidationContext.html":{},"coverage.html":{}}}],["engine/src/validation/ivalidationcontext.ts:31",{"_index":227,"title":{},"body":{"interfaces/IValidationContext.html":{}}}],["engine/src/validation/ivalidationcontext.ts:36",{"_index":228,"title":{},"body":{"interfaces/IValidationContext.html":{}}}],["engine/src/validation/validationcontext.t",{"_index":436,"title":{},"body":{"classes/ValidationContext.html":{},"coverage.html":{}}}],["engine/src/validation/validationcontext.ts:18",{"_index":443,"title":{},"body":{"classes/ValidationContext.html":{}}}],["engine/src/validation/validationcontext.ts:23",{"_index":439,"title":{},"body":{"classes/ValidationContext.html":{}}}],["engine/src/validation/validationcontext.ts:28",{"_index":441,"title":{},"body":{"classes/ValidationContext.html":{}}}],["engine/src/validation/validationcontext.ts:33",{"_index":438,"title":{},"body":{"classes/ValidationContext.html":{}}}],["engine/src/validation/validationcontext.ts:47",{"_index":445,"title":{},"body":{"classes/ValidationContext.html":{}}}],["engine/src/validation/validationcontext.ts:59",{"_index":448,"title":{},"body":{"classes/ValidationContext.html":{}}}],["engine/src/validation/validationcontext.ts:67",{"_index":447,"title":{},"body":{"classes/ValidationContext.html":{}}}],["engine/src/validation/validationcontext.ts:81",{"_index":446,"title":{},"body":{"classes/ValidationContext.html":{}}}],["engine/src/validation/validationcontext.ts:96",{"_index":451,"title":{},"body":{"classes/ValidationContext.html":{}}}],["engine/src/validation/validationcontextstate.t",{"_index":538,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enterpris",{"_index":552,"title":{},"body":{"index.html":{}}}],["enumer",{"_index":526,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["equal",{"_index":11,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{}}}],["error",{"_index":323,"title":{},"body":{"classes/RulePolicy.html":{},"classes/ServiceContext.html":{},"miscellaneous/enumerations.html":{}}}],["errormessag",{"_index":360,"title":{},"body":{"classes/ServiceContext.html":{}}}],["errormessages.length",{"_index":365,"title":{},"body":{"classes/ServiceContext.html":{}}}],["evalu",{"_index":37,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["evaluateallrul",{"_index":536,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["evalut",{"_index":169,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["ex",{"_index":276,"title":{},"body":{"classes/Range.html":{}}}],["except",{"_index":125,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"miscellaneous/enumerations.html":{}}}],["execut",{"_index":100,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"index.html":{}}}],["exitonfirstfalseevalu",{"_index":534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["exitonfirsttrueevalu",{"_index":535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["export",{"_index":60,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"modules/BuildMotionRulesEngineModule.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"overview.html":{}}}],["express",{"_index":428,"title":{},"body":{"classes/StringIsRegExMatch.html":{}}}],["extend",{"_index":13,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["extens",{"_index":388,"title":{},"body":{"classes/ServiceMessage.html":{},"classes/ValidationContext.html":{},"index.html":{}}}],["f",{"_index":362,"title":{},"body":{"classes/ServiceContext.html":{}}}],["f.messagetyp",{"_index":363,"title":{},"body":{"classes/ServiceContext.html":{}}}],["f]{12}$/i",{"_index":204,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["f]{4",{"_index":203,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["f]{8",{"_index":202,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["failur",{"_index":541,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["fals",{"_index":68,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["false).length",{"_index":159,"title":{},"body":{"classes/CompositeRule.html":{},"classes/ValidationContext.html":{}}}],["falsi",{"_index":235,"title":{},"body":{"classes/IsFalse.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"modules/BuildMotionRulesEngineModule.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"coverage.html":{},"index.html":{}}}],["first",{"_index":119,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"index.html":{}}}],["flag",{"_index":591,"title":{},"body":{"index.html":{}}}],["foreach(r",{"_index":152,"title":{},"body":{"classes/CompositeRule.html":{},"classes/ValidationContext.html":{}}}],["freez",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["function",{"_index":147,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["further",{"_index":601,"title":{},"body":{"index.html":{}}}],["gener",{"_index":545,"title":{},"body":{"index.html":{}}}],["get",{"_index":542,"title":{"index.html":{}},"body":{}}],["getisvalid",{"_index":450,"title":{},"body":{"classes/ValidationContext.html":{}}}],["go",{"_index":602,"title":{},"body":{"index.html":{}}}],["good",{"_index":456,"title":{},"body":{"classes/ValidationContext.html":{}}}],["grade",{"_index":555,"title":{},"body":{"index.html":{}}}],["graph",{"_index":606,"title":{},"body":{"modules.html":{}}}],["greater",{"_index":263,"title":{},"body":{"classes/Min.html":{},"classes/Range.html":{}}}],["guid",{"_index":163,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["guidexpress",{"_index":200,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["guidisvalid",{"_index":161,"title":{"classes/GuidIsValid.html":{}},"body":{"classes/GuidIsValid.html":{},"coverage.html":{}}}],["guidlength",{"_index":196,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["guidstringisnotnullorundefin",{"_index":208,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["guidstringlengthisvalid",{"_index":212,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["haserror",{"_index":92,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/ServiceContext.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["hasrul",{"_index":98,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["hasruleviol",{"_index":225,"title":{},"body":{"interfaces/IValidationContext.html":{},"classes/ValidationContext.html":{}}}],["hasviol",{"_index":463,"title":{},"body":{"classes/ValidationContext.html":{}}}],["help",{"_index":553,"title":{},"body":{"index.html":{}}}],["helper",{"_index":419,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["here",{"_index":572,"title":{},"body":{"index.html":{}}}],["higher",{"_index":118,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["highest",{"_index":286,"title":{},"body":{"classes/Range.html":{}}}],["http://localhost:4200",{"_index":579,"title":{},"body":{"index.html":{}}}],["hyphen",{"_index":199,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["identifi",{"_index":470,"title":{},"body":{"coverage.html":{}}}],["if(not",{"_index":253,"title":{},"body":{"classes/IsTrue.html":{}}}],["if(tru",{"_index":238,"title":{},"body":{"classes/IsFalse.html":{}}}],["implement",{"_index":146,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["import",{"_index":53,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"modules/BuildMotionRulesEngineModule.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["inclus",{"_index":275,"title":{},"body":{"classes/Range.html":{}}}],["indciat",{"_index":302,"title":{},"body":{"classes/RulePolicy.html":{}}}],["index",{"_index":15,"title":{"index.html":{}},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["indiat",{"_index":168,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["indic",{"_index":39,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"modules/BuildMotionRulesEngineModule.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["inform",{"_index":52,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"miscellaneous/enumerations.html":{}}}],["inherit",{"_index":110,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["instanc",{"_index":46,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/ValidationContext.html":{}}}],["interfac",{"_index":214,"title":{"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{}},"body":{"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"coverage.html":{},"overview.html":{}}}],["invalidrulescount",{"_index":467,"title":{},"body":{"classes/ValidationContext.html":{}}}],["irulecompon",{"_index":215,"title":{"interfaces/IRuleComponent.html":{}},"body":{"interfaces/IRuleComponent.html":{},"classes/RulePolicy.html":{},"coverage.html":{}}}],["isdisplay",{"_index":24,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["isfals",{"_index":233,"title":{"classes/IsFalse.html":{}},"body":{"classes/IsFalse.html":{},"coverage.html":{}}}],["isgood",{"_index":347,"title":{},"body":{"classes/ServiceContext.html":{}}}],["isnotnullorundefin",{"_index":239,"title":{"classes/IsNotNullOrUndefined.html":{}},"body":{"classes/IsNotNullOrUndefined.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"coverage.html":{}}}],["isnullorundefin",{"_index":244,"title":{"classes/IsNullOrUndefined.html":{}},"body":{"classes/IsNullOrUndefined.html":{},"coverage.html":{}}}],["isrulevalid",{"_index":466,"title":{},"body":{"classes/ValidationContext.html":{}}}],["istru",{"_index":248,"title":{"classes/IsTrue.html":{}},"body":{"classes/IsTrue.html":{},"coverage.html":{}}}],["isvalid",{"_index":93,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["item",{"_index":44,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/RuleResult.html":{},"classes/ServiceMessage.html":{}}}],["ivalidationcontext",{"_index":220,"title":{"interfaces/IValidationContext.html":{}},"body":{"interfaces/IValidationContext.html":{},"classes/ValidationContext.html":{},"coverage.html":{}}}],["js",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":596,"title":{},"body":{"index.html":{}}}],["legend",{"_index":609,"title":{},"body":{"overview.html":{}}}],["length",{"_index":198,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/ValidationContext.html":{}}}],["lenth",{"_index":416,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["less",{"_index":256,"title":{},"body":{"classes/Max.html":{},"classes/Range.html":{}}}],["librari",{"_index":568,"title":{},"body":{"index.html":{}}}],["libs/.../messagetype.t",{"_index":527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../primitive.t",{"_index":617,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["libs/.../rendertype.t",{"_index":528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../severity.t",{"_index":529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/.../validationcontextstate.t",{"_index":530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["libs/rul",{"_index":5,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"modules/BuildMotionRulesEngineModule.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["list",{"_index":105,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/Range.html":{},"classes/ServiceContext.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["lowest",{"_index":284,"title":{},"body":{"classes/Range.html":{},"classes/RulePolicy.html":{}}}],["make",{"_index":599,"title":{},"body":{"index.html":{}}}],["manag",{"_index":340,"title":{},"body":{"classes/ServiceContext.html":{}}}],["match",{"_index":71,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"modules/BuildMotionRulesEngineModule.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["max",{"_index":254,"title":{"classes/Max.html":{}},"body":{"classes/Max.html":{},"classes/Range.html":{},"coverage.html":{}}}],["maximum",{"_index":413,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["maxiumum",{"_index":407,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["maxlength",{"_index":408,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["maxvalu",{"_index":297,"title":{},"body":{"classes/Range.html":{}}}],["member",{"_index":129,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["messag",{"_index":22,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["messagetyp",{"_index":357,"title":{},"body":{"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"miscellaneous/enumerations.html":{}}}],["messagetype.error",{"_index":364,"title":{},"body":{"classes/ServiceContext.html":{}}}],["method",{"_index":17,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["min",{"_index":261,"title":{"classes/Min.html":{}},"body":{"classes/Min.html":{},"classes/Range.html":{},"coverage.html":{}}}],["minimum",{"_index":264,"title":{},"body":{"classes/Min.html":{},"classes/StringIsNotNullEmptyRange.html":{}}}],["minlength",{"_index":409,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["minut",{"_index":561,"title":{},"body":{"index.html":{}}}],["minvalu",{"_index":296,"title":{},"body":{"classes/Range.html":{}}}],["miscellan",{"_index":525,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["modul",{"_index":78,"title":{"modules/BuildMotionRulesEngineModule.html":{},"modules.html":{}},"body":{"modules/BuildMotionRulesEngineModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":134,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/Range.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"index.html":{}}}],["multipl",{"_index":567,"title":{},"body":{"index.html":{}}}],["myapp",{"_index":566,"title":{},"body":{"index.html":{}}}],["name",{"_index":32,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"index.html":{}}}],["navig",{"_index":578,"title":{},"body":{"index.html":{}}}],["new",{"_index":69,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceContext.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"coverage.html":{},"index.html":{}}}],["ng",{"_index":564,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":82,"title":{},"body":{"modules/BuildMotionRulesEngineModule.html":{}}}],["ngrx",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["ngrx/effect",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["notevalu",{"_index":539,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["nrwl",{"_index":548,"title":{},"body":{"index.html":{}}}],["nrwl/nx",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["null",{"_index":209,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/Range.html":{},"classes/RuleResult.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["number",{"_index":116,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"miscellaneous/typealiases.html":{}}}],["numer",{"_index":304,"title":{},"body":{"classes/RulePolicy.html":{}}}],["nx",{"_index":549,"title":{},"body":{"index.html":{}}}],["object",{"_index":282,"title":{},"body":{"classes/Range.html":{},"classes/StringIsRegExMatch.html":{}}}],["on",{"_index":133,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/Range.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["open",{"_index":550,"title":{},"body":{"index.html":{}}}],["opinion",{"_index":556,"title":{},"body":{"index.html":{}}}],["option",{"_index":34,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["out",{"_index":604,"title":{},"body":{"index.html":{},"overview.html":{}}}],["overload",{"_index":301,"title":{},"body":{"classes/RulePolicy.html":{}}}],["overview",{"_index":608,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":489,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":61,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["paramet",{"_index":30,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["pattern",{"_index":140,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"index.html":{}}}],["pipelin",{"_index":143,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["polici",{"_index":334,"title":{},"body":{"classes/RuleResult.html":{}}}],["primit",{"_index":23,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"miscellaneous/typealiases.html":{}}}],["prioriti",{"_index":94,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["privat",{"_index":164,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/StringIsRegExMatch.html":{}}}],["process",{"_index":131,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceContext.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["processresult",{"_index":99,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["prod",{"_index":590,"title":{},"body":{"index.html":{}}}],["product",{"_index":592,"title":{},"body":{"index.html":{}}}],["project",{"_index":544,"title":{},"body":{"index.html":{}}}],["properti",{"_index":16,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["protractor",{"_index":598,"title":{},"body":{"index.html":{}}}],["provid",{"_index":417,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{},"index.html":{},"overview.html":{}}}],["public",{"_index":97,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["quick",{"_index":558,"title":{},"body":{"index.html":{}}}],["r.isvalid",{"_index":158,"title":{},"body":{"classes/CompositeRule.html":{},"classes/ValidationContext.html":{}}}],["r.prioriti",{"_index":462,"title":{},"body":{"classes/ValidationContext.html":{}}}],["rang",{"_index":270,"title":{"classes/Range.html":{}},"body":{"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"coverage.html":{}}}],["read",{"_index":571,"title":{},"body":{"index.html":{}}}],["readi",{"_index":453,"title":{},"body":{"classes/ValidationContext.html":{}}}],["readm",{"_index":605,"title":{},"body":{"index.html":{}}}],["regexp",{"_index":205,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/StringIsRegExMatch.html":{}}}],["regular",{"_index":427,"title":{},"body":{"classes/StringIsRegExMatch.html":{}}}],["reload",{"_index":581,"title":{},"body":{"index.html":{}}}],["render",{"_index":18,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["rendered/execut",{"_index":106,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["renderrul",{"_index":226,"title":{},"body":{"interfaces/IValidationContext.html":{},"classes/ValidationContext.html":{}}}],["rendertyp",{"_index":95,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"miscellaneous/enumerations.html":{}}}],["rendertype.evaluateallrul",{"_index":120,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["repres",{"_index":385,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["request",{"_index":345,"title":{},"body":{"classes/ServiceContext.html":{}}}],["requir",{"_index":142,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["reset",{"_index":613,"title":{},"body":{"overview.html":{}}}],["result",{"_index":49,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"modules/BuildMotionRulesEngineModule.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":50,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["rule",{"_index":29,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["rule'",{"_index":303,"title":{},"body":{"classes/RulePolicy.html":{}}}],["rule(",{"_index":412,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["rule.sourc",{"_index":459,"title":{},"body":{"classes/ValidationContext.html":{}}}],["rulepolici",{"_index":91,"title":{"classes/RulePolicy.html":{}},"body":{"classes/CompositeRule.html":{},"interfaces/IValidationContext.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/SimpleRule.html":{},"classes/ValidationContext.html":{},"coverage.html":{}}}],["rulepolicy.isvalid",{"_index":336,"title":{},"body":{"classes/RuleResult.html":{}}}],["rulepolicy.messag",{"_index":337,"title":{},"body":{"classes/RuleResult.html":{}}}],["rulepolicy:13",{"_index":112,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["rulepolicy:16",{"_index":114,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["rulepolicy:19",{"_index":115,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["rulepolicy:22",{"_index":117,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["rulepolicy:25",{"_index":122,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["rulepolicy:28",{"_index":111,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["rulepolicy:31",{"_index":121,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["rulepolicy:34",{"_index":124,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["rulepolicy:37",{"_index":126,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["rulepolicy:74",{"_index":137,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["rulepolicy:82",{"_index":144,"title":{},"body":{"classes/CompositeRule.html":{},"classes/SimpleRule.html":{}}}],["ruleresult",{"_index":51,"title":{"classes/RuleResult.html":{}},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"coverage.html":{}}}],["ruleresult(thi",{"_index":70,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{}}}],["rules.areequ",{"_index":211,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["rules.isnotnullorundefin",{"_index":207,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/StringIsRegExMatch.html":{}}}],["rules.istru",{"_index":432,"title":{},"body":{"classes/StringIsRegExMatch.html":{}}}],["rules/rulepolici",{"_index":232,"title":{},"body":{"interfaces/IValidationContext.html":{},"classes/ValidationContext.html":{}}}],["rules/ruleresult",{"_index":231,"title":{},"body":{"interfaces/IValidationContext.html":{},"classes/ValidationContext.html":{}}}],["ruleviolationscount",{"_index":464,"title":{},"body":{"classes/ValidationContext.html":{}}}],["run",{"_index":563,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["s.prioriti",{"_index":151,"title":{},"body":{"classes/CompositeRule.html":{}}}],["same",{"_index":569,"title":{},"body":{"index.html":{}}}],["scaffold",{"_index":584,"title":{},"body":{"index.html":{}}}],["serv",{"_index":575,"title":{},"body":{"index.html":{}}}],["server",{"_index":574,"title":{},"body":{"index.html":{}}}],["servic",{"_index":341,"title":{},"body":{"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{}}}],["servicecontext",{"_index":338,"title":{"classes/ServiceContext.html":{}},"body":{"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"coverage.html":{}}}],["servicemessag",{"_index":351,"title":{"classes/ServiceMessage.html":{}},"body":{"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["set",{"_index":389,"title":{},"body":{"classes/ServiceMessage.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["sever",{"_index":96,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"miscellaneous/enumerations.html":{}}}],["severity.except",{"_index":123,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["shape/structur",{"_index":217,"title":{},"body":{"interfaces/IRuleComponent.html":{}}}],["showruleviol",{"_index":194,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/StringIsRegExMatch.html":{}}}],["simpl",{"_index":403,"title":{},"body":{"classes/SimpleRule.html":{}}}],["simplemd",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["simplerul",{"_index":14,"title":{"classes/SimpleRule.html":{}},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"coverage.html":{}}}],["singl",{"_index":326,"title":{},"body":{"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/SimpleRule.html":{}}}],["sort(",{"_index":150,"title":{},"body":{"classes/CompositeRule.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"modules/BuildMotionRulesEngineModule.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"index.html":{}}}],["specifi",{"_index":45,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["specifiy",{"_index":381,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["start",{"_index":273,"title":{"index.html":{}},"body":{"classes/Range.html":{},"index.html":{}}}],["state",{"_index":224,"title":{},"body":{"interfaces/IValidationContext.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["statement",{"_index":471,"title":{},"body":{"coverage.html":{}}}],["statu",{"_index":113,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["store",{"_index":512,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["string",{"_index":21,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/typealiases.html":{}}}],["stringisnotnul",{"_index":423,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["stringisnotnullemptyrang",{"_index":405,"title":{"classes/StringIsNotNullEmptyRange.html":{}},"body":{"classes/StringIsNotNullEmptyRange.html":{},"coverage.html":{}}}],["stringisnotnullemptyrangerul",{"_index":411,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["stringisnotnullorundefin",{"_index":431,"title":{},"body":{"classes/StringIsRegExMatch.html":{}}}],["stringisregexmatch",{"_index":188,"title":{"classes/StringIsRegExMatch.html":{}},"body":{"classes/GuidIsValid.html":{},"classes/StringIsRegExMatch.html":{},"coverage.html":{}}}],["stringisregexpmatch",{"_index":433,"title":{},"body":{"classes/StringIsRegExMatch.html":{}}}],["structur",{"_index":222,"title":{},"body":{"interfaces/IValidationContext.html":{},"index.html":{}}}],["success",{"_index":540,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["summari",{"_index":135,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["super(nam",{"_index":62,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["sure",{"_index":600,"title":{},"body":{"index.html":{}}}],["tabl",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":487,"title":{},"body":{"coverage.html":{}}}],["target",{"_index":10,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RuleResult.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["targetisnotnul",{"_index":295,"title":{},"body":{"classes/Range.html":{}}}],["targetlengthiswithinrang",{"_index":424,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["templat",{"_index":138,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["test",{"_index":594,"title":{},"body":{"index.html":{}}}],["text",{"_index":376,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["thing",{"_index":455,"title":{},"body":{"classes/ValidationContext.html":{}}}],["this.comparison",{"_index":64,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{}}}],["this.configurerul",{"_index":192,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["this.displaytous",{"_index":400,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["this.end",{"_index":293,"title":{},"body":{"classes/Range.html":{}}}],["this.expression.test(this.target",{"_index":434,"title":{},"body":{"classes/StringIsRegExMatch.html":{}}}],["this.haserror",{"_index":160,"title":{},"body":{"classes/CompositeRule.html":{}}}],["this.isdisplay",{"_index":294,"title":{},"body":{"classes/Range.html":{},"classes/RulePolicy.html":{}}}],["this.isvalid",{"_index":67,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/RuleResult.html":{}}}],["this.maxlength",{"_index":422,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["this.messag",{"_index":317,"title":{},"body":{"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{}}}],["this.messages.filt",{"_index":361,"title":{},"body":{"classes/ServiceContext.html":{}}}],["this.messages.length",{"_index":359,"title":{},"body":{"classes/ServiceContext.html":{}}}],["this.messages.push(messag",{"_index":358,"title":{},"body":{"classes/ServiceContext.html":{}}}],["this.messagetyp",{"_index":398,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["this.messagetype.tostr",{"_index":401,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["this.minlength",{"_index":421,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["this.nam",{"_index":316,"title":{},"body":{"classes/RulePolicy.html":{},"classes/ServiceMessage.html":{}}}],["this.prior",{"_index":318,"title":{},"body":{"classes/RulePolicy.html":{}}}],["this.processresult",{"_index":154,"title":{},"body":{"classes/CompositeRule.html":{}}}],["this.rend",{"_index":321,"title":{},"body":{"classes/RulePolicy.html":{}}}],["this.result",{"_index":461,"title":{},"body":{"classes/ValidationContext.html":{}}}],["this.results.filter(r",{"_index":157,"title":{},"body":{"classes/CompositeRule.html":{}}}],["this.results.push(r.execut",{"_index":153,"title":{},"body":{"classes/CompositeRule.html":{},"classes/ValidationContext.html":{}}}],["this.rul",{"_index":149,"title":{},"body":{"classes/CompositeRule.html":{},"classes/ValidationContext.html":{}}}],["this.rulepolici",{"_index":335,"title":{},"body":{"classes/RuleResult.html":{}}}],["this.rules.filter(r",{"_index":465,"title":{},"body":{"classes/ValidationContext.html":{}}}],["this.rules.length",{"_index":155,"title":{},"body":{"classes/CompositeRule.html":{},"classes/ValidationContext.html":{}}}],["this.rules.push",{"_index":206,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["this.rules.push(rul",{"_index":460,"title":{},"body":{"classes/ValidationContext.html":{}}}],["this.sever",{"_index":319,"title":{},"body":{"classes/RulePolicy.html":{}}}],["this.sourc",{"_index":399,"title":{},"body":{"classes/ServiceMessage.html":{},"classes/ValidationContext.html":{}}}],["this.start",{"_index":292,"title":{},"body":{"classes/Range.html":{}}}],["this.target",{"_index":63,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/GuidIsValid.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RuleResult.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["this.target.length",{"_index":213,"title":{},"body":{"classes/GuidIsValid.html":{}}}],["this.target.tostring().length",{"_index":425,"title":{},"body":{"classes/StringIsNotNullEmptyRange.html":{}}}],["throw",{"_index":322,"title":{},"body":{"classes/RulePolicy.html":{}}}],["toolkit",{"_index":551,"title":{},"body":{"index.html":{}}}],["tostr",{"_index":369,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["true",{"_index":43,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/ServiceContext.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{}}}],["truthi",{"_index":250,"title":{},"body":{"classes/IsTrue.html":{}}}],["type",{"_index":33,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["typealias",{"_index":615,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":243,"title":{},"body":{"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{}}}],["typescript",{"_index":55,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"dependencies.html":{}}}],["undefin",{"_index":210,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["unit",{"_index":593,"title":{},"body":{"index.html":{}}}],["until",{"_index":457,"title":{},"body":{"classes/ValidationContext.html":{}}}],["us",{"_index":8,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["user",{"_index":377,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["valid",{"_index":148,"title":{},"body":{"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["validationcontext",{"_index":435,"title":{"classes/ValidationContext.html":{}},"body":{"classes/ValidationContext.html":{},"coverage.html":{}}}],["validationcontextst",{"_index":230,"title":{},"body":{"interfaces/IValidationContext.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["validationcontextstate.notevalu",{"_index":442,"title":{},"body":{"classes/ValidationContext.html":{}}}],["valu",{"_index":42,"title":{},"body":{"classes/AreEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IRuleComponent.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/RuleResult.html":{},"classes/ServiceContext.html":{},"classes/ServiceMessage.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["via",{"_index":595,"title":{},"body":{"index.html":{}}}],["video",{"_index":562,"title":{},"body":{"index.html":{}}}],["violat",{"_index":36,"title":{},"body":{"classes/AreEqual.html":{},"classes/AreNotEqual.html":{},"classes/CompositeRule.html":{},"classes/GuidIsValid.html":{},"interfaces/IValidationContext.html":{},"classes/IsFalse.html":{},"classes/IsNotNullOrUndefined.html":{},"classes/IsNullOrUndefined.html":{},"classes/IsTrue.html":{},"classes/Max.html":{},"classes/Min.html":{},"classes/Range.html":{},"classes/RulePolicy.html":{},"classes/SimpleRule.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{},"classes/ValidationContext.html":{},"miscellaneous/enumerations.html":{}}}],["visibl",{"_index":287,"title":{},"body":{"classes/Range.html":{}}}],["viz",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["void",{"_index":182,"title":{},"body":{"classes/GuidIsValid.html":{},"classes/ServiceContext.html":{},"classes/StringIsNotNullEmptyRange.html":{},"classes/StringIsRegExMatch.html":{}}}],["warn",{"_index":532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["watch",{"_index":559,"title":{},"body":{"index.html":{}}}],["withdisplaytous",{"_index":370,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["withdisplaytouser(displaytous",{"_index":386,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["within",{"_index":272,"title":{},"body":{"classes/Range.html":{},"classes/StringIsNotNullEmptyRange.html":{}}}],["withmessag",{"_index":371,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["withmessage(messag",{"_index":390,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["withmessagetyp",{"_index":372,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["withmessagetype(messagetyp",{"_index":392,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["withnam",{"_index":373,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["withname(nam",{"_index":394,"title":{},"body":{"classes/ServiceMessage.html":{}}}],["without",{"_index":229,"title":{},"body":{"interfaces/IValidationContext.html":{}}}],["withsourc",{"_index":374,"title":{},"body":{"classes/ServiceMessage.html":{},"classes/ValidationContext.html":{}}}],["withsource(sourc",{"_index":396,"title":{},"body":{"classes/ServiceMessage.html":{},"classes/ValidationContext.html":{}}}],["workspac",{"_index":570,"title":{},"body":{"index.html":{}}}],["ye",{"_index":329,"title":{},"body":{"classes/RuleResult.html":{},"classes/ServiceMessage.html":{}}}],["zone.j",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":612,"title":{},"body":{"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AreEqual.html":{"url":"classes/AreEqual.html","title":"class - AreEqual","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AreEqual\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/AreEqual.ts\n        \n\n            \n                Description\n            \n            \n                Use to determine if the target is equal to the comparison target.\n\n            \n\n            \n                Extends\n            \n            \n                    SimpleRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comparison\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: Primitive, comparison: Primitive, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/AreEqual.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor for the [AreEqualRule] rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    Primitive\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target that the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        comparison\n                                                  \n                                                        \n                                                                    Primitive\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The comparison target the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : Indicates if the rule violation is displayble. Default value is [true].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparison\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        comparison:     Primitive\n\n                    \n                \n                    \n                        \n                            Type :     Primitive\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/AreEqual.ts:21\n                            \n                        \n\n                \n                    \n                        The comparison item for the specified rule instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     Primitive\n\n                    \n                \n                    \n                        \n                            Type :     Primitive\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/AreEqual.ts:16\n                            \n                        \n\n                \n                    \n                        The target for the rule instance.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/AreEqual.ts:47\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { CompareResult } from 'typescript-dotnet-commonjs/System/CompareResult';\nimport { compare } from 'typescript-dotnet-commonjs/System/Compare';\n\nimport { SimpleRule } from './SimpleRule';\nimport { RuleResult } from './RuleResult';\nimport { Primitive } from './Primitive';\n\n/**\n * Use to determine if the target is equal to the comparison target.\n */\nexport class AreEqual extends SimpleRule {\n \n  /**\n   * The target for the rule instance.\n   */\n  target: Primitive;\n\n  /**\n   * The comparison item for the specified rule instance.\n   */\n  comparison: Primitive;\n\n  /**\n   * The constructor for the [AreEqualRule] rule.\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param target The target that the rules are evaluated against.\n   * @param comparison The comparison target the rules are evaluated against.\n   * @param isDisplayable: Indicates if the rule violation is displayble. Default value is [true].\n   */\n  constructor(\n    name: string,\n    message: string,\n    target: Primitive,\n    comparison: Primitive,\n    isDisplayable: boolean = true\n  ) {\n    super(name, message, isDisplayable);\n    this.target = target;\n    this.comparison = comparison;\n  }\n\n /**\n   * Use to render the evaluated result for the specified rule. This method\n   * returns a [RuleResult] with the evaluated result and rule information.\n   */\n  render(): RuleResult{\n    if (compare(this.target, this.comparison, true) !== CompareResult.Equal) {\n      this.isValid = false;\n    }\n    return new RuleResult(this, this.target);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AreNotEqual.html":{"url":"classes/AreNotEqual.html","title":"class - AreNotEqual","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  AreNotEqual\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/AreNotEqual.ts\n        \n\n            \n                Description\n            \n            \n                Use to determine if the target is not equal to the comparison target.\n\n            \n\n            \n                Extends\n            \n            \n                    SimpleRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comparison\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: Primitive, comparison: Primitive, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/AreNotEqual.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor for the [AreNotEqualRule] rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    Primitive\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target that the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        comparison\n                                                  \n                                                        \n                                                                    Primitive\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The comparison target the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : (Optional) Indicates if the rule violation is displayble. Default is [true].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparison\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        comparison:     Primitive\n\n                    \n                \n                    \n                        \n                            Type :     Primitive\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/AreNotEqual.ts:21\n                            \n                        \n\n                \n                    \n                        The comparison item for the specified rule instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     Primitive\n\n                    \n                \n                    \n                        \n                            Type :     Primitive\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/AreNotEqual.ts:16\n                            \n                        \n\n                \n                    \n                        The target for the rule instance.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/AreNotEqual.ts:47\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { CompareResult } from 'typescript-dotnet-commonjs/System/CompareResult';\nimport { compare } from 'typescript-dotnet-commonjs/System/Compare';\n\nimport { SimpleRule } from './SimpleRule';\nimport { RuleResult } from './RuleResult';\nimport { Primitive } from './Primitive';\n\n/**\n * Use to determine if the target is not equal to the comparison target.\n */\nexport class AreNotEqual extends SimpleRule {\n \n  /**\n   * The target for the rule instance.\n   */\n  target: Primitive;\n\n  /**\n   * The comparison item for the specified rule instance.\n   */\n  comparison: Primitive;\n\n  /**\n   * The constructor for the [AreNotEqualRule] rule.\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param target The target that the rules are evaluated against.\n   * @param comparison The comparison target the rules are evaluated against.\n   * @param isDisplayable: (Optional) Indicates if the rule violation is displayble. Default is [true].\n   */\n  constructor(\n    name: string,\n    message: string,\n    target: Primitive,\n    comparison: Primitive,\n    isDisplayable: boolean = true\n  ) {\n    super(name, message, isDisplayable);\n    this.target = target;\n    this.comparison = comparison;\n  }\n\n  /**\n   * Use to render the evaluated result for the specified rule. This method\n   * returns a [RuleResult] with the evaluated result and rule information.\n   */\n  render(): RuleResult{\n    if (compare(this.target, this.comparison, true) === CompareResult.Equal) {\n      this.isValid = false;\n    }\n    return new RuleResult(this, this.target);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BuildMotionRulesEngineModule.html":{"url":"modules/BuildMotionRulesEngineModule.html","title":"module - BuildMotionRulesEngineModule","body":"\n                   \n\n\n\n\n  Modules\n  BuildMotionRulesEngineModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            libs/rules-engine/src/rules-engine.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class BuildMotionRulesEngineModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CompositeRule.html":{"url":"classes/CompositeRule.html","title":"class - CompositeRule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  CompositeRule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/CompositeRule.ts\n        \n\n            \n                Description\n            \n            \n                Use the [CompositeRule] as a base class for a complex rule - a rule that contains\nother rules.\n\n            \n\n            \n                Extends\n            \n            \n                    RulePolicy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasErrors\n                            \n                            \n                                results\n                            \n                            \n                                rules\n                            \n                            \n                                isDisplayable\n                            \n                            \n                                isValid\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                            \n                                priority\n                            \n                            \n                                renderType\n                            \n                            \n                                result\n                            \n                            \n                                severity\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasRules\n                            \n                            \n                                processResults\n                            \n                            \n                                render\n                            \n                            \n                                execute\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/CompositeRule.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display if the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Indicates if the rule is displayable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasErrors:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/CompositeRule.ts:13\n                            \n                        \n\n                \n                    \n                        Indicates if the rule has any rule violations.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        results:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/CompositeRule.ts:19\n                            \n                        \n\n                \n                    \n                        A list of results for evaluated rules. Rules must be rendered/executed before \nany results are available.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rules:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/CompositeRule.ts:24\n                            \n                        \n\n                \n                    \n                        A list of rules for the specified composite rule.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisplayable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisplayable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:28\n                            \n                        \n\n                \n                    \n                        Use to indicate if the rule result is displayable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isValid:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:13\n                            \n                        \n\n                \n                    \n                        Use to indicate the status of the rule. Value is false when the rule contains violations. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:16\n                            \n                        \n\n                \n                    \n                        Use to indicate the display message for a rule violation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:19\n                            \n                        \n\n                \n                    \n                        Use to indicate the name of the specified rule. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:22\n                            \n                        \n\n                \n                    \n                        Use to indicate the priority value of the rule. Higher priority values are evaluated first. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderType:     RenderType\n\n                    \n                \n                    \n                        \n                            Type :     RenderType\n\n                        \n                    \n                    \n                        \n                            Default value : RenderType.EvaluateAllRules\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:31\n                            \n                        \n\n                \n                    \n                        Use to determine how the rule is evaluated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        result:     RuleResult\n\n                    \n                \n                    \n                        \n                            Type :     RuleResult\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:25\n                            \n                        \n\n                \n                    \n                        The specified rules result. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            severity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        severity:     Severity\n\n                    \n                \n                    \n                        \n                            Type :     Severity\n\n                        \n                    \n                    \n                        \n                            Default value : Severity.Exception\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:34\n                            \n                        \n\n                \n                    \n                        Use to indicate the severity for a rule violation. The default severity is [Exception]. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        source:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:37\n                            \n                        \n\n                \n                    \n                        Use to indicate the source of the specified rule. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRules()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/CompositeRule.ts:51\n                            \n                        \n\n\n                \n                    \n                            Use to determine if the composite rule has child-rules that are\nmembers of the specified rule.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processResults\n                            \n                            \n                        \n                    \n                \n                \n                    \nprocessResults()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/CompositeRule.ts:64\n                            \n                        \n\n\n                \n                    \n                            Use to process the results of the specified rule result collection. Composite\nrules will have one or more rule results for all child-rules.\nThis method will return result with the evaluation summary and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/CompositeRule.ts:40\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:74\n                            \n                        \n\n\n                \n                    \n                            Use to execute the rule. This is the [template] method of the [template method] design\npattern. It will coordindate the execution of any required methods in the processing\npipeline. \n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:82\n                            \n                        \n\n\n                \n                    \n                            Each rule must implement this function and return a valid [RuleResult].\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { RulePolicy } from './RulePolicy';\nimport { RuleResult } from './RuleResult';\n\n/**\n * Use the [CompositeRule] as a base class for a complex rule - a rule that contains\n * other rules.\n */\nexport class CompositeRule extends RulePolicy {\n\n  /**\n   * Indicates if the rule has any rule violations.\n   */\n  hasErrors = false;\n\n  /**\n   * A list of results for evaluated rules. Rules must be rendered/executed before \n   * any results are available.\n   */\n  results: Array = new Array();\n\n  /**\n   * A list of rules for the specified composite rule.\n   */\n  rules: Array = new Array();\n\n  /**\n   *\n   * @param name The name of the rule.\n   * @param message The message to display if the rule is violated.\n   * @param isDisplayable Indicates if the rule is displayable.\n   */\n  constructor(name: string, message: string, isDisplayable: boolean) {\n    super(name, message, isDisplayable);\n  }\n\n  /**\n   * Use to render the evaluated result for the specified rule. This method\n   * returns a [RuleResult] with the evaluated result and rule information.\n   */\n  render(): RuleResult{\n    this.rules\n      .sort(s => s.priority)\n      .forEach(r => this.results.push(r.execute()));\n    return this.processResults();\n  }\n\n  /**\n   * Use to determine if the composite rule has child-rules that are\n   * members of the specified rule.\n   */\n  public hasRules(): boolean {\n    if (this.rules && this.rules.length > 0) {\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Use to process the results of the specified rule result collection. Composite\n   * rules will have one or more rule results for all child-rules.\n   * \n   * This method will return result with the evaluation summary and rule information.\n   */\n  processResults(): RuleResult {\n    if (this.results.filter(r => r.isValid === false).length > 0) {\n      this.isValid = false;\n      this.hasErrors = true;\n    }\n    return new RuleResult(this);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GuidIsValid.html":{"url":"classes/GuidIsValid.html","title":"class - GuidIsValid","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  GuidIsValid\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/GuidIsValid.ts\n        \n\n            \n                Description\n            \n            \n                Use this rule to validate the target to determine if it is a valid\nGUID value.\n\n            \n\n            \n                Extends\n            \n            \n                    CompositeRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasErrors\n                            \n                            \n                                results\n                            \n                            \n                                rules\n                            \n                            \n                                isDisplayable\n                            \n                            \n                                isValid\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                            \n                                priority\n                            \n                            \n                                renderType\n                            \n                            \n                                result\n                            \n                            \n                                severity\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configureRules\n                            \n                            \n                                    Public\n                                hasRules\n                            \n                            \n                                processResults\n                            \n                            \n                                render\n                            \n                            \n                                execute\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: string, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/GuidIsValid.ts:9\n                            \n                        \n\n                \n                    \n                            Construcctor for the [GuidIsValid] composite rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Use to indicate the name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Use to indiate the message to display for a false evaluation.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Use to specify the target value to evalute.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Use to indicate if the rule result is displayable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasErrors:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:13\n                            \n                        \n\n                \n                    \n                        Indicates if the rule has any rule violations.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        results:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:19\n                            \n                        \n\n                \n                    \n                        A list of results for evaluated rules. Rules must be rendered/executed before \nany results are available.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rules:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:24\n                            \n                        \n\n                \n                    \n                        A list of rules for the specified composite rule.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisplayable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisplayable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:28\n                            \n                        \n\n                \n                    \n                        Use to indicate if the rule result is displayable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isValid:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:13\n                            \n                        \n\n                \n                    \n                        Use to indicate the status of the rule. Value is false when the rule contains violations. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:16\n                            \n                        \n\n                \n                    \n                        Use to indicate the display message for a rule violation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:19\n                            \n                        \n\n                \n                    \n                        Use to indicate the name of the specified rule. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:22\n                            \n                        \n\n                \n                    \n                        Use to indicate the priority value of the rule. Higher priority values are evaluated first. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderType:     RenderType\n\n                    \n                \n                    \n                        \n                            Type :     RenderType\n\n                        \n                    \n                    \n                        \n                            Default value : RenderType.EvaluateAllRules\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:31\n                            \n                        \n\n                \n                    \n                        Use to determine how the rule is evaluated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        result:     RuleResult\n\n                    \n                \n                    \n                        \n                            Type :     RuleResult\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:25\n                            \n                        \n\n                \n                    \n                        The specified rules result. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            severity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        severity:     Severity\n\n                    \n                \n                    \n                        \n                            Type :     Severity\n\n                        \n                    \n                    \n                        \n                            Default value : Severity.Exception\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:34\n                            \n                        \n\n                \n                    \n                        Use to indicate the severity for a rule violation. The default severity is [Exception]. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        source:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:37\n                            \n                        \n\n                \n                    \n                        Use to indicate the source of the specified rule. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configureRules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configureRules()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/GuidIsValid.ts:31\n                            \n                        \n\n\n                \n                    \n                            Use to configure the rules for evaluation.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRules()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:51\n                            \n                        \n\n\n                \n                    \n                            Use to determine if the composite rule has child-rules that are\nmembers of the specified rule.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processResults\n                            \n                            \n                        \n                    \n                \n                \n                    \nprocessResults()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:64\n                            \n                        \n\n\n                \n                    \n                            Use to process the results of the specified rule result collection. Composite\nrules will have one or more rule results for all child-rules.\nThis method will return result with the evaluation summary and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:40\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:74\n                            \n                        \n\n\n                \n                    \n                            Use to execute the rule. This is the [template] method of the [template method] design\npattern. It will coordindate the execution of any required methods in the processing\npipeline. \n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:82\n                            \n                        \n\n\n                \n                    \n                            Each rule must implement this function and return a valid [RuleResult].\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { StringIsRegExMatch } from \"@buildmotion/rules-engine/src/rules/StringIsRegExMatch\";\nimport * as rules from '@buildmotion/rules-engine';\nimport { CompositeRule } from './CompositeRule'\n\n/**\n * Use this rule to validate the target to determine if it is a valid\n * GUID value.\n */\nexport class GuidIsValid extends CompositeRule {\n\n  /**\n   * Construcctor for the [GuidIsValid] composite rule.\n   * @param name Use to indicate the name of the rule.\n   * @param message Use to indiate the message to display for a false evaluation.\n   * @param target Use to specify the target value to evalute.\n   * @param isDisplayable Use to indicate if the rule result is displayable.\n   */\n  constructor(\n    name: string,\n    message: string,\n    private target: string,\n    isDisplayable: boolean\n  ) {\n    super(name, message, isDisplayable);\n    this.configureRules();\n  }\n\n  /**\n   * Use to configure the rules for evaluation.\n   */\n  private configureRules() {\n    const showRuleViolations = true;\n    const doNotShowRuleViolation = false;\n\n    const guidLength = 36; // Length with hyphens.\n    const guidExpression = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i; // Guid RegExp (with hyphens)\n\n    // determine if the target is a valid guid;\n    this.rules.push(\n      new rules.IsNotNullOrUndefined(\n        'GuidStringIsNotNullOrUndefined'\n        , 'The target value is null or undefined.'\n        , this.target\n        , doNotShowRuleViolation\n      )\n    );\n    if (this.target) {\n      this.rules.push(\n        new rules.AreEqual(\n          'GuidStringLengthIsValid'\n          , 'The length of the target value is not valid.'\n          , this.target.length\n          , guidLength\n          , doNotShowRuleViolation\n        )\n      );\n      this.rules.push(\n        new StringIsRegExMatch(\n          'GuidIsValid'\n          , 'The target value is not a valid guid.'\n          , this.target\n          , guidExpression\n          , doNotShowRuleViolation\n        )\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IRuleComponent.html":{"url":"interfaces/IRuleComponent.html","title":"interface - IRuleComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IRuleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/IRuleComponent.ts\n        \n\n            \n                Description\n            \n            \n                An interface that defines the required shape/structure for all rules. The rule engine\nimplements a Composite pattern for the rules.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    execute\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/IRuleComponent.ts:13\n                            \n                        \n\n\n                \n                    \n                            Implement this method to begin the execution of a rule. The return value\nis a [RuleResult].\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { RuleResult } from './RuleResult';\n\n/**\n * An interface that defines the required shape/structure for all rules. The rule engine\n * implements a Composite pattern for the rules.\n */\nexport interface IRuleComponent {\n  \n  /**\n   * Implement this method to begin the execution of a rule. The return value\n   * is a [RuleResult].\n   */\n  execute(): RuleResult;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IValidationContext.html":{"url":"interfaces/IValidationContext.html","title":"interface - IValidationContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IValidationContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/validation/IValidationContext.ts\n        \n\n            \n                Description\n            \n            \n                Use this interface class to define the structure of a Validation Context.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        isValid\n                                \n                                \n                                        results\n                                \n                                \n                                        rules\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    hasRuleViolations\n                                \n                                \n                                    renderRules\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasRuleViolations\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasRuleViolations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/validation/IValidationContext.ts:31\n                            \n                        \n\n\n                \n                    \n                            Implement this method to indicate if the validation context contains any rule violations. Returns [true]\nwhen there are one or more rule violations.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderRules\n                            \n                            \n                        \n                    \n                \n                \n                    \nrenderRules()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/validation/IValidationContext.ts:36\n                            \n                        \n\n\n                \n                    \n                            Implement this method to render the rules contained in the validation context. \n\n\n                            \n                                Returns :     IValidationContext\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isValid\n                                    \n                                \n                                \n                                    \n                                        isValid:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Use to indicate the status of the validation context. The value is [true] when\nall rules are evaluated without violations.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        results\n                                    \n                                \n                                \n                                    \n                                        results:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of results for all rules evaluated.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rules\n                                    \n                                \n                                \n                                    \n                                        rules:     RulePolicy[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RulePolicy[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of rules that will be evaluated.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     ValidationContextState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ValidationContextState\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Use to indicate the state of the validation context. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ValidationContextState } from './ValidationContextState';\nimport { RuleResult } from '../rules/RuleResult';\nimport { RulePolicy } from '../rules/RulePolicy';\n\n/**\n * Use this interface class to define the structure of a Validation Context.\n */\nexport interface IValidationContext {\n  /**\n   * Use to indicate the status of the validation context. The value is [true] when\n   * all rules are evaluated without violations.\n   */\n  isValid: boolean;\n  /**\n   * Use to indicate the state of the validation context. \n   */\n  state: ValidationContextState;\n  /**\n   * A list of results for all rules evaluated.\n   */\n  results: Array;\n  /**\n   * A list of rules that will be evaluated.\n   */\n  rules: RulePolicy[];\n  \n  /**\n   * Implement this method to indicate if the validation context contains any rule violations. Returns [true]\n   * when there are one or more rule violations.\n   */\n  hasRuleViolations(): boolean;\n\n  /**\n   * Implement this method to render the rules contained in the validation context. \n   */\n  renderRules(): IValidationContext;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsFalse.html":{"url":"classes/IsFalse.html","title":"class - IsFalse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsFalse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/IsFalse.ts\n        \n\n            \n                Description\n            \n            \n                Use to indicate if the value is falsy.\n\n            \n\n            \n                Extends\n            \n            \n                    SimpleRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: boolean, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/IsFalse.ts:12\n                            \n                        \n\n                \n                    \n                            The constructor for the [IsFalse] rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target that the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : Indicates if the rule violation is displayble. Default value is [false].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/IsFalse.ts:12\n                            \n                        \n\n                \n                    \n                        Use to indicate the target value to evaluate.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/IsFalse.ts:35\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { SimpleRule } from './SimpleRule';\nimport { RuleResult } from './RuleResult';\n\n/**\n * Use to indicate if the value is falsy.\n */\nexport class IsFalse extends SimpleRule {\n\n  /**\n   * Use to indicate the target value to evaluate.\n   */\n  target: boolean;\n\n  /**\n   * The constructor for the [IsFalse] rule.\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param target The target that the rules are evaluated against.\n   * @param isDisplayable: Indicates if the rule violation is displayble. Default value is [false].\n   */\n  constructor(\n    name: string,\n    message: string,\n    target: boolean,\n    isDisplayable: boolean = false\n  ) {\n    super(name, message, isDisplayable);\n    this.target = target;\n  }\n\n  /**\n   * Use to render the evaluated result for the specified rule. This method\n   * returns a [RuleResult] with the evaluated result and rule information.\n   */\n  render(): RuleResult {\n    if (this.target) {\n      //if(true)-->false;\n      this.isValid = false;\n    }\n    return new RuleResult(this, this.target);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsNotNullOrUndefined.html":{"url":"classes/IsNotNullOrUndefined.html","title":"class - IsNotNullOrUndefined","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsNotNullOrUndefined\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/IsNotNullOrUndefined.ts\n        \n\n            \n                Description\n            \n            \n                Use to determine if the target is NOT [null] or [undefined].\n\n            \n\n            \n                Extends\n            \n            \n                    SimpleRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: any, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/IsNotNullOrUndefined.ts:12\n                            \n                        \n\n                \n                    \n                            The constructor for the [IsNotNullOrUndefined] rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target that the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : Indicates if the rule violation is displayble. Default value is [false].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     \n\n                    \n                \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/IsNotNullOrUndefined.ts:12\n                            \n                        \n\n                \n                    \n                        The target for the specified rule evaluation.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/IsNotNullOrUndefined.ts:35\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { SimpleRule } from './SimpleRule';\nimport { RuleResult } from './RuleResult';\n\n/**\n * Use to determine if the target is NOT [null] or [undefined].\n */\nexport class IsNotNullOrUndefined extends SimpleRule {\n\n   /**\n   * The target for the specified rule evaluation.\n   */\n  target;\n\n  /**\n   * The constructor for the [IsNotNullOrUndefined] rule.\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param target The target that the rules are evaluated against.\n   * @param isDisplayable: Indicates if the rule violation is displayble. Default value is [false].\n   */\n  constructor(\n    name: string,\n    message: string,\n    target: any,\n    isDisplayable: boolean = false\n  ) {\n    super(name, message, isDisplayable);\n    this.target = target;\n  }\n\n  /**\n   * Use to render the evaluated result for the specified rule. This method\n   * returns a [RuleResult] with the evaluated result and rule information.\n   */\n  render(): RuleResult{\n    if (\n      this.target == null ||\n      this.target === null ||\n      typeof this.target === 'undefined'\n    ) {\n      this.isValid = false;\n    }\n    return new RuleResult(this, this.target);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsNullOrUndefined.html":{"url":"classes/IsNullOrUndefined.html","title":"class - IsNullOrUndefined","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsNullOrUndefined\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/IsNullOrUndefined.ts\n        \n\n            \n                Description\n            \n            \n                Use to determine if the target is [null] or [undefined].\n\n            \n\n            \n                Extends\n            \n            \n                    SimpleRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: any, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/IsNullOrUndefined.ts:12\n                            \n                        \n\n                \n                    \n                            The constructor for the [IsNullOrUndefined] rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target that the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : Indicates if the rule violation is displayble. Default value is [false].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     \n\n                    \n                \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/IsNullOrUndefined.ts:12\n                            \n                        \n\n                \n                    \n                        The target for the specified rule evaluation.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/IsNullOrUndefined.ts:35\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { SimpleRule } from './SimpleRule';\nimport { RuleResult } from './RuleResult';\n\n/**\n * Use to determine if the target is [null] or [undefined].\n */\nexport class IsNullOrUndefined extends SimpleRule {\n\n   /**\n   * The target for the specified rule evaluation.\n   */\n  target;\n\n  /**\n   * The constructor for the [IsNullOrUndefined] rule.\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param target The target that the rules are evaluated against.\n   * @param isDisplayable: Indicates if the rule violation is displayble. Default value is [false].\n   */\n  constructor(\n    name: string,\n    message: string,\n    target: any,\n    isDisplayable: boolean = false\n  ) {\n    super(name, message, isDisplayable);\n    this.target = target;\n  }\n\n  /**\n   * Use to render the evaluated result for the specified rule. This method\n   * returns a [RuleResult] with the evaluated result and rule information.\n   */\n  render(): RuleResult{\n    if (\n      this.target == null ||\n      typeof this.target === undefined ||\n      typeof this.target === 'undefined'\n    ) {\n      this.isValid = true;\n    } else {\n      this.isValid = false;\n    }\n    return new RuleResult(this, this.target);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IsTrue.html":{"url":"classes/IsTrue.html","title":"class - IsTrue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  IsTrue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/IsTrue.ts\n        \n\n            \n                Description\n            \n            \n                Use to determine if the target is truthy.\n\n            \n\n            \n                Extends\n            \n            \n                    SimpleRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: boolean, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/IsTrue.ts:12\n                            \n                        \n\n                \n                    \n                            The constructor for the [IsTrue] rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target that the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : Indicates if the rule violation is displayble. Default value is [true].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/IsTrue.ts:12\n                            \n                        \n\n                \n                    \n                        The target for the specified rule evaluation.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/IsTrue.ts:35\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { SimpleRule } from './SimpleRule';\nimport { RuleResult } from './RuleResult';\n\n/**\n * Use to determine if the target is truthy.\n */\nexport class IsTrue extends SimpleRule {\n\n  /**\n   * The target for the specified rule evaluation.\n   */\n  target: boolean;\n\n  /**\n   * The constructor for the [IsTrue] rule.\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param target The target that the rules are evaluated against.\n   * @param isDisplayable: Indicates if the rule violation is displayble. Default value is [true].\n   */\n  constructor(\n    name: string,\n    message: string,\n    target: boolean,\n    isDisplayable: boolean = true\n  ) {\n    super(name, message, isDisplayable);\n    this.target = target;\n  }\n\n /**\n   * Use to render the evaluated result for the specified rule. This method\n   * returns a [RuleResult] with the evaluated result and rule information.\n   */\n  render(): RuleResult{\n    this.isValid = true;\n    if (this.target === false) {\n      //if(not true)-->false;\n      this.isValid = false;\n    }\n    return new RuleResult(this, this.target);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Max.html":{"url":"classes/Max.html","title":"class - Max","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Max\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/Max.ts\n        \n\n            \n                Description\n            \n            \n                Use the [Max] rule to determine if the target value is equal to or less than\nthe comparison value.\n\n            \n\n            \n                Extends\n            \n            \n                    SimpleRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comparison\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: Primitive, comparison: Primitive, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/Max.ts:22\n                            \n                        \n\n                \n                    \n                            The constructor for the [Max] rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    Primitive\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target that the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        comparison\n                                                  \n                                                        \n                                                                    Primitive\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The comparison target the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : Indicates if the rule violation is displayble. Default value is [false].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparison\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        comparison:     Primitive\n\n                    \n                \n                    \n                        \n                            Type :     Primitive\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/Max.ts:22\n                            \n                        \n\n                \n                    \n                        The comparison item for the specified rule instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     Primitive\n\n                    \n                \n                    \n                        \n                            Type :     Primitive\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/Max.ts:17\n                            \n                        \n\n                \n                    \n                        The target for the rule instance.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/Max.ts:48\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { CompareResult } from 'typescript-dotnet-commonjs/System/CompareResult';\nimport { compare } from 'typescript-dotnet-commonjs/System/Compare';\n\nimport { SimpleRule } from './SimpleRule';\nimport { RuleResult } from './RuleResult';\nimport { Primitive } from './Primitive';\n\n/**\n * Use the [Max] rule to determine if the target value is equal to or less than\n * the comparison value.\n */\nexport class Max extends SimpleRule {\n\n  /**\n   * The target for the rule instance.\n   */\n  target: Primitive;\n\n  /**\n   * The comparison item for the specified rule instance.\n   */\n  comparison: Primitive;\n\n  /**\n   * The constructor for the [Max] rule.\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param target The target that the rules are evaluated against.\n   * @param comparison The comparison target the rules are evaluated against.\n   * @param isDisplayable: Indicates if the rule violation is displayble. Default value is [false].\n   */\n  constructor(\n    name: string,\n    message: string,\n    target: Primitive,\n    comparison: Primitive,\n    isDisplayable: boolean = false\n  ) {\n    super(name, message, isDisplayable);\n    this.target = target;\n    this.comparison = comparison;\n  }\n\n  /**\n   * Use to render the evaluated result for the specified rule. This method\n   * returns a [RuleResult] with the evaluated result and rule information.\n   */\n  render(): RuleResult{\n    const compareResult = compare(this.target, this.comparison, true);\n    if (compareResult === CompareResult.Greater) {\n      this.isValid = false;\n    }\n    return new RuleResult(this, this.target);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Min.html":{"url":"classes/Min.html","title":"class - Min","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Min\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/Min.ts\n        \n\n            \n                Description\n            \n            \n                Use the [Min] rule to determine if the target value is equal to or greater than the minimum\nallowed value [comparison].\n\n            \n\n            \n                Extends\n            \n            \n                    SimpleRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                comparison\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: Primitive, comparison: Primitive, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/Min.ts:22\n                            \n                        \n\n                \n                    \n                            The constructor for the [Min] rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    Primitive\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target that the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        comparison\n                                                  \n                                                        \n                                                                    Primitive\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The comparison target the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : Indicates if the rule violation is displayble. Default value is [false].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparison\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        comparison:     Primitive\n\n                    \n                \n                    \n                        \n                            Type :     Primitive\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/Min.ts:22\n                            \n                        \n\n                \n                    \n                        The comparison item for the specified rule instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     Primitive\n\n                    \n                \n                    \n                        \n                            Type :     Primitive\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/Min.ts:17\n                            \n                        \n\n                \n                    \n                        The target for the rule instance.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/Min.ts:48\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { CompareResult } from 'typescript-dotnet-commonjs/System/CompareResult';\nimport { compare } from 'typescript-dotnet-commonjs/System/Compare';\n\nimport { SimpleRule } from './SimpleRule';\nimport { RuleResult } from './RuleResult';\nimport { Primitive } from './Primitive';\n\n/**\n * Use the [Min] rule to determine if the target value is equal to or greater than the minimum\n * allowed value [comparison].\n */\nexport class Min extends SimpleRule {\n \n  /**\n   * The target for the rule instance.\n   */\n  target: Primitive;\n\n  /**\n   * The comparison item for the specified rule instance.\n   */\n  comparison: Primitive;\n\n  /**\n   * The constructor for the [Min] rule.\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param target The target that the rules are evaluated against.\n   * @param comparison The comparison target the rules are evaluated against.\n   * @param isDisplayable: Indicates if the rule violation is displayble. Default value is [false].\n   */\n  constructor(\n    name: string,\n    message: string,\n    target: Primitive,\n    comparison: Primitive,\n    isDisplayable: boolean = false\n  ) {\n    super(name, message, isDisplayable);\n    this.target = target;\n    this.comparison = comparison;\n  }\n\n  /**\n   * Use to render the evaluated result for the specified rule. This method\n   * returns a [RuleResult] with the evaluated result and rule information.\n   */\n  render(): RuleResult{\n    const compareResult = compare(this.target, this.comparison, true);\n    if (compareResult === CompareResult.Less) {\n      this.isValid = false; //must be equal to or greater than the comparison value;\n    }\n    return new RuleResult(this, this.target);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Range.html":{"url":"classes/Range.html","title":"class - Range","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Range\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/Range.ts\n        \n\n            \n                Description\n            \n            \n                Use this rule to determine if the specified target is within the specified range (start and end) values.\nThe range values are inclusive.\nEx: 1 is within 1 and 3. The target is valid.\nEx: 2 is within 1 and 3. The target is valid.\nEx: 0 is not within 1 and 3. The target is not valid.\nEx: 4 is not within 1 and 3. The target is not valid.\n\n            \n\n            \n                Extends\n            \n            \n                    CompositeRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                end\n                            \n                            \n                                start\n                            \n                            \n                                target\n                            \n                            \n                                hasErrors\n                            \n                            \n                                results\n                            \n                            \n                                rules\n                            \n                            \n                                isDisplayable\n                            \n                            \n                                isValid\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                            \n                                priority\n                            \n                            \n                                renderType\n                            \n                            \n                                result\n                            \n                            \n                                severity\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasRules\n                            \n                            \n                                processResults\n                            \n                            \n                                render\n                            \n                            \n                                execute\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: Primitive, start: number, end: number, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/Range.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor for the [Range] rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : A message to display if the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    Primitive\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target object that the rules will be applied to.\n\n                                                        \n                                                \n                                                \n                                                        start\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The start range value - the lowest allowed boundary value.\n\n                                                        \n                                                \n                                                \n                                                        end\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The end range value - the highest allowed boundary value.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : (Optional) Indicates if the rule violation may be displayed or visible to the caller or client. Default is [false].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            end\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        end:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/Range.ts:27\n                            \n                        \n\n                \n                    \n                        Use to indicate the end value of the range.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            start\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        start:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/Range.ts:31\n                            \n                        \n\n                \n                    \n                        Use to indicate the start value of the range.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     Primitive\n\n                    \n                \n                    \n                        \n                            Type :     Primitive\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/Range.ts:36\n                            \n                        \n\n                \n                    \n                        Use to indicate the [primitive] value that will be evaluated. The value\nmust be within the [start] and the [end] value to be valid.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasErrors:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:13\n                            \n                        \n\n                \n                    \n                        Indicates if the rule has any rule violations.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        results:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:19\n                            \n                        \n\n                \n                    \n                        A list of results for evaluated rules. Rules must be rendered/executed before \nany results are available.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rules:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:24\n                            \n                        \n\n                \n                    \n                        A list of rules for the specified composite rule.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisplayable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisplayable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:28\n                            \n                        \n\n                \n                    \n                        Use to indicate if the rule result is displayable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isValid:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:13\n                            \n                        \n\n                \n                    \n                        Use to indicate the status of the rule. Value is false when the rule contains violations. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:16\n                            \n                        \n\n                \n                    \n                        Use to indicate the display message for a rule violation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:19\n                            \n                        \n\n                \n                    \n                        Use to indicate the name of the specified rule. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:22\n                            \n                        \n\n                \n                    \n                        Use to indicate the priority value of the rule. Higher priority values are evaluated first. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderType:     RenderType\n\n                    \n                \n                    \n                        \n                            Type :     RenderType\n\n                        \n                    \n                    \n                        \n                            Default value : RenderType.EvaluateAllRules\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:31\n                            \n                        \n\n                \n                    \n                        Use to determine how the rule is evaluated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        result:     RuleResult\n\n                    \n                \n                    \n                        \n                            Type :     RuleResult\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:25\n                            \n                        \n\n                \n                    \n                        The specified rules result. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            severity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        severity:     Severity\n\n                    \n                \n                    \n                        \n                            Type :     Severity\n\n                        \n                    \n                    \n                        \n                            Default value : Severity.Exception\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:34\n                            \n                        \n\n                \n                    \n                        Use to indicate the severity for a rule violation. The default severity is [Exception]. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        source:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:37\n                            \n                        \n\n                \n                    \n                        Use to indicate the source of the specified rule. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRules()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:51\n                            \n                        \n\n\n                \n                    \n                            Use to determine if the composite rule has child-rules that are\nmembers of the specified rule.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processResults\n                            \n                            \n                        \n                    \n                \n                \n                    \nprocessResults()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:64\n                            \n                        \n\n\n                \n                    \n                            Use to process the results of the specified rule result collection. Composite\nrules will have one or more rule results for all child-rules.\nThis method will return result with the evaluation summary and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:40\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:74\n                            \n                        \n\n\n                \n                    \n                            Use to execute the rule. This is the [template] method of the [template method] design\npattern. It will coordindate the execution of any required methods in the processing\npipeline. \n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:82\n                            \n                        \n\n\n                \n                    \n                            Each rule must implement this function and return a valid [RuleResult].\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { CompareResult } from 'typescript-dotnet-commonjs/System/CompareResult';\nimport { compare } from 'typescript-dotnet-commonjs/System/Compare';\n\nimport { SimpleRule } from './SimpleRule';\nimport { RuleResult } from './RuleResult';\nimport { Primitive } from './Primitive';\n\nimport { CompositeRule } from './CompositeRule';\nimport { IsNotNullOrUndefined } from './IsNotNullOrUndefined';\nimport { Min } from './Min';\nimport { Max } from './Max';\n\n/**\n * Use this rule to determine if the specified target is within the specified range (start and end) values.\n *\n * The range values are inclusive.\n *\n * Ex: 1 is within 1 and 3. The target is valid.\n * Ex: 2 is within 1 and 3. The target is valid.\n * Ex: 0 is not within 1 and 3. The target is not valid.\n * Ex: 4 is not within 1 and 3. The target is not valid.\n */\nexport class Range extends CompositeRule {\n  /**\n   * Use to indicate the end value of the range.\n   */\n  end: number;\n  /**\n   * Use to indicate the start value of the range.\n   */\n  start: number;\n  /**\n   * Use to indicate the [primitive] value that will be evaluated. The value\n   * must be within the [start] and the [end] value to be valid.\n   */\n  target: Primitive;\n\n  /**\n   * Constructor for the [Range] rule.\n   * @param name The name of the rule.\n   * @param message: A message to display if the rule is violated.\n   * @param target The target object that the rules will be applied to.\n   * @param start The start range value - the lowest allowed boundary value.\n   * @param end The end range value - the highest allowed boundary value.\n   * @param isDisplayable: (Optional) Indicates if the rule violation may be displayed or visible to the caller or client. Default is [false].\n   */\n  constructor(\n    name: string,\n    message: string,\n    target: Primitive,\n    start: number,\n    end: number,\n    isDisplayable: boolean = false\n  ) {\n    super(name, message, isDisplayable);\n    this.target = target;\n    this.start = start;\n    this.end = end;\n    this.isDisplayable = isDisplayable;\n\n    this.rules.push(\n      new IsNotNullOrUndefined(\n        'TargetIsNotNull',\n        'The target is null or undefined.',\n        this.target\n      )\n    );\n\n    if (this.target != null) {\n      this.rules.push(\n        new Min(\n          'MinValue',\n          'The value must be equal to or greater than the start range value.',\n          this.target,\n          this.start\n        )\n      );\n      this.rules.push(\n        new Max(\n          'MaxValue',\n          'The value must be equal to or less than the end range value.',\n          this.target,\n          this.end\n        )\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RulePolicy.html":{"url":"classes/RulePolicy.html","title":"class - RulePolicy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RulePolicy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/RulePolicy.ts\n        \n\n            \n                Description\n            \n            \n                This is the base class for all rules. All rules will extend from this class. New rules\nshould extend [SimpleRule] or [CompositeRule] - these rule abstractions extend [RulePolicy].\n\n            \n\n\n            \n                Implements\n            \n            \n                        IRuleComponent\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDisplayable\n                            \n                            \n                                isValid\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                            \n                                priority\n                            \n                            \n                                renderType\n                            \n                            \n                                result\n                            \n                            \n                                severity\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, isDisplayable: boolean, severity: Severity, priority: number)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/RulePolicy.ts:45\n                            \n                        \n\n                \n                    \n                            Overloaded constructor for the [RulePolicy] class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : Indicates if the rule violation is displayble.\n\n                                                        \n                                                \n                                                \n                                                        severity\n                                                  \n                                                        \n                                                                    Severity\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                (Optional) Use to indicate the rule violation severity. Default is [Exception].\n\n                                                        \n                                                \n                                                \n                                                        priority\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                (Optional) Use to indciate the rule's evaluation priority. Higher numeric values are priority. 0 is default and lowest priority.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisplayable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisplayable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:28\n                            \n                        \n\n                \n                    \n                        Use to indicate if the rule result is displayable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isValid:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:13\n                            \n                        \n\n                \n                    \n                        Use to indicate the status of the rule. Value is false when the rule contains violations. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:16\n                            \n                        \n\n                \n                    \n                        Use to indicate the display message for a rule violation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:19\n                            \n                        \n\n                \n                    \n                        Use to indicate the name of the specified rule. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:22\n                            \n                        \n\n                \n                    \n                        Use to indicate the priority value of the rule. Higher priority values are evaluated first. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderType:     RenderType\n\n                    \n                \n                    \n                        \n                            Type :     RenderType\n\n                        \n                    \n                    \n                        \n                            Default value : RenderType.EvaluateAllRules\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:31\n                            \n                        \n\n                \n                    \n                        Use to determine how the rule is evaluated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        result:     RuleResult\n\n                    \n                \n                    \n                        \n                            Type :     RuleResult\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:25\n                            \n                        \n\n                \n                    \n                        The specified rules result. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            severity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        severity:     Severity\n\n                    \n                \n                    \n                        \n                            Type :     Severity\n\n                        \n                    \n                    \n                        \n                            Default value : Severity.Exception\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:34\n                            \n                        \n\n                \n                    \n                        Use to indicate the severity for a rule violation. The default severity is [Exception]. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        source:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:37\n                            \n                        \n\n                \n                    \n                        Use to indicate the source of the specified rule. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:74\n                            \n                        \n\n\n                \n                    \n                            Use to execute the rule. This is the [template] method of the [template method] design\npattern. It will coordindate the execution of any required methods in the processing\npipeline. \n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RulePolicy.ts:82\n                            \n                        \n\n\n                \n                    \n                            Each rule must implement this function and return a valid [RuleResult].\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { IRuleComponent } from './IRuleComponent';\nimport { RuleResult } from './RuleResult';\nimport { RenderType } from './RenderType';\nimport { Severity } from './Severity';\n\n/**\n * This is the base class for all rules. All rules will extend from this class. New rules\n * should extend [SimpleRule] or [CompositeRule] - these rule abstractions extend [RulePolicy].\n */\nexport class RulePolicy implements IRuleComponent {\n  \n  /** Use to indicate the status of the rule. Value is false when the rule contains violations. */\n  isValid = true;\n  \n  /** Use to indicate the display message for a rule violation. */\n  message: string;\n  \n  /** Use to indicate the name of the specified rule. */\n  name: string;\n  \n  /** Use to indicate the priority value of the rule. Higher priority values are evaluated first. */\n  priority: number;\n  \n  /** The specified rules result. */\n  result: RuleResult;\n  \n  /** Use to indicate if the rule result is displayable. */\n  isDisplayable: boolean;\n  \n  /** Use to determine how the rule is evaluated. */\n  renderType: RenderType = RenderType.EvaluateAllRules;\n  \n  /** Use to indicate the severity for a rule violation. The default severity is [Exception]. */\n  severity: Severity = Severity.Exception;\n  \n  /** Use to indicate the source of the specified rule. */\n  source: string;\n\n  /**\n   * Overloaded constructor for the [RulePolicy] class.\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param isDisplayable: Indicates if the rule violation is displayble.\n   */\n  constructor(name: string, message: string, isDisplayable: boolean);\n  /**\n   * Overloaded constructor for the [RulePolicy] class.\n   * @param name The name of the rule.\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param isDisplayable: Indicates if the rule violation is displayble.\n   * @param severity (Optional) Use to indicate the rule violation severity. Default is [Exception].\n   * @param priority (Optional) Use to indciate the rule's evaluation priority. Higher numeric values are priority. 0 is default and lowest priority.\n   */\n  constructor(\n    name: string,\n    message: string,\n    isDisplayable: boolean = false,\n    severity: Severity = Severity.Exception,\n    priority: number = 0\n  ) {\n    this.name = name;\n    this.message = message;\n    this.isDisplayable = isDisplayable;\n    this.priority = priority;\n    this.severity = severity;\n  }\n\n  /**\n   * Use to execute the rule. This is the [template] method of the [template method] design\n   * pattern. It will coordindate the execution of any required methods in the processing\n   * pipeline. \n   */\n  execute(): RuleResult {\n    console.log('Begin execution of RulePolicy: ' + this.name);\n    return this.render();\n  }\n\n  /**\n   * Each rule must implement this function and return a valid [RuleResult].\n   */\n  render(): RuleResult {\n    throw new Error(\n      'Each concrete rule must implement this function and return a valid Result.'\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RuleResult.html":{"url":"classes/RuleResult.html","title":"class - RuleResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  RuleResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/RuleResult.ts\n        \n\n            \n                Description\n            \n            \n                This class defines the result of a single rule evaluation.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isValid\n                            \n                            \n                                message\n                            \n                            \n                                rulePolicy\n                            \n                            \n                                target\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rulePolicy: RulePolicy, target?: any)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/RuleResult.ts:39\n                            \n                        \n\n                \n                    \n                            Constructor for the RuleResult class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        rulePolicy\n                                                  \n                                                        \n                                                                    RulePolicy\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Use to specify the rule.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    any\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                                Use to specify the target to be evaluated by the rule.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isValid:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RuleResult.ts:12\n                            \n                        \n\n                \n                    \n                        Use to indicate if the rule result is valid or not. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RuleResult.ts:22\n                            \n                        \n\n                \n                    \n                        The rule message to use when the evaluation [isValid] is [false].\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rulePolicy\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rulePolicy:     RulePolicy\n\n                    \n                \n                    \n                        \n                            Type :     RulePolicy\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RuleResult.ts:17\n                            \n                        \n\n                \n                    \n                        The rule that was evaluated.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/RuleResult.ts:27\n                            \n                        \n\n                \n                    \n                        The target item that was evaluated by the specified rule policy.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RulePolicy } from './RulePolicy';\nimport { CompositeRule } from './CompositeRule';\n\n/**\n * This class defines the result of a single rule evaluation.\n */\nexport class RuleResult {\n\n  /**\n   * Use to indicate if the rule result is valid or not. \n   */\n  isValid = false;\n  \n  /**\n   * The rule that was evaluated.\n   */\n  rulePolicy: RulePolicy;\n  \n  /**\n   * The rule message to use when the evaluation [isValid] is [false].\n   */\n  message: string;\n  \n  /**\n   * The target item that was evaluated by the specified rule policy.\n   */\n  target: any;\n\n  /**\n   * Constructor for the RuleResult class.\n   * @param rulePolicy Use to specify the rule.\n   * @param target Use to specify the target to be evaluated by the rule.\n   */\n  constructor(rulePolicy: RulePolicy, target: any);\n  /**\n   * Constructor for the RuleResult class.\n   * @param rulePolicy Use to specify the rule.\n   */\n  constructor(rulePolicy: CompositeRule);\n  /**\n   * Constructor for the RuleResult class.\n   * @param rulePolicy Use to specify the rule.\n   * @param target Use to specify the target to be evaluated by the rule.\n   */\n  constructor(rulePolicy: RulePolicy, target?: any) {\n    if (rulePolicy != null) {\n      this.rulePolicy = rulePolicy;\n      this.isValid = rulePolicy.isValid;\n      this.message = rulePolicy.message;\n    }\n    this.target = target;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceContext.html":{"url":"classes/ServiceContext.html","title":"class - ServiceContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/service/ServiceContext.ts\n        \n\n            \n                Description\n            \n            \n                Use this class to manage the context of a single service call. This\nclass will contain a list of any service messages added during the processing\nof a service request.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                Messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMessage\n                            \n                            \n                                hasErrors\n                            \n                            \n                                isGood\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Messages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Messages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceContext.ts:14\n                            \n                        \n\n                \n                    \n                        A list of service messages added by the application during the processing of the\nspecified service request.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \naddMessage(message: ServiceMessage)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceContext.ts:19\n                            \n                        \n\n\n                \n                    \n                            Use this method to add a new message to the [ServiceContext].\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    ServiceMessage\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceContext.ts:26\n                            \n                        \n\n\n                \n                    \n                            Use to determine if the current [ServiceContext] contains any messages with type of [Error].\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isGood\n                            \n                            \n                        \n                    \n                \n                \n                    \nisGood()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceContext.ts:41\n                            \n                        \n\n\n                \n                    \n                            Use to determine if the current [ServiceContext] does not contain any errors.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { ServiceMessage } from './ServiceMessage';\nimport { MessageType } from './MessageType';\n\n/**\n * Use this class to manage the context of a single service call. This\n * class will contain a list of any service messages added during the processing\n * of a service request.\n */\nexport class ServiceContext {\n  /**\n   * A list of service messages added by the application during the processing of the\n   * specified service request.\n   */\n  Messages: Array = new Array();\n\n  /**\n   * Use this method to add a new message to the [ServiceContext].\n   */\n  addMessage(message: ServiceMessage) {\n    this.Messages.push(message);\n  }\n\n  /**\n   * Use to determine if the current [ServiceContext] contains any messages with type of [Error].\n   */\n  hasErrors(): boolean {\n    if (this.Messages && this.Messages.length > 0) {\n      const errorMessages = this.Messages.filter(\n        f => f.MessageType === MessageType.Error\n      );\n      if (errorMessages.length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Use to determine if the current [ServiceContext] does not contain any errors.\n   */\n  isGood(): boolean {\n    if (this.Messages && this.Messages.length > 0) {\n      const errorMessages = this.Messages.filter(\n        f => f.MessageType === MessageType.Error\n      );\n      if (errorMessages.length > 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ServiceMessage.html":{"url":"classes/ServiceMessage.html","title":"class - ServiceMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ServiceMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/service/ServiceMessage.ts\n        \n\n            \n                Description\n            \n            \n                Use this class to create a message for the current [ServiceContext].\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                DisplayToUser\n                            \n                            \n                                Message\n                            \n                            \n                                MessageType\n                            \n                            \n                                Name\n                            \n                            \n                                Source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                            \n                                WithDisplayToUser\n                            \n                            \n                                WithMessage\n                            \n                            \n                                WithMessageType\n                            \n                            \n                                WithName\n                            \n                            \n                                WithSource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, messageType?: MessageType, source?: string, displayToUser: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/service/ServiceMessage.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the message.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The display text of the message.\n\n                                                        \n                                                \n                                                \n                                                        messageType\n                                                  \n                                                        \n                                                                    MessageType\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                                : Indicates the type of message.\n\n                                                        \n                                                \n                                                \n                                                        source\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                                : Indicates the source of the message.\n\n                                                        \n                                                \n                                                \n                                                        displayToUser\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Use to indicate if the specified message should be displayed to the user. \n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DisplayToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        DisplayToUser:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:21\n                            \n                        \n\n                \n                    \n                        Use to indicate if the specified message should be displayed to the user. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:12\n                            \n                        \n\n                \n                    \n                        Use to specify the message. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MessageType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        MessageType:     MessageType\n\n                    \n                \n                    \n                        \n                            Type :     MessageType\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:15\n                            \n                        \n\n                \n                    \n                        Use to specifiy  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:9\n                            \n                        \n\n                \n                    \n                        Use to specify the name of the message. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            Source\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        Source:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:18\n                            \n                        \n\n                \n                    \n                        Use to indicate the source of the message. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toString\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoString()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:119\n                            \n                        \n\n\n                \n                    \n                            Use this method return a string representing the ServiceMessage.\n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WithDisplayToUser\n                            \n                            \n                        \n                    \n                \n                \n                    \nWithDisplayToUser(displayToUser: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:111\n                            \n                        \n\n\n                \n                    \n                            Use this extension method to set the [DisplayToUser] indicator of the ServiceMessage.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        displayToUser\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : A boolean value to indicate if the message can be displayed to the user.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WithMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \nWithMessage(message: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:84\n                            \n                        \n\n\n                \n                    \n                            Use this extension method to add the message text to the ServiceMessage item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The display text of the service message.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WithMessageType\n                            \n                            \n                        \n                    \n                \n                \n                    \nWithMessageType(messageType: MessageType)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:93\n                            \n                        \n\n\n                \n                    \n                            Use this extension method to set the [MessageType] of the ServiceMessage item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageType\n                                                        \n                                                                    MessageType\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : Use to indicate the message type.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WithName\n                            \n                            \n                        \n                    \n                \n                \n                    \nWithName(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:75\n                            \n                        \n\n\n                \n                    \n                            Use this extension method to add the name of the message.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The name of the service message.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WithSource\n                            \n                            \n                        \n                    \n                \n                \n                    \nWithSource(source: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/service/ServiceMessage.ts:102\n                            \n                        \n\n\n                \n                    \n                            Use this extension method to set the [Source] of the ServiceMessage item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                : Use to indicate the source of the message.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { MessageType } from './MessageType';\n\n/**\n * Use this class to create a message for the current [ServiceContext].\n */\nexport class ServiceMessage {\n  \n  /** Use to specify the name of the message. */\n  Name: string;\n  \n  /** Use to specify the message. */\n  Message: string;\n  \n  /** Use to specifiy  */\n  MessageType: MessageType;\n  \n  /** Use to indicate the source of the message. */\n  Source: string;\n  \n  /** Use to indicate if the specified message should be displayed to the user. */\n  DisplayToUser: boolean;\n\n  /**\n   * The constructor for the [ServiceMessage].\n   * @param name The name of the message.\n   * @param message The display text of the message.\n   * @param messageType: Indicates the type of message.\n   * @param source: Indicates the source of the message.\n   * @param displayToUser: Indicates if the message is displayable.\n   */\n\n  constructor(name: string, message?: string, messageType?: MessageType, source?: string);\n  /**\n   * The constructor for the [ServiceMessage].\n   * @param name The name of the message.\n   * @param message The display text of the message.\n   * @param messageType: Indicates the type of message.\n   * @param source: Indicates the source of the message.\n   */\n  constructor(\n    name: string,\n    message: string,\n    messageType?: MessageType,\n    source?: string\n  );\n  /**\n   * \n   * @param name The name of the message.\n   * @param message The display text of the message.\n   * @param messageType: Indicates the type of message.\n   * @param source: Indicates the source of the message.\n   * @param displayToUser Use to indicate if the specified message should be displayed to the user. \n   */\n  constructor(\n    name: string,\n    message: string,\n    messageType?: MessageType,\n    source?: string,\n    displayToUser: boolean = false\n  ) {\n    this.Name = name;\n    this.Message = message;\n    if (message) {\n      this.MessageType = messageType as MessageType;\n    }\n    if (source) {\n      this.Source = source as string;\n    }\n  }\n\n  /**\n   * Use this extension method to add the name of the message.\n   * @param name The name of the service message.\n   */\n  WithName(name: string) {\n    this.Name = name;\n    return this;\n  }\n\n  /**\n   * Use this extension method to add the message text to the ServiceMessage item.\n   * @param message The display text of the service message.\n   */\n  WithMessage(message: string) {\n    this.Message = message;\n    return this;\n  }\n\n  /**\n   * Use this extension method to set the [MessageType] of the ServiceMessage item.\n   * @param messageType: Use to indicate the message type.\n   */\n  WithMessageType(messageType: MessageType) {\n    this.MessageType = messageType;\n    return this;\n  }\n\n  /**\n   * Use this extension method to set the [Source] of the ServiceMessage item.\n   * @param source: Use to indicate the source of the message.\n   */\n  WithSource(source: string) {\n    this.Source = source;\n    return this;\n  }\n\n  /**\n   * Use this extension method to set the [DisplayToUser] indicator of the ServiceMessage.\n   * @param displayToUser: A boolean value to indicate if the message can be displayed to the user.\n   */\n  WithDisplayToUser(displayToUser: boolean) {\n    this.DisplayToUser = displayToUser;\n    return this;\n  }\n\n  /**\n   * Use this method return a string representing the ServiceMessage.\n   */\n  toString() {\n    return `Name: ${this.Name}; Message: ${\n      this.Message\n    }; MessageType: ${this.MessageType.toString()}; Source: ${\n      this.Source\n    }; DisplayToUser: ${this.DisplayToUser}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SimpleRule.html":{"url":"classes/SimpleRule.html","title":"class - SimpleRule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  SimpleRule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/SimpleRule.ts\n        \n\n            \n                Description\n            \n            \n                Use this class as a base [extends] class for simple rules. A simple contains\na single rule and target to evaluate.\nIf you require a rule that will contain more than one rule, you should\nuse extend the [CompositeRule] class.\n\n            \n\n            \n                Extends\n            \n            \n                    RulePolicy\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isDisplayable\n                            \n                            \n                                isValid\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                            \n                                priority\n                            \n                            \n                                renderType\n                            \n                            \n                                result\n                            \n                            \n                                severity\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/SimpleRule.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor for the simple rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display if the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisplayable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisplayable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:28\n                            \n                        \n\n                \n                    \n                        Use to indicate if the rule result is displayable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isValid:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:13\n                            \n                        \n\n                \n                    \n                        Use to indicate the status of the rule. Value is false when the rule contains violations. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:16\n                            \n                        \n\n                \n                    \n                        Use to indicate the display message for a rule violation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:19\n                            \n                        \n\n                \n                    \n                        Use to indicate the name of the specified rule. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:22\n                            \n                        \n\n                \n                    \n                        Use to indicate the priority value of the rule. Higher priority values are evaluated first. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderType:     RenderType\n\n                    \n                \n                    \n                        \n                            Type :     RenderType\n\n                        \n                    \n                    \n                        \n                            Default value : RenderType.EvaluateAllRules\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:31\n                            \n                        \n\n                \n                    \n                        Use to determine how the rule is evaluated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        result:     RuleResult\n\n                    \n                \n                    \n                        \n                            Type :     RuleResult\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:25\n                            \n                        \n\n                \n                    \n                        The specified rules result. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            severity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        severity:     Severity\n\n                    \n                \n                    \n                        \n                            Type :     Severity\n\n                        \n                    \n                    \n                        \n                            Default value : Severity.Exception\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:34\n                            \n                        \n\n                \n                    \n                        Use to indicate the severity for a rule violation. The default severity is [Exception]. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        source:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:37\n                            \n                        \n\n                \n                    \n                        Use to indicate the source of the specified rule. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:74\n                            \n                        \n\n\n                \n                    \n                            Use to execute the rule. This is the [template] method of the [template method] design\npattern. It will coordindate the execution of any required methods in the processing\npipeline. \n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     RulePolicy\n\n                                \n                            \n                        \n                            \n                                    Defined in RulePolicy:82\n                            \n                        \n\n\n                \n                    \n                            Each rule must implement this function and return a valid [RuleResult].\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { RulePolicy } from './RulePolicy';\n\n/**\n * Use this class as a base [extends] class for simple rules. A simple contains\n * a single rule and target to evaluate.\n *\n * If you require a rule that will contain more than one rule, you should\n * use extend the [CompositeRule] class.\n */\nexport class SimpleRule extends RulePolicy {\n  /**\n   * The constructor for the simple rule.\n   * @param name The name of the rule.\n   * @param message The message to display if the rule is violated.\n   */\n  constructor(name: string, message: string, isDisplayable: boolean) {\n    super(name, message, isDisplayable);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringIsNotNullEmptyRange.html":{"url":"classes/StringIsNotNullEmptyRange.html","title":"class - StringIsNotNullEmptyRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringIsNotNullEmptyRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/StringIsNotNullEmptyRange.ts\n        \n\n            \n                Description\n            \n            \n                Use this rule to validate a string target. A valid string is not null or undefined; and it\nis within the specified minimum and maxiumum length.\n\n            \n\n            \n                Extends\n            \n            \n                    CompositeRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                maxLength\n                            \n                            \n                                minLength\n                            \n                            \n                                target\n                            \n                            \n                                hasErrors\n                            \n                            \n                                results\n                            \n                            \n                                rules\n                            \n                            \n                                isDisplayable\n                            \n                            \n                                isValid\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                            \n                                priority\n                            \n                            \n                                renderType\n                            \n                            \n                                result\n                            \n                            \n                                severity\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureRules\n                            \n                            \n                                    Public\n                                hasRules\n                            \n                            \n                                processResults\n                            \n                            \n                                render\n                            \n                            \n                                execute\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: Primitive, minLength: number, maxLength: number, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/StringIsNotNullEmptyRange.ts:30\n                            \n                        \n\n                \n                    \n                            The constructor for the [StringIsNotNullEmptyRangeRule].\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    Primitive\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target that the rule(s) will be evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        minLength\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The minimum allowed length of the target value.\n\n                                                        \n                                                \n                                                \n                                                        maxLength\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The maximum allowed length of the target value.\n\n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            maxLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxLength:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/StringIsNotNullEmptyRange.ts:20\n                            \n                        \n\n                \n                    \n                        Use to indicate the maximum length of the target value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            minLength\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        minLength:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/StringIsNotNullEmptyRange.ts:25\n                            \n                        \n\n                \n                    \n                        Use to indicate the minimum lenth of the target value.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            target\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        target:     Primitive\n\n                    \n                \n                    \n                        \n                            Type :     Primitive\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/StringIsNotNullEmptyRange.ts:30\n                            \n                        \n\n                \n                    \n                        Use to provide the target [Primitive] to evaluate for the specified rule.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasErrors:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:13\n                            \n                        \n\n                \n                    \n                        Indicates if the rule has any rule violations.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        results:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:19\n                            \n                        \n\n                \n                    \n                        A list of results for evaluated rules. Rules must be rendered/executed before \nany results are available.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rules:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:24\n                            \n                        \n\n                \n                    \n                        A list of rules for the specified composite rule.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisplayable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisplayable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:28\n                            \n                        \n\n                \n                    \n                        Use to indicate if the rule result is displayable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isValid:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:13\n                            \n                        \n\n                \n                    \n                        Use to indicate the status of the rule. Value is false when the rule contains violations. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:16\n                            \n                        \n\n                \n                    \n                        Use to indicate the display message for a rule violation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:19\n                            \n                        \n\n                \n                    \n                        Use to indicate the name of the specified rule. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:22\n                            \n                        \n\n                \n                    \n                        Use to indicate the priority value of the rule. Higher priority values are evaluated first. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderType:     RenderType\n\n                    \n                \n                    \n                        \n                            Type :     RenderType\n\n                        \n                    \n                    \n                        \n                            Default value : RenderType.EvaluateAllRules\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:31\n                            \n                        \n\n                \n                    \n                        Use to determine how the rule is evaluated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        result:     RuleResult\n\n                    \n                \n                    \n                        \n                            Type :     RuleResult\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:25\n                            \n                        \n\n                \n                    \n                        The specified rules result. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            severity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        severity:     Severity\n\n                    \n                \n                    \n                        \n                            Type :     Severity\n\n                        \n                    \n                    \n                        \n                            Default value : Severity.Exception\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:34\n                            \n                        \n\n                \n                    \n                        Use to indicate the severity for a rule violation. The default severity is [Exception]. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        source:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:37\n                            \n                        \n\n                \n                    \n                        Use to indicate the source of the specified rule. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            configureRules\n                            \n                            \n                        \n                    \n                \n                \n                    \nconfigureRules()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/StringIsNotNullEmptyRange.ts:60\n                            \n                        \n\n\n                \n                    \n                            A helper method to configure/add rules to the validation context.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRules()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:51\n                            \n                        \n\n\n                \n                    \n                            Use to determine if the composite rule has child-rules that are\nmembers of the specified rule.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processResults\n                            \n                            \n                        \n                    \n                \n                \n                    \nprocessResults()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:64\n                            \n                        \n\n\n                \n                    \n                            Use to process the results of the specified rule result collection. Composite\nrules will have one or more rule results for all child-rules.\nThis method will return result with the evaluation summary and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:40\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:74\n                            \n                        \n\n\n                \n                    \n                            Use to execute the rule. This is the [template] method of the [template method] design\npattern. It will coordindate the execution of any required methods in the processing\npipeline. \n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:82\n                            \n                        \n\n\n                \n                    \n                            Each rule must implement this function and return a valid [RuleResult].\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { CompareResult } from 'typescript-dotnet-commonjs/System/CompareResult';\nimport { compare } from 'typescript-dotnet-commonjs/System/Compare';\n\nimport { SimpleRule } from './SimpleRule';\nimport { RuleResult } from './RuleResult';\nimport { Primitive } from './Primitive';\n\nimport { CompositeRule } from './CompositeRule';\nimport { IsNotNullOrUndefined } from './IsNotNullOrUndefined';\nimport { Range } from './Range';\n\n/**\n * Use this rule to validate a string target. A valid string is not null or undefined; and it\n * is within the specified minimum and maxiumum length.\n */\nexport class StringIsNotNullEmptyRange extends CompositeRule {\n  /**\n   * Use to indicate the maximum length of the target value.\n   */\n  maxLength: number;\n\n  /**\n   * Use to indicate the minimum lenth of the target value.\n   */\n  minLength: number;\n\n  /**\n   * Use to provide the target [Primitive] to evaluate for the specified rule.\n   */\n  target: Primitive;\n\n  /**\n   * The constructor for the [StringIsNotNullEmptyRangeRule].\n   * @param name The name of the rule.\n   * @param message The message to display when the rule is violated.\n   * @param target The target that the rule(s) will be evaluated against.\n   * @param minLength The minimum allowed length of the target value.\n   * @param maxLength The maximum allowed length of the target value.\n   */\n  constructor(\n    name: string,\n    message: string,\n    target: Primitive,\n    minLength: number,\n    maxLength: number,\n    isDisplayable: boolean = false\n  ) {\n    super(name, message, isDisplayable);\n    this.target = target;\n    this.minLength = minLength;\n    this.maxLength = maxLength;\n\n    this.configureRules();\n  }\n\n  /**\n   * A helper method to configure/add rules to the validation context.\n   */\n\n  configureRules() {\n    this.rules.push(\n      new IsNotNullOrUndefined(\n        'StringIsNotNull',\n        'The string target is null or undefined.',\n        this.target\n      )\n    );\n    if (this.target != null) {\n      this.rules.push(\n        new Range(\n          'TargetLengthIsWithinRange',\n          'The string value is not within the specified range.',\n          this.target.toString().length,\n          this.minLength,\n          this.maxLength\n        )\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StringIsRegExMatch.html":{"url":"classes/StringIsRegExMatch.html","title":"class - StringIsRegExMatch","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  StringIsRegExMatch\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/rules/StringIsRegExMatch.ts\n        \n\n            \n                Description\n            \n            \n                Use this rule to determine if the string value matches the specified\nregular expression.\n\n            \n\n            \n                Extends\n            \n            \n                    CompositeRule\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hasErrors\n                            \n                            \n                                results\n                            \n                            \n                                rules\n                            \n                            \n                                isDisplayable\n                            \n                            \n                                isValid\n                            \n                            \n                                message\n                            \n                            \n                                name\n                            \n                            \n                                priority\n                            \n                            \n                                renderType\n                            \n                            \n                                result\n                            \n                            \n                                severity\n                            \n                            \n                                source\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                configureRules\n                            \n                            \n                                    Public\n                                hasRules\n                            \n                            \n                                processResults\n                            \n                            \n                                render\n                            \n                            \n                                execute\n                            \n                            \n                                render\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, message: string, target: string, expression: RegExp, isDisplayable: boolean)\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/rules/StringIsRegExMatch.ts:8\n                            \n                        \n\n                \n                    \n                            The constructor for the [IsNotNullOrUndefined] rule.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The name of the rule.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The message to display when the rule is violated.\n\n                                                        \n                                                \n                                                \n                                                        target\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The target that the rules are evaluated against.\n\n                                                        \n                                                \n                                                \n                                                        expression\n                                                  \n                                                        \n                                                                    RegExp\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        isDisplayable\n                                                  \n                                                        \n                                                                    boolean\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                : Indicates if the rule violation is displayble. Default value is [false].\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hasErrors:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:13\n                            \n                        \n\n                \n                    \n                        Indicates if the rule has any rule violations.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        results:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:19\n                            \n                        \n\n                \n                    \n                        A list of results for evaluated rules. Rules must be rendered/executed before \nany results are available.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rules:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:24\n                            \n                        \n\n                \n                    \n                        A list of rules for the specified composite rule.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isDisplayable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isDisplayable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:28\n                            \n                        \n\n                \n                    \n                        Use to indicate if the rule result is displayable. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isValid\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isValid:     \n\n                    \n                \n                    \n                        \n                            Default value : true\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:13\n                            \n                        \n\n                \n                    \n                        Use to indicate the status of the rule. Value is false when the rule contains violations. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:16\n                            \n                        \n\n                \n                    \n                        Use to indicate the display message for a rule violation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:19\n                            \n                        \n\n                \n                    \n                        Use to indicate the name of the specified rule. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            priority\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        priority:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:22\n                            \n                        \n\n                \n                    \n                        Use to indicate the priority value of the rule. Higher priority values are evaluated first. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        renderType:     RenderType\n\n                    \n                \n                    \n                        \n                            Type :     RenderType\n\n                        \n                    \n                    \n                        \n                            Default value : RenderType.EvaluateAllRules\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:31\n                            \n                        \n\n                \n                    \n                        Use to determine how the rule is evaluated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            result\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        result:     RuleResult\n\n                    \n                \n                    \n                        \n                            Type :     RuleResult\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:25\n                            \n                        \n\n                \n                    \n                        The specified rules result. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            severity\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        severity:     Severity\n\n                    \n                \n                    \n                        \n                            Type :     Severity\n\n                        \n                    \n                    \n                        \n                            Default value : Severity.Exception\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:34\n                            \n                        \n\n                \n                    \n                        Use to indicate the severity for a rule violation. The default severity is [Exception]. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        source:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:37\n                            \n                        \n\n                \n                    \n                        Use to indicate the source of the specified rule. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            configureRules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configureRules()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/rules/StringIsRegExMatch.ts:31\n                            \n                        \n\n\n                \n                    \n                            Use to configure the rules to be evaluated.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasRules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasRules()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:51\n                            \n                        \n\n\n                \n                    \n                            Use to determine if the composite rule has child-rules that are\nmembers of the specified rule.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            processResults\n                            \n                            \n                        \n                    \n                \n                \n                    \nprocessResults()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:64\n                            \n                        \n\n\n                \n                    \n                            Use to process the results of the specified rule result collection. Composite\nrules will have one or more rule results for all child-rules.\nThis method will return result with the evaluation summary and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:40\n                            \n                        \n\n\n                \n                    \n                            Use to render the evaluated result for the specified rule. This method\nreturns a [RuleResult] with the evaluated result and rule information.\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            execute\n                            \n                            \n                        \n                    \n                \n                \n                    \nexecute()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:74\n                            \n                        \n\n\n                \n                    \n                            Use to execute the rule. This is the [template] method of the [template method] design\npattern. It will coordindate the execution of any required methods in the processing\npipeline. \n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            render\n                            \n                            \n                        \n                    \n                \n                \n                    \nrender()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     CompositeRule\n\n                                \n                            \n                        \n                            \n                                    Defined in CompositeRule:82\n                            \n                        \n\n\n                \n                    \n                            Each rule must implement this function and return a valid [RuleResult].\n\n\n                            \n                                Returns :     RuleResult\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import * as rules from '@buildmotion/rules-engine';\nimport { CompositeRule } from './CompositeRule'\n\n/**\n * Use this rule to determine if the string value matches the specified\n * regular expression.\n */\nexport class StringIsRegExMatch extends CompositeRule {\n\n    /**\n    * The constructor for the [IsNotNullOrUndefined] rule.\n    * @param name The name of the rule.\n    * @param message The message to display when the rule is violated.\n    * @param target The target that the rules are evaluated against.\n    * @param isDisplayable: Indicates if the rule violation is displayble. Default value is [false].\n    */\n   constructor(\n        name: string,\n        message: string,\n        private target: string,\n        private expression: RegExp,\n        isDisplayable: boolean\n    ) {\n        super(name, message, isDisplayable);\n        this.configureRules();\n    }\n\n    /**\n     * Use to configure the rules to be evaluated.\n     */\n    private configureRules() {\n        const showRuleViolations = true;\n        const doNotShowRuleViolation = false;\n\n        // determine if the target is a valid object;\n        this.rules.push(\n            new rules.IsNotNullOrUndefined(\n                'StringIsNotNullOrUndefined'\n                , 'The target value is null or undefined.'\n                , this.target\n                , doNotShowRuleViolation\n            )\n        );\n        if (this.target) {\n            this.rules.push(\n                new rules.IsTrue(\n                    'StringIsRegExpMatch'\n                    , 'The target value is not a match.'\n                    , this.expression.test(this.target)\n                    , doNotShowRuleViolation\n                )\n            );\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationContext.html":{"url":"classes/ValidationContext.html","title":"class - ValidationContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rules-engine/src/validation/ValidationContext.ts\n        \n\n            \n                Description\n            \n            \n                Use this class to create a new Validation Context for your application. With this\ncontext, you can add rules and evaluate the rules.\nAfter the rules are evaluated, you can use the Validation Context to determine if there are\nany rule violations.\n\n            \n\n\n            \n                Implements\n            \n            \n                        IValidationContext\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                results\n                            \n                            \n                                rules\n                            \n                            \n                                source\n                            \n                            \n                                state\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addRule\n                            \n                            \n                                hasRuleViolations\n                            \n                            \n                                renderRules\n                            \n                            \n                                withSource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in libs/rules-engine/src/validation/ValidationContext.ts:33\n                            \n                        \n\n                \n                    \n                            The constructor for the base validation context.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            results\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        results:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/validation/ValidationContext.ts:23\n                            \n                        \n\n                \n                    \n                        A list of results for all evaluated rules that belong to the validation context.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            rules\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        rules:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : new Array()\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/validation/ValidationContext.ts:28\n                            \n                        \n\n                \n                    \n                        A list of rules for rendering.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            source\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        source:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/validation/ValidationContext.ts:33\n                            \n                        \n\n                \n                    \n                        The source of the specified validation context instance.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        state:     ValidationContextState\n\n                    \n                \n                    \n                        \n                            Type :     ValidationContextState\n\n                        \n                    \n                    \n                        \n                            Default value : ValidationContextState.NotEvaluated\n                        \n                    \n                        \n                            \n                                    Defined in libs/rules-engine/src/validation/ValidationContext.ts:18\n                            \n                        \n\n                \n                    \n                        Use to indicate the state of the validation context. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addRule\n                            \n                            \n                        \n                    \n                \n                \n                    \naddRule(rule: RulePolicy)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/validation/ValidationContext.ts:47\n                            \n                        \n\n\n                \n                    \n                            Use this method to add a new rule to the ValidationContext.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rule\n                                                        \n                                                                    RulePolicy\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasRuleViolations\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasRuleViolations()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/validation/ValidationContext.ts:81\n                            \n                        \n\n\n                \n                    \n                            Use to determine if the validation context has any rule violations.\n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            renderRules\n                            \n                            \n                        \n                    \n                \n                \n                    \nrenderRules()\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/validation/ValidationContext.ts:67\n                            \n                        \n\n\n                \n                    \n                            Use this method to execute the rules added to the [ValidationContext].\n\n\n                            \n                                Returns :     this\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            withSource\n                            \n                            \n                        \n                    \n                \n                \n                    \nwithSource(source: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in libs/rules-engine/src/validation/ValidationContext.ts:59\n                            \n                        \n\n\n                \n                    \n                            Use this extension method to set the [Source] for the current validation context.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     this\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isValid\n                    \n                \n\n                \n                    \n                        getisValid()\n                    \n                \n                            \n                                \n                                    Defined in libs/rules-engine/src/validation/ValidationContext.ts:96\n                                \n                            \n                    \n                        \n                                *Use to indicate if the validation context is valid - no rule violations.\n\n\n                                \n                                    Returns :     boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { IValidationContext } from './IValidationContext';\nimport { ValidationContextState } from './ValidationContextState';\nimport { RuleResult } from '../rules/RuleResult';\nimport { RulePolicy } from '../rules/RulePolicy';\n\n/**\n * Use this class to create a new Validation Context for your application. With this\n * context, you can add rules and evaluate the rules.\n *\n * After the rules are evaluated, you can use the Validation Context to determine if there are\n * any rule violations.\n */\nexport class ValidationContext implements IValidationContext {\n\n  /**\n   * Use to indicate the state of the validation context. \n   */\n  state: ValidationContextState = ValidationContextState.NotEvaluated;\n\n  /**\n   * A list of results for all evaluated rules that belong to the validation context.\n   */\n  results: Array = new Array();\n\n  /**\n   * A list of rules for rendering.\n   */\n  rules: Array = new Array();\n\n  /**\n   * The source of the specified validation context instance.\n   */\n  source: string;\n\n  /**\n   * The constructor for the base validation context.\n   */\n  constructor() {\n    console.log(\n      'The [ValidationContext] is ready for action(s). All things are good until broken...'\n    );\n  }\n\n  /**\n   * Use this method to add a new rule to the ValidationContext.\n   */\n  addRule(rule: RulePolicy) {\n    if (this.source) {\n      rule.source = this.source;\n    }\n    this.rules.push(rule);\n    return this;\n  }\n\n  /**\n   * Use this extension method to set the [Source] for the current validation context.\n   * @param source\n   */\n  withSource(source: string) {\n    this.source = source;\n    return this;\n  }\n\n  /**\n   * Use this method to execute the rules added to the [ValidationContext].\n   */\n  renderRules() {\n    this.results = new Array();\n    if (this.rules && this.rules.length  r.priority)\n      .forEach(r => this.results.push(r.execute()));\n    return this;\n  }\n\n  /**\n   * Use to determine if the validation context has any rule violations.\n   */\n  hasRuleViolations(): boolean {\n    let hasViolations = false;\n    if (this.rules) {\n      const ruleViolationsCount =\n        this.rules && this.rules.filter(r => r.isValid === false).length;\n      if (ruleViolationsCount > 0) {\n        hasViolations = true;\n      }\n    }\n    return hasViolations;\n  }\n\n  /**\n   * *Use to indicate if the validation context is valid - no rule violations.\n   */\n  get isValid(): boolean {\n    let isRuleValid = true;\n    if (this.rules) {\n      const invalidRulesCount = this.rules.filter(r => r.isValid === false)\n        .length;\n      if (invalidRulesCount > 0) {\n        isRuleValid = false;\n      }\n    }\n    return isRuleValid;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    libs/rules-engine/src/rules/AreEqual.ts\n            \n            \n                class\n            \n            \n                AreEqual\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/AreNotEqual.ts\n            \n            \n                class\n            \n            \n                AreNotEqual\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/CompositeRule.ts\n            \n            \n                class\n            \n            \n                CompositeRule\n            \n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/GuidIsValid.ts\n            \n            \n                class\n            \n            \n                GuidIsValid\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/IRuleComponent.ts\n            \n            \n                interface\n            \n            \n                IRuleComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/IsFalse.ts\n            \n            \n                class\n            \n            \n                IsFalse\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/IsNotNullOrUndefined.ts\n            \n            \n                class\n            \n            \n                IsNotNullOrUndefined\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/IsNullOrUndefined.ts\n            \n            \n                class\n            \n            \n                IsNullOrUndefined\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/IsTrue.ts\n            \n            \n                class\n            \n            \n                IsTrue\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/Max.ts\n            \n            \n                class\n            \n            \n                Max\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/Min.ts\n            \n            \n                class\n            \n            \n                Min\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/Range.ts\n            \n            \n                class\n            \n            \n                Range\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/RulePolicy.ts\n            \n            \n                class\n            \n            \n                RulePolicy\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/RuleResult.ts\n            \n            \n                class\n            \n            \n                RuleResult\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/SimpleRule.ts\n            \n            \n                class\n            \n            \n                SimpleRule\n            \n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/StringIsNotNullEmptyRange.ts\n            \n            \n                class\n            \n            \n                StringIsNotNullEmptyRange\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/rules/StringIsRegExMatch.ts\n            \n            \n                class\n            \n            \n                StringIsRegExMatch\n            \n            \n                100 %\n                (20/20)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/service/ServiceContext.ts\n            \n            \n                class\n            \n            \n                ServiceContext\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/service/ServiceMessage.ts\n            \n            \n                class\n            \n            \n                ServiceMessage\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/validation/IValidationContext.ts\n            \n            \n                interface\n            \n            \n                IValidationContext\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    libs/rules-engine/src/validation/ValidationContext.ts\n            \n            \n                class\n            \n            \n                ValidationContext\n            \n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 5.2.7\n        \n            @angular/common : 5.2.7\n        \n            @angular/compiler : 5.2.7\n        \n            @angular/core : 5.2.7\n        \n            @angular/forms : 5.2.7\n        \n            @angular/http : 5.2.7\n        \n            @angular/platform-browser : 5.2.7\n        \n            @angular/platform-browser-dynamic : 5.2.7\n        \n            @angular/router : 5.2.7\n        \n            core-js : ^2.4.1\n        \n            rxjs : ^5.5.6\n        \n            zone.js : ^0.8.19\n        \n            @nrwl/nx : 1.0.3\n        \n            @ngrx/effects : 5.2.0\n        \n            @ngrx/router-store : 5.0.1\n        \n            @ngrx/store : 5.2.0\n        \n            @ngrx/store-devtools : 5.2.0\n        \n            ngrx-store-freeze : ^0.2.1\n        \n            simplemde : ^1.11.2\n        \n            typescript-dotnet-commonjs : ^4.10.0\n        \n            viz : ^0.0.1\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            MessageType   (libs/.../MessageType.ts)\n                        \n                        \n                            RenderType   (libs/.../RenderType.ts)\n                        \n                        \n                            Severity   (libs/.../Severity.ts)\n                        \n                        \n                            ValidationContextState   (libs/.../ValidationContextState.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/rules-engine/src/service/MessageType.ts\n    \n        \n            \n                \n                    \n                        \n                        MessageType\n                    \n                \n                    \n                        \n                            Use to indicate the type for the [ServiceMessage].\n\n                        \n                    \n                        \n                            \n                                 Information\n                            \n                        \n                        \n                            \n                                Value: 1\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n                        \n                            \n                                Value: 2\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value: 3\n                            \n                        \n            \n        \n\n    libs/rules-engine/src/rules/RenderType.ts\n    \n        \n            \n                \n                    \n                        \n                        RenderType\n                    \n                \n                    \n                        \n                            Use to indicate how the rule-set is rendered.\n\n                        \n                    \n                        \n                            \n                                 ExitOnFirstFalseEvaluation\n                            \n                        \n                        \n                            \n                                 ExitOnFirstTrueEvaluation\n                            \n                        \n                        \n                            \n                                 EvaluateAllRules\n                            \n                        \n            \n        \n\n    libs/rules-engine/src/rules/Severity.ts\n    \n        \n            \n                \n                    \n                        \n                        Severity\n                    \n                \n                    \n                        \n                            Use to indicate the severity if the rule is violated.\n\n                        \n                    \n                        \n                            \n                                 Exception\n                            \n                        \n                        \n                            \n                                 Warning\n                            \n                        \n                        \n                            \n                                 Information\n                            \n                        \n            \n        \n\n    libs/rules-engine/src/validation/ValidationContextState.ts\n    \n        \n            \n                \n                    \n                        \n                        ValidationContextState\n                    \n                \n                    \n                        \n                            Use this enumeration to determine the state of the Validation Context.\n\n                        \n                    \n                        \n                            \n                                 NotEvaluated\n                            \n                        \n                        \n                            \n                                 Success\n                            \n                        \n                        \n                            \n                                 Failure\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nBuildmotionWorkspace\nThis project was generated with Angular CLI using Nrwl Nx.\nNrwl Extensions for Angular (Nx)\n\nNx is an open source toolkit for enterprise Angular applications.\nNx is designed to help you create and build enterprise grade Angular applications. It provides an opinionated approach to application project structure and patterns.\nQuick Start & Documentation\nWatch a 5-minute video on how to get started with Nx.\nGenerate your first application\nRun ng generate app myapp to generate an application. When using Nx, you can create multiple applications and libraries in the same CLI workspace. Read more here.\nDevelopment server\nRun ng serve --app=myapp for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name --app=myapp to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build --app=myapp to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        BuildMotionRulesEngineModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        19 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Primitive   (libs/.../Primitive.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/rules-engine/src/rules/Primitive.ts\n    \n        \n            \n                \n                    \n                        \n                        Primitive\n                    \n                \n                \n                    \n                        Primitive:     string | number | boolean\n\n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
